(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./node_modules/moment/locale sync recursive ^\\.\\/.*$":
/*!**************************************************!*\
  !*** ./node_modules/moment/locale sync ^\.\/.*$ ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": "./node_modules/moment/locale/af.js",
	"./af.js": "./node_modules/moment/locale/af.js",
	"./ar": "./node_modules/moment/locale/ar.js",
	"./ar-dz": "./node_modules/moment/locale/ar-dz.js",
	"./ar-dz.js": "./node_modules/moment/locale/ar-dz.js",
	"./ar-kw": "./node_modules/moment/locale/ar-kw.js",
	"./ar-kw.js": "./node_modules/moment/locale/ar-kw.js",
	"./ar-ly": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ly.js": "./node_modules/moment/locale/ar-ly.js",
	"./ar-ma": "./node_modules/moment/locale/ar-ma.js",
	"./ar-ma.js": "./node_modules/moment/locale/ar-ma.js",
	"./ar-sa": "./node_modules/moment/locale/ar-sa.js",
	"./ar-sa.js": "./node_modules/moment/locale/ar-sa.js",
	"./ar-tn": "./node_modules/moment/locale/ar-tn.js",
	"./ar-tn.js": "./node_modules/moment/locale/ar-tn.js",
	"./ar.js": "./node_modules/moment/locale/ar.js",
	"./az": "./node_modules/moment/locale/az.js",
	"./az.js": "./node_modules/moment/locale/az.js",
	"./be": "./node_modules/moment/locale/be.js",
	"./be.js": "./node_modules/moment/locale/be.js",
	"./bg": "./node_modules/moment/locale/bg.js",
	"./bg.js": "./node_modules/moment/locale/bg.js",
	"./bm": "./node_modules/moment/locale/bm.js",
	"./bm.js": "./node_modules/moment/locale/bm.js",
	"./bn": "./node_modules/moment/locale/bn.js",
	"./bn.js": "./node_modules/moment/locale/bn.js",
	"./bo": "./node_modules/moment/locale/bo.js",
	"./bo.js": "./node_modules/moment/locale/bo.js",
	"./br": "./node_modules/moment/locale/br.js",
	"./br.js": "./node_modules/moment/locale/br.js",
	"./bs": "./node_modules/moment/locale/bs.js",
	"./bs.js": "./node_modules/moment/locale/bs.js",
	"./ca": "./node_modules/moment/locale/ca.js",
	"./ca.js": "./node_modules/moment/locale/ca.js",
	"./cs": "./node_modules/moment/locale/cs.js",
	"./cs.js": "./node_modules/moment/locale/cs.js",
	"./cv": "./node_modules/moment/locale/cv.js",
	"./cv.js": "./node_modules/moment/locale/cv.js",
	"./cy": "./node_modules/moment/locale/cy.js",
	"./cy.js": "./node_modules/moment/locale/cy.js",
	"./da": "./node_modules/moment/locale/da.js",
	"./da.js": "./node_modules/moment/locale/da.js",
	"./de": "./node_modules/moment/locale/de.js",
	"./de-at": "./node_modules/moment/locale/de-at.js",
	"./de-at.js": "./node_modules/moment/locale/de-at.js",
	"./de-ch": "./node_modules/moment/locale/de-ch.js",
	"./de-ch.js": "./node_modules/moment/locale/de-ch.js",
	"./de.js": "./node_modules/moment/locale/de.js",
	"./dv": "./node_modules/moment/locale/dv.js",
	"./dv.js": "./node_modules/moment/locale/dv.js",
	"./el": "./node_modules/moment/locale/el.js",
	"./el.js": "./node_modules/moment/locale/el.js",
	"./en-SG": "./node_modules/moment/locale/en-SG.js",
	"./en-SG.js": "./node_modules/moment/locale/en-SG.js",
	"./en-au": "./node_modules/moment/locale/en-au.js",
	"./en-au.js": "./node_modules/moment/locale/en-au.js",
	"./en-ca": "./node_modules/moment/locale/en-ca.js",
	"./en-ca.js": "./node_modules/moment/locale/en-ca.js",
	"./en-gb": "./node_modules/moment/locale/en-gb.js",
	"./en-gb.js": "./node_modules/moment/locale/en-gb.js",
	"./en-ie": "./node_modules/moment/locale/en-ie.js",
	"./en-ie.js": "./node_modules/moment/locale/en-ie.js",
	"./en-il": "./node_modules/moment/locale/en-il.js",
	"./en-il.js": "./node_modules/moment/locale/en-il.js",
	"./en-nz": "./node_modules/moment/locale/en-nz.js",
	"./en-nz.js": "./node_modules/moment/locale/en-nz.js",
	"./eo": "./node_modules/moment/locale/eo.js",
	"./eo.js": "./node_modules/moment/locale/eo.js",
	"./es": "./node_modules/moment/locale/es.js",
	"./es-do": "./node_modules/moment/locale/es-do.js",
	"./es-do.js": "./node_modules/moment/locale/es-do.js",
	"./es-us": "./node_modules/moment/locale/es-us.js",
	"./es-us.js": "./node_modules/moment/locale/es-us.js",
	"./es.js": "./node_modules/moment/locale/es.js",
	"./et": "./node_modules/moment/locale/et.js",
	"./et.js": "./node_modules/moment/locale/et.js",
	"./eu": "./node_modules/moment/locale/eu.js",
	"./eu.js": "./node_modules/moment/locale/eu.js",
	"./fa": "./node_modules/moment/locale/fa.js",
	"./fa.js": "./node_modules/moment/locale/fa.js",
	"./fi": "./node_modules/moment/locale/fi.js",
	"./fi.js": "./node_modules/moment/locale/fi.js",
	"./fo": "./node_modules/moment/locale/fo.js",
	"./fo.js": "./node_modules/moment/locale/fo.js",
	"./fr": "./node_modules/moment/locale/fr.js",
	"./fr-ca": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ca.js": "./node_modules/moment/locale/fr-ca.js",
	"./fr-ch": "./node_modules/moment/locale/fr-ch.js",
	"./fr-ch.js": "./node_modules/moment/locale/fr-ch.js",
	"./fr.js": "./node_modules/moment/locale/fr.js",
	"./fy": "./node_modules/moment/locale/fy.js",
	"./fy.js": "./node_modules/moment/locale/fy.js",
	"./ga": "./node_modules/moment/locale/ga.js",
	"./ga.js": "./node_modules/moment/locale/ga.js",
	"./gd": "./node_modules/moment/locale/gd.js",
	"./gd.js": "./node_modules/moment/locale/gd.js",
	"./gl": "./node_modules/moment/locale/gl.js",
	"./gl.js": "./node_modules/moment/locale/gl.js",
	"./gom-latn": "./node_modules/moment/locale/gom-latn.js",
	"./gom-latn.js": "./node_modules/moment/locale/gom-latn.js",
	"./gu": "./node_modules/moment/locale/gu.js",
	"./gu.js": "./node_modules/moment/locale/gu.js",
	"./he": "./node_modules/moment/locale/he.js",
	"./he.js": "./node_modules/moment/locale/he.js",
	"./hi": "./node_modules/moment/locale/hi.js",
	"./hi.js": "./node_modules/moment/locale/hi.js",
	"./hr": "./node_modules/moment/locale/hr.js",
	"./hr.js": "./node_modules/moment/locale/hr.js",
	"./hu": "./node_modules/moment/locale/hu.js",
	"./hu.js": "./node_modules/moment/locale/hu.js",
	"./hy-am": "./node_modules/moment/locale/hy-am.js",
	"./hy-am.js": "./node_modules/moment/locale/hy-am.js",
	"./id": "./node_modules/moment/locale/id.js",
	"./id.js": "./node_modules/moment/locale/id.js",
	"./is": "./node_modules/moment/locale/is.js",
	"./is.js": "./node_modules/moment/locale/is.js",
	"./it": "./node_modules/moment/locale/it.js",
	"./it-ch": "./node_modules/moment/locale/it-ch.js",
	"./it-ch.js": "./node_modules/moment/locale/it-ch.js",
	"./it.js": "./node_modules/moment/locale/it.js",
	"./ja": "./node_modules/moment/locale/ja.js",
	"./ja.js": "./node_modules/moment/locale/ja.js",
	"./jv": "./node_modules/moment/locale/jv.js",
	"./jv.js": "./node_modules/moment/locale/jv.js",
	"./ka": "./node_modules/moment/locale/ka.js",
	"./ka.js": "./node_modules/moment/locale/ka.js",
	"./kk": "./node_modules/moment/locale/kk.js",
	"./kk.js": "./node_modules/moment/locale/kk.js",
	"./km": "./node_modules/moment/locale/km.js",
	"./km.js": "./node_modules/moment/locale/km.js",
	"./kn": "./node_modules/moment/locale/kn.js",
	"./kn.js": "./node_modules/moment/locale/kn.js",
	"./ko": "./node_modules/moment/locale/ko.js",
	"./ko.js": "./node_modules/moment/locale/ko.js",
	"./ku": "./node_modules/moment/locale/ku.js",
	"./ku.js": "./node_modules/moment/locale/ku.js",
	"./ky": "./node_modules/moment/locale/ky.js",
	"./ky.js": "./node_modules/moment/locale/ky.js",
	"./lb": "./node_modules/moment/locale/lb.js",
	"./lb.js": "./node_modules/moment/locale/lb.js",
	"./lo": "./node_modules/moment/locale/lo.js",
	"./lo.js": "./node_modules/moment/locale/lo.js",
	"./lt": "./node_modules/moment/locale/lt.js",
	"./lt.js": "./node_modules/moment/locale/lt.js",
	"./lv": "./node_modules/moment/locale/lv.js",
	"./lv.js": "./node_modules/moment/locale/lv.js",
	"./me": "./node_modules/moment/locale/me.js",
	"./me.js": "./node_modules/moment/locale/me.js",
	"./mi": "./node_modules/moment/locale/mi.js",
	"./mi.js": "./node_modules/moment/locale/mi.js",
	"./mk": "./node_modules/moment/locale/mk.js",
	"./mk.js": "./node_modules/moment/locale/mk.js",
	"./ml": "./node_modules/moment/locale/ml.js",
	"./ml.js": "./node_modules/moment/locale/ml.js",
	"./mn": "./node_modules/moment/locale/mn.js",
	"./mn.js": "./node_modules/moment/locale/mn.js",
	"./mr": "./node_modules/moment/locale/mr.js",
	"./mr.js": "./node_modules/moment/locale/mr.js",
	"./ms": "./node_modules/moment/locale/ms.js",
	"./ms-my": "./node_modules/moment/locale/ms-my.js",
	"./ms-my.js": "./node_modules/moment/locale/ms-my.js",
	"./ms.js": "./node_modules/moment/locale/ms.js",
	"./mt": "./node_modules/moment/locale/mt.js",
	"./mt.js": "./node_modules/moment/locale/mt.js",
	"./my": "./node_modules/moment/locale/my.js",
	"./my.js": "./node_modules/moment/locale/my.js",
	"./nb": "./node_modules/moment/locale/nb.js",
	"./nb.js": "./node_modules/moment/locale/nb.js",
	"./ne": "./node_modules/moment/locale/ne.js",
	"./ne.js": "./node_modules/moment/locale/ne.js",
	"./nl": "./node_modules/moment/locale/nl.js",
	"./nl-be": "./node_modules/moment/locale/nl-be.js",
	"./nl-be.js": "./node_modules/moment/locale/nl-be.js",
	"./nl.js": "./node_modules/moment/locale/nl.js",
	"./nn": "./node_modules/moment/locale/nn.js",
	"./nn.js": "./node_modules/moment/locale/nn.js",
	"./pa-in": "./node_modules/moment/locale/pa-in.js",
	"./pa-in.js": "./node_modules/moment/locale/pa-in.js",
	"./pl": "./node_modules/moment/locale/pl.js",
	"./pl.js": "./node_modules/moment/locale/pl.js",
	"./pt": "./node_modules/moment/locale/pt.js",
	"./pt-br": "./node_modules/moment/locale/pt-br.js",
	"./pt-br.js": "./node_modules/moment/locale/pt-br.js",
	"./pt.js": "./node_modules/moment/locale/pt.js",
	"./ro": "./node_modules/moment/locale/ro.js",
	"./ro.js": "./node_modules/moment/locale/ro.js",
	"./ru": "./node_modules/moment/locale/ru.js",
	"./ru.js": "./node_modules/moment/locale/ru.js",
	"./sd": "./node_modules/moment/locale/sd.js",
	"./sd.js": "./node_modules/moment/locale/sd.js",
	"./se": "./node_modules/moment/locale/se.js",
	"./se.js": "./node_modules/moment/locale/se.js",
	"./si": "./node_modules/moment/locale/si.js",
	"./si.js": "./node_modules/moment/locale/si.js",
	"./sk": "./node_modules/moment/locale/sk.js",
	"./sk.js": "./node_modules/moment/locale/sk.js",
	"./sl": "./node_modules/moment/locale/sl.js",
	"./sl.js": "./node_modules/moment/locale/sl.js",
	"./sq": "./node_modules/moment/locale/sq.js",
	"./sq.js": "./node_modules/moment/locale/sq.js",
	"./sr": "./node_modules/moment/locale/sr.js",
	"./sr-cyrl": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr-cyrl.js": "./node_modules/moment/locale/sr-cyrl.js",
	"./sr.js": "./node_modules/moment/locale/sr.js",
	"./ss": "./node_modules/moment/locale/ss.js",
	"./ss.js": "./node_modules/moment/locale/ss.js",
	"./sv": "./node_modules/moment/locale/sv.js",
	"./sv.js": "./node_modules/moment/locale/sv.js",
	"./sw": "./node_modules/moment/locale/sw.js",
	"./sw.js": "./node_modules/moment/locale/sw.js",
	"./ta": "./node_modules/moment/locale/ta.js",
	"./ta.js": "./node_modules/moment/locale/ta.js",
	"./te": "./node_modules/moment/locale/te.js",
	"./te.js": "./node_modules/moment/locale/te.js",
	"./tet": "./node_modules/moment/locale/tet.js",
	"./tet.js": "./node_modules/moment/locale/tet.js",
	"./tg": "./node_modules/moment/locale/tg.js",
	"./tg.js": "./node_modules/moment/locale/tg.js",
	"./th": "./node_modules/moment/locale/th.js",
	"./th.js": "./node_modules/moment/locale/th.js",
	"./tl-ph": "./node_modules/moment/locale/tl-ph.js",
	"./tl-ph.js": "./node_modules/moment/locale/tl-ph.js",
	"./tlh": "./node_modules/moment/locale/tlh.js",
	"./tlh.js": "./node_modules/moment/locale/tlh.js",
	"./tr": "./node_modules/moment/locale/tr.js",
	"./tr.js": "./node_modules/moment/locale/tr.js",
	"./tzl": "./node_modules/moment/locale/tzl.js",
	"./tzl.js": "./node_modules/moment/locale/tzl.js",
	"./tzm": "./node_modules/moment/locale/tzm.js",
	"./tzm-latn": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm-latn.js": "./node_modules/moment/locale/tzm-latn.js",
	"./tzm.js": "./node_modules/moment/locale/tzm.js",
	"./ug-cn": "./node_modules/moment/locale/ug-cn.js",
	"./ug-cn.js": "./node_modules/moment/locale/ug-cn.js",
	"./uk": "./node_modules/moment/locale/uk.js",
	"./uk.js": "./node_modules/moment/locale/uk.js",
	"./ur": "./node_modules/moment/locale/ur.js",
	"./ur.js": "./node_modules/moment/locale/ur.js",
	"./uz": "./node_modules/moment/locale/uz.js",
	"./uz-latn": "./node_modules/moment/locale/uz-latn.js",
	"./uz-latn.js": "./node_modules/moment/locale/uz-latn.js",
	"./uz.js": "./node_modules/moment/locale/uz.js",
	"./vi": "./node_modules/moment/locale/vi.js",
	"./vi.js": "./node_modules/moment/locale/vi.js",
	"./x-pseudo": "./node_modules/moment/locale/x-pseudo.js",
	"./x-pseudo.js": "./node_modules/moment/locale/x-pseudo.js",
	"./yo": "./node_modules/moment/locale/yo.js",
	"./yo.js": "./node_modules/moment/locale/yo.js",
	"./zh-cn": "./node_modules/moment/locale/zh-cn.js",
	"./zh-cn.js": "./node_modules/moment/locale/zh-cn.js",
	"./zh-hk": "./node_modules/moment/locale/zh-hk.js",
	"./zh-hk.js": "./node_modules/moment/locale/zh-hk.js",
	"./zh-tw": "./node_modules/moment/locale/zh-tw.js",
	"./zh-tw.js": "./node_modules/moment/locale/zh-tw.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) { // check for number or string
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return id;
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/moment/locale sync recursive ^\\.\\/.*$";

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(function() {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = function() { return []; };
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
module.exports = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";

/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _modules_home_home_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/home/home.component */ "./src/app/modules/home/home.component.ts");
/* harmony import */ var _modules_topology_topology_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/topology/topology.component */ "./src/app/modules/topology/topology.component.ts");
/* harmony import */ var _modules_isl_isl_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/isl/isl.component */ "./src/app/modules/isl/isl.component.ts");
/* harmony import */ var _modules_isl_isl_layout_isl_layout_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/isl/isl-layout/isl-layout.component */ "./src/app/modules/isl/isl-layout/isl-layout.component.ts");
/* harmony import */ var _modules_isl_isl_detail_isl_detail_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/isl/isl-detail/isl-detail.component */ "./src/app/modules/isl/isl-detail/isl-detail.component.ts");
/* harmony import */ var _modules_switches__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/switches */ "./src/app/modules/switches/index.ts");
/* harmony import */ var _modules_flows__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/flows */ "./src/app/modules/flows/index.ts");
/* harmony import */ var _modules_switches_port_details_port_details_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/switches/port-details/port-details.component */ "./src/app/modules/switches/port-details/port-details.component.ts");
/* harmony import */ var _modules_usermanagement_usermanagement_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/usermanagement/usermanagement.component */ "./src/app/modules/usermanagement/usermanagement.component.ts");
/* harmony import */ var _modules_useractivity_useractivity_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/useractivity/useractivity.component */ "./src/app/modules/useractivity/useractivity.component.ts");
/* harmony import */ var _modules_settings_settings_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/settings/settings.component */ "./src/app/modules/settings/settings.component.ts");
/* harmony import */ var _common_components_logout_logout_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./common/components/logout/logout.component */ "./src/app/common/components/logout/logout.component.ts");
/* harmony import */ var _modules_settings_session_session_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modules/settings/session/session.component */ "./src/app/modules/settings/session/session.component.ts");
/* harmony import */ var _modules_networkpath_networkpath_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./modules/networkpath/networkpath.component */ "./src/app/modules/networkpath/networkpath.component.ts");
/* harmony import */ var _modules_reports_affected_flows_report_affected_flows_report_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./modules/reports/affected-flows-report/affected-flows-report.component */ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.ts");


















const routes = [{
        path: '',
        redirectTo: '/home',
        pathMatch: 'full'
    }, {
        path: 'home',
        component: _modules_home_home_component__WEBPACK_IMPORTED_MODULE_3__["HomeComponent"],
        data: { title: 'HOME' }
    }, {
        path: 'topology',
        component: _modules_topology_topology_component__WEBPACK_IMPORTED_MODULE_4__["TopologyComponent"],
        data: {
            breadcrumb: "Topology",
            title: 'tOPOLOGY'
        }
    }, {
        path: 'flows',
        component: _modules_flows__WEBPACK_IMPORTED_MODULE_9__["FlowLayoutComponent"],
        data: {
            breadcrumb: "Flows"
        },
        children: [
            {
                path: "",
                component: _modules_flows__WEBPACK_IMPORTED_MODULE_9__["FlowComponent"],
                data: {
                    breadcrumb: ""
                },
            },
            {
                path: "add-new",
                component: _modules_flows__WEBPACK_IMPORTED_MODULE_9__["FlowAddComponent"],
                data: {
                    breadcrumb: "New Flow"
                }
            },
            {
                path: "details/:id",
                component: _modules_flows__WEBPACK_IMPORTED_MODULE_9__["FlowDetailComponent"],
                data: {
                    breadcrumb: "{id}",
                    links: [{
                            "label": "Edit",
                            "link": "/flows/edit/{id}"
                        }
                    ]
                }
            },
            {
                path: "edit/:id",
                component: _modules_flows__WEBPACK_IMPORTED_MODULE_9__["FlowEditComponent"],
                data: {
                    breadcrumb: "{id}"
                }
            },
        ]
    }, {
        path: 'isl',
        component: _modules_isl_isl_layout_isl_layout_component__WEBPACK_IMPORTED_MODULE_6__["IslLayoutComponent"],
        data: {
            breadcrumb: "ISL"
        },
        children: [{
                path: "",
                component: _modules_isl_isl_component__WEBPACK_IMPORTED_MODULE_5__["IslComponent"],
                data: {
                    breadcrumb: ""
                },
            }, {
                path: "switch/isl/:src_switch/:src_port/:dst_switch/:dst_port",
                component: _modules_isl_isl_detail_isl_detail_component__WEBPACK_IMPORTED_MODULE_7__["IslDetailComponent"],
                data: {
                    breadcrumb: "ISL Details"
                }
            }
        ]
    }, {
        path: 'switches',
        component: _modules_switches__WEBPACK_IMPORTED_MODULE_8__["SwitchLayoutComponent"],
        data: {
            breadcrumb: 'Switches'
        },
        children: [
            {
                path: "",
                component: _modules_switches__WEBPACK_IMPORTED_MODULE_8__["SwitchesComponent"],
                data: {
                    breadcrumb: ""
                }
            }, {
                path: "details/:id",
                component: _modules_switches__WEBPACK_IMPORTED_MODULE_8__["SwitchDetailComponent"],
                data: {
                    breadcrumb: "{id}",
                },
                children: [
                    {
                        path: "port/:port",
                        component: _modules_switches_port_details_port_details_component__WEBPACK_IMPORTED_MODULE_10__["PortDetailsComponent"],
                        data: {
                            breadcrumb: "{port}",
                        }
                    }
                ]
            },
        ]
    }, {
        path: 'usermanagement',
        component: _modules_usermanagement_usermanagement_component__WEBPACK_IMPORTED_MODULE_11__["UsermanagementComponent"],
        data: {
            breadcrumb: "User Management"
        }
    }, {
        path: 'useractivity',
        component: _modules_useractivity_useractivity_component__WEBPACK_IMPORTED_MODULE_12__["UseractivityComponent"],
        data: {
            breadcrumb: "User Activity"
        }
    },
    {
        path: 'storesetting',
        component: _modules_settings_settings_component__WEBPACK_IMPORTED_MODULE_13__["SettingsComponent"],
        data: {
            breadcrumb: "Settings"
        }
    },
    {
        path: 'application-setting',
        component: _modules_settings_session_session_component__WEBPACK_IMPORTED_MODULE_15__["SessionComponent"],
        data: {
            breadcrumb: "Application Settings"
        }
    },
    {
        path: 'logout',
        component: _common_components_logout_logout_component__WEBPACK_IMPORTED_MODULE_14__["LogoutComponent"]
    },
    {
        path: 'networkpath',
        component: _modules_networkpath_networkpath_component__WEBPACK_IMPORTED_MODULE_16__["NetworkpathComponent"],
        data: {
            breadcrumb: "Available Path",
            title: 'Available Path'
        }
    },
    {
        path: 'flowreport',
        component: _modules_reports_affected_flows_report_affected_flows_report_component__WEBPACK_IMPORTED_MODULE_17__["AffectedFlowsReportComponent"],
        data: {
            breadcrumb: "Affected Flows"
        }
    },
    {
        path: '**',
        redirectTo: 'home'
    }
];
let AppRoutingModule = class AppRoutingModule {
};
AppRoutingModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"])({
        imports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"].forRoot(routes, { scrollPositionRestoration: "top" })],
        exports: [_angular_router__WEBPACK_IMPORTED_MODULE_2__["RouterModule"]]
    })
], AppRoutingModule);



/***/ }),

/***/ "./src/app/app.component.css":
/*!***********************************!*\
  !*** ./src/app/app.component.css ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/app.component.html":
/*!************************************!*\
  !*** ./src/app/app.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--The content below is only a placeholder and can be replaced.-->\r\n<ngx-spinner name=\"commonSpinner\" bdColor = \"rgba(51, 51, 51, 0.8)\" size=\"medium\" color = \"#4ec0ec\" type = \"ball-clip-rotate\">\r\n<p *ngIf=\"loaderMessage\">{{loaderMessage}}<span class=\"loader__dot\">.</span><span class=\"loader__dot\">.</span><span class=\"loader__dot\">.</span></p>\r\n</ngx-spinner>\r\n<app-header></app-header>\r\n<app-sidebar></app-sidebar>\r\n<div class=\"content\">\r\n\t<div class=\"row\">\r\n\t\t<div class=\"navigation-bar container-fluid\" [class.home-container]=\"currentUrl == '/home'\">\r\n\t\t\t<app-breadcrumb></app-breadcrumb>\r\n\t\t</div>\r\n\t</div>\r\n\t\r\n\t<div class=\"container-fluid\">\r\n    \t<router-outlet></router-outlet>\r\n    </div>\r\n</div>\r\n<app-footer></app-footer>"

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/services/common.service */ "./src/app/common/services/common.service.ts");








let AppComponent = class AppComponent {
    constructor(userService, loader, appLoader, cdr, titleService, router, commonService) {
        this.userService = userService;
        this.loader = loader;
        this.appLoader = appLoader;
        this.cdr = cdr;
        this.titleService = titleService;
        this.router = router;
        this.commonService = commonService;
        this.loaderMessage = null;
        this.currentUrl = '';
        this.sidebarSetting = false;
        this.loaderName = 'commonSpinner';
        this.router.events.subscribe((_) => {
            this.currentUrl = router.url;
            var scrollToTop = window.setInterval(function () {
                $("div.content").scrollTop(0);
                if ($("div.content").scrollTop() <= 0) {
                    window.clearInterval(scrollToTop);
                }
            }, 16);
        });
        this.userService.getLoggedInUserInfo().subscribe((user) => {
            if (user && user.permissions) {
                localStorage.setItem("is2FaEnabled", user.is2FaEnabled);
                localStorage.setItem("username", user.name);
                localStorage.setItem("user_id", user.user_id);
                localStorage.setItem("userPermissions", JSON.stringify(user.permissions));
                this.commonService.setUserData(user);
            }
        });
    }
    ngOnInit() {
        this.appLoader.messageReciever.subscribe((data) => {
            if (data.show) {
                this.loader.show(this.loaderName);
                this.loaderMessage = data.message;
            }
            else if (!data.show) {
                this.loader.hide(this.loaderName);
                this.loaderMessage = null;
            }
        });
        setTimeout(() => {
            this.sidebarSetting = localStorage.getItem('sidebarToggled') || false;
            if (this.sidebarSetting) {
                jQuery('body').addClass('mini-sidebar');
            }
            else {
                jQuery('body').removeClass('mini-sidebar');
            }
        });
    }
    ngAfterViewChecked() {
        this.cdr.detectChanges();
    }
};
AppComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-root',
        template: __webpack_require__(/*! ./app.component.html */ "./src/app/app.component.html"),
        styles: [__webpack_require__(/*! ./app.component.css */ "./src/app/app.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_user_service__WEBPACK_IMPORTED_MODULE_4__["UserService"],
        ngx_spinner__WEBPACK_IMPORTED_MODULE_2__["NgxSpinnerService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"],
        _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_7__["CommonService"]])
], AppComponent);



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var angular_font_awesome__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-font-awesome */ "./node_modules/angular-font-awesome/dist/angular-font-awesome.js");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-select/ng-select */ "./node_modules/@ng-select/ng-select/fesm2015/ng-select.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ng_select2_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ng-select2-component */ "./node_modules/ng-select2-component/fesm2015/ng-select2-component.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm2015/animations.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var ng_dygraphs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ng-dygraphs */ "./node_modules/ng-dygraphs/ng-dygraphs.js");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var ngx_typeahead__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ngx-typeahead */ "./node_modules/ngx-typeahead/esm2015/ngx-typeahead.js");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var _common_components_sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./common/components/sidebar/sidebar.component */ "./src/app/common/components/sidebar/sidebar.component.ts");
/* harmony import */ var _common_components_header_header_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./common/components/header/header.component */ "./src/app/common/components/header/header.component.ts");
/* harmony import */ var _modules_home_home_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./modules/home/home.component */ "./src/app/modules/home/home.component.ts");
/* harmony import */ var _modules_topology_topology_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./modules/topology/topology.component */ "./src/app/modules/topology/topology.component.ts");
/* harmony import */ var _modules_isl_isl_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./modules/isl/isl.component */ "./src/app/modules/isl/isl.component.ts");
/* harmony import */ var _modules_switches_switches_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./modules/switches/switches.component */ "./src/app/modules/switches/switches.component.ts");
/* harmony import */ var _common_components_footer_footer_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./common/components/footer/footer.component */ "./src/app/common/components/footer/footer.component.ts");
/* harmony import */ var _modules_isl_datatable_datatable_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./modules/isl/datatable/datatable.component */ "./src/app/modules/isl/datatable/datatable.component.ts");
/* harmony import */ var _modules_flows__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./modules/flows */ "./src/app/modules/flows/index.ts");
/* harmony import */ var _modules_usermanagement_usermanagement_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./modules/usermanagement/usermanagement.component */ "./src/app/modules/usermanagement/usermanagement.component.ts");
/* harmony import */ var _modules_useractivity_useractivity_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./modules/useractivity/useractivity.component */ "./src/app/modules/useractivity/useractivity.component.ts");
/* harmony import */ var _modules_isl_isl_list_isl_list_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./modules/isl/isl-list/isl-list.component */ "./src/app/modules/isl/isl-list/isl-list.component.ts");
/* harmony import */ var _common_components_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./common/components/breadcrumb/breadcrumb.component */ "./src/app/common/components/breadcrumb/breadcrumb.component.ts");
/* harmony import */ var _modules_usermanagement_users_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./modules/usermanagement/users/user-list/user-list.component */ "./src/app/modules/usermanagement/users/user-list/user-list.component.ts");
/* harmony import */ var _modules_usermanagement_users_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./modules/usermanagement/users/user-edit/user-edit.component */ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.ts");
/* harmony import */ var _modules_usermanagement_users_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./modules/usermanagement/users/user-add/user-add.component */ "./src/app/modules/usermanagement/users/user-add/user-add.component.ts");
/* harmony import */ var _modules_usermanagement_roles_role_list_role_list_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./modules/usermanagement/roles/role-list/role-list.component */ "./src/app/modules/usermanagement/roles/role-list/role-list.component.ts");
/* harmony import */ var _modules_usermanagement_roles_role_add_role_add_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./modules/usermanagement/roles/role-add/role-add.component */ "./src/app/modules/usermanagement/roles/role-add/role-add.component.ts");
/* harmony import */ var _modules_usermanagement_roles_role_edit_role_edit_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./modules/usermanagement/roles/role-edit/role-edit.component */ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.ts");
/* harmony import */ var _modules_usermanagement_permissions_permission_list_permission_list_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./modules/usermanagement/permissions/permission-list/permission-list.component */ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.ts");
/* harmony import */ var _modules_usermanagement_permissions_permission_add_permission_add_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./modules/usermanagement/permissions/permission-add/permission-add.component */ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.ts");
/* harmony import */ var _modules_usermanagement_permissions_permission_edit_permission_edit_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./modules/usermanagement/permissions/permission-edit/permission-edit.component */ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.ts");
/* harmony import */ var _modules_isl_isl_detail_isl_detail_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./modules/isl/isl-detail/isl-detail.component */ "./src/app/modules/isl/isl-detail/isl-detail.component.ts");
/* harmony import */ var _modules_isl_isl_layout_isl_layout_component__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./modules/isl/isl-layout/isl-layout.component */ "./src/app/modules/isl/isl-layout/isl-layout.component.ts");
/* harmony import */ var _common_pipes_mb_pipe__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./common/pipes/mb.pipe */ "./src/app/common/pipes/mb.pipe.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var _modules_switches_switch_layout_switch_layout_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./modules/switches/switch-layout/switch-layout.component */ "./src/app/modules/switches/switch-layout/switch-layout.component.ts");
/* harmony import */ var _modules_switches_switch_list_switch_list_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./modules/switches/switch-list/switch-list.component */ "./src/app/modules/switches/switch-list/switch-list.component.ts");
/* harmony import */ var _common_services_alertify_service__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./common/services/alertify.service */ "./src/app/common/services/alertify.service.ts");
/* harmony import */ var _common_dygraph_dygraph_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./common/dygraph/dygraph.component */ "./src/app/common/dygraph/dygraph.component.ts");
/* harmony import */ var _modules_usermanagement_roles_role_assign_role_assign_component__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./modules/usermanagement/roles/role-assign/role-assign.component */ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.ts");
/* harmony import */ var _modules_usermanagement_roles_role_view_role_view_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./modules/usermanagement/roles/role-view/role-view.component */ "./src/app/modules/usermanagement/roles/role-view/role-view.component.ts");
/* harmony import */ var _modules_usermanagement_permissions_permission_view_permission_view_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./modules/usermanagement/permissions/permission-view/permission-view.component */ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.ts");
/* harmony import */ var _modules_usermanagement_permissions_permission_assign_permission_assign_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./modules/usermanagement/permissions/permission-assign/permission-assign.component */ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.ts");
/* harmony import */ var _modules_flows_flow_path_flow_path_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./modules/flows/flow-path/flow-path.component */ "./src/app/modules/flows/flow-path/flow-path.component.ts");
/* harmony import */ var _common_directives_datetimepicker_directive__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./common/directives/datetimepicker.directive */ "./src/app/common/directives/datetimepicker.directive.ts");
/* harmony import */ var _modules_flows_flow_path_graph_flow_path_graph_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./modules/flows/flow-path-graph/flow-path-graph.component */ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.ts");
/* harmony import */ var _modules_switches_switch_detail_switch_detail_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./modules/switches/switch-detail/switch-detail.component */ "./src/app/modules/switches/switch-detail/switch-detail.component.ts");
/* harmony import */ var _common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./common/components/otp/otp.component */ "./src/app/common/components/otp/otp.component.ts");
/* harmony import */ var _common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./common/components/modal/modal.component */ "./src/app/common/components/modal/modal.component.ts");
/* harmony import */ var _common_components_changepassword_changepassword_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./common/components/changepassword/changepassword.component */ "./src/app/common/components/changepassword/changepassword.component.ts");
/* harmony import */ var _modules_switches_port_details_port_details_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./modules/switches/port-details/port-details.component */ "./src/app/modules/switches/port-details/port-details.component.ts");
/* harmony import */ var _modules_switches_rule_details_rule_details_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./modules/switches/rule-details/rule-details.component */ "./src/app/modules/switches/rule-details/rule-details.component.ts");
/* harmony import */ var _modules_flows_flow_graph_flow_graph_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./modules/flows/flow-graph/flow-graph.component */ "./src/app/modules/flows/flow-graph/flow-graph.component.ts");
/* harmony import */ var _modules_topology_topology_menu_topology_menu_component__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./modules/topology/topology-menu/topology-menu.component */ "./src/app/modules/topology/topology-menu/topology-menu.component.ts");
/* harmony import */ var _modules_switches_port_list_port_list_component__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./modules/switches/port-list/port-list.component */ "./src/app/modules/switches/port-list/port-list.component.ts");
/* harmony import */ var _modules_topology_affected_isl_affected_isl_component__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./modules/topology/affected-isl/affected-isl.component */ "./src/app/modules/topology/affected-isl/affected-isl.component.ts");
/* harmony import */ var _modules_topology_failed_isl_failed_isl_component__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./modules/topology/failed-isl/failed-isl.component */ "./src/app/modules/topology/failed-isl/failed-isl.component.ts");
/* harmony import */ var _modules_topology_unidirectional_isl_unidirectional_isl_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./modules/topology/unidirectional-isl/unidirectional-isl.component */ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.ts");
/* harmony import */ var _modules_settings_settings_component__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./modules/settings/settings.component */ "./src/app/modules/settings/settings.component.ts");
/* harmony import */ var _modules_settings_identity_server_identity_server_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./modules/settings/identity-server/identity-server.component */ "./src/app/modules/settings/identity-server/identity-server.component.ts");
/* harmony import */ var _modules_settings_link_store_link_store_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./modules/settings/link-store/link-store.component */ "./src/app/modules/settings/link-store/link-store.component.ts");
/* harmony import */ var ngx_contextmenu__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ngx-contextmenu */ "./node_modules/ngx-contextmenu/fesm2015/ngx-contextmenu.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _common_components_logout_logout_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./common/components/logout/logout.component */ "./src/app/common/components/logout/logout.component.ts");
/* harmony import */ var _modules_flows_flow_datatables_flow_datatables_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./modules/flows/flow-datatables/flow-datatables.component */ "./src/app/modules/flows/flow-datatables/flow-datatables.component.ts");
/* harmony import */ var _modules_switches_switch_datatable_switch_datatable_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./modules/switches/switch-datatable/switch-datatable.component */ "./src/app/modules/switches/switch-datatable/switch-datatable.component.ts");
/* harmony import */ var _modules_flows_flow_contracts_flow_contracts_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./modules/flows/flow-contracts/flow-contracts.component */ "./src/app/modules/flows/flow-contracts/flow-contracts.component.ts");
/* harmony import */ var _modules_settings_switch_store_switch_store_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./modules/settings/switch-store/switch-store.component */ "./src/app/modules/settings/switch-store/switch-store.component.ts");
/* harmony import */ var _modules_switches_flows_flows_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./modules/switches/flows/flows.component */ "./src/app/modules/switches/flows/flows.component.ts");
/* harmony import */ var _modules_switches_port_graph_port_graph_component__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./modules/switches/port-graph/port-graph.component */ "./src/app/modules/switches/port-graph/port-graph.component.ts");
/* harmony import */ var ng_click_outside__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ng-click-outside */ "./node_modules/ng-click-outside/lib/index.js");
/* harmony import */ var ng_click_outside__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(ng_click_outside__WEBPACK_IMPORTED_MODULE_79__);
/* harmony import */ var _common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./common/components/reset-password/reset-password.component */ "./src/app/common/components/reset-password/reset-password.component.ts");
/* harmony import */ var _common_interceptors_app_auth_interceptor__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./common/interceptors/app.auth.interceptor */ "./src/app/common/interceptors/app.auth.interceptor.ts");
/* harmony import */ var _modules_switches_switch_meters_switch_meters_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./modules/switches/switch-meters/switch-meters.component */ "./src/app/modules/switches/switch-meters/switch-meters.component.ts");
/* harmony import */ var _modules_switches_switch_meters_table_switch_meters_table_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./modules/switches/switch-meters-table/switch-meters-table.component */ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.ts");
/* harmony import */ var _modules_isl_isl_flow_datatables_isl_flow_datatables_component__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./modules/isl/isl-flow-datatables/isl-flow-datatables.component */ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.ts");
/* harmony import */ var _common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./common/components/flow-re-route-modal/flow-re-route-modal.component */ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.ts");
/* harmony import */ var _modules_settings_session_session_component__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./modules/settings/session/session.component */ "./src/app/modules/settings/session/session.component.ts");
/* harmony import */ var _modules_topology_import_topology_setting_import_topology_setting_component__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./modules/topology/import-topology-setting/import-topology-setting.component */ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.ts");
/* harmony import */ var _modules_topology_export_topology_setting_export_topology_setting_component__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./modules/topology/export-topology-setting/export-topology-setting.component */ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.ts");
/* harmony import */ var _common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./common/components/islmaintenancemodal/islmaintenancemodal.component */ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.ts");
/* harmony import */ var _modules_switches_switch_flows_switch_flows_component__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./modules/switches/switch-flows/switch-flows.component */ "./src/app/modules/switches/switch-flows/switch-flows.component.ts");
/* harmony import */ var _modules_networkpath_networkpath_component__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./modules/networkpath/networkpath.component */ "./src/app/modules/networkpath/networkpath.component.ts");
/* harmony import */ var _modules_switches_port_flows_port_flows_component__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./modules/switches/port-flows/port-flows.component */ "./src/app/modules/switches/port-flows/port-flows.component.ts");
/* harmony import */ var _modules_switches_port_inventory_flows_port_inventory_flows_component__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./modules/switches/port-inventory-flows/port-inventory-flows.component */ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.ts");
/* harmony import */ var _modules_flows_connected_devices_connected_devices_component__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./modules/flows/connected-devices/connected-devices.component */ "./src/app/modules/flows/connected-devices/connected-devices.component.ts");
/* harmony import */ var _modules_reports_affected_flows_report_affected_flows_report_component__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! ./modules/reports/affected-flows-report/affected-flows-report.component */ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.ts");
/* harmony import */ var _modules_reports_affected_flow_list_affected_flow_list_component__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! ./modules/reports/affected-flow-list/affected-flow-list.component */ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.ts");
/* harmony import */ var _modules_topology_world_map_view_world_map_view_component__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! ./modules/topology/world-map-view/world-map-view.component */ "./src/app/modules/topology/world-map-view/world-map-view.component.ts");
/* harmony import */ var _modules_settings_saml_setting_saml_setting_component__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! ./modules/settings/saml-setting/saml-setting.component */ "./src/app/modules/settings/saml-setting/saml-setting.component.ts");
/* harmony import */ var _modules_settings_saml_add_saml_add_component__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! ./modules/settings/saml-add/saml-add.component */ "./src/app/modules/settings/saml-add/saml-add.component.ts");
/* harmony import */ var _modules_settings_saml_edit_saml_edit_component__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! ./modules/settings/saml-edit/saml-edit.component */ "./src/app/modules/settings/saml-edit/saml-edit.component.ts");
/* harmony import */ var _modules_settings_saml_list_table_saml_list_table_component__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! ./modules/settings/saml-list-table/saml-list-table.component */ "./src/app/modules/settings/saml-list-table/saml-list-table.component.ts");
/* harmony import */ var _common_components_switchupdatemodal_switchupdatemodal_component__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! ./common/components/switchupdatemodal/switchupdatemodal.component */ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.ts");
/* harmony import */ var _modules_useractivity_useractivity_list_useractivity_list_component__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! ./modules/useractivity/useractivity-list/useractivity-list.component */ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.ts");








































































































let AppModule = class AppModule {
};
AppModule = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
        declarations: [
            _app_component__WEBPACK_IMPORTED_MODULE_17__["AppComponent"],
            _common_components_sidebar_sidebar_component__WEBPACK_IMPORTED_MODULE_18__["SidebarComponent"],
            _common_components_header_header_component__WEBPACK_IMPORTED_MODULE_19__["HeaderComponent"],
            _modules_home_home_component__WEBPACK_IMPORTED_MODULE_20__["HomeComponent"],
            _modules_topology_topology_component__WEBPACK_IMPORTED_MODULE_21__["TopologyComponent"],
            _modules_isl_isl_component__WEBPACK_IMPORTED_MODULE_22__["IslComponent"],
            _modules_switches_switches_component__WEBPACK_IMPORTED_MODULE_23__["SwitchesComponent"],
            _common_components_footer_footer_component__WEBPACK_IMPORTED_MODULE_24__["FooterComponent"],
            _modules_isl_datatable_datatable_component__WEBPACK_IMPORTED_MODULE_25__["DatatableComponent"],
            _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowLayoutComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowSearchComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowListComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowAddComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowEditComponent"], _modules_flows__WEBPACK_IMPORTED_MODULE_26__["FlowDetailComponent"],
            _modules_usermanagement_usermanagement_component__WEBPACK_IMPORTED_MODULE_27__["UsermanagementComponent"],
            _modules_useractivity_useractivity_component__WEBPACK_IMPORTED_MODULE_28__["UseractivityComponent"],
            _common_components_breadcrumb_breadcrumb_component__WEBPACK_IMPORTED_MODULE_30__["BreadcrumbComponent"],
            _modules_isl_isl_list_isl_list_component__WEBPACK_IMPORTED_MODULE_29__["IslListComponent"],
            _modules_usermanagement_users_user_list_user_list_component__WEBPACK_IMPORTED_MODULE_31__["UserListComponent"],
            _modules_usermanagement_users_user_edit_user_edit_component__WEBPACK_IMPORTED_MODULE_32__["UserEditComponent"],
            _modules_usermanagement_users_user_add_user_add_component__WEBPACK_IMPORTED_MODULE_33__["UserAddComponent"],
            _modules_usermanagement_roles_role_list_role_list_component__WEBPACK_IMPORTED_MODULE_34__["RoleListComponent"],
            _modules_usermanagement_roles_role_add_role_add_component__WEBPACK_IMPORTED_MODULE_35__["RoleAddComponent"],
            _modules_usermanagement_roles_role_edit_role_edit_component__WEBPACK_IMPORTED_MODULE_36__["RoleEditComponent"],
            _modules_usermanagement_permissions_permission_list_permission_list_component__WEBPACK_IMPORTED_MODULE_37__["PermissionListComponent"],
            _modules_usermanagement_permissions_permission_add_permission_add_component__WEBPACK_IMPORTED_MODULE_38__["PermissionAddComponent"],
            _modules_usermanagement_permissions_permission_edit_permission_edit_component__WEBPACK_IMPORTED_MODULE_39__["PermissionEditComponent"],
            _modules_isl_isl_detail_isl_detail_component__WEBPACK_IMPORTED_MODULE_40__["IslDetailComponent"],
            _modules_isl_isl_layout_isl_layout_component__WEBPACK_IMPORTED_MODULE_41__["IslLayoutComponent"],
            _common_pipes_mb_pipe__WEBPACK_IMPORTED_MODULE_42__["MbPipe"],
            _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_43__["SwitchidmaskPipe"],
            _modules_switches_switch_layout_switch_layout_component__WEBPACK_IMPORTED_MODULE_44__["SwitchLayoutComponent"],
            _modules_switches_switch_list_switch_list_component__WEBPACK_IMPORTED_MODULE_45__["SwitchListComponent"],
            _common_dygraph_dygraph_component__WEBPACK_IMPORTED_MODULE_47__["DygraphComponent"],
            _modules_usermanagement_roles_role_assign_role_assign_component__WEBPACK_IMPORTED_MODULE_48__["RoleAssignComponent"],
            _modules_usermanagement_roles_role_view_role_view_component__WEBPACK_IMPORTED_MODULE_49__["RoleViewComponent"],
            _modules_usermanagement_permissions_permission_view_permission_view_component__WEBPACK_IMPORTED_MODULE_50__["PermissionViewComponent"],
            _modules_usermanagement_permissions_permission_assign_permission_assign_component__WEBPACK_IMPORTED_MODULE_51__["PermissionAssignComponent"],
            _modules_flows_flow_path_flow_path_component__WEBPACK_IMPORTED_MODULE_52__["FlowPathComponent"],
            _common_directives_datetimepicker_directive__WEBPACK_IMPORTED_MODULE_53__["DatetimepickerDirective"],
            _modules_flows_flow_path_graph_flow_path_graph_component__WEBPACK_IMPORTED_MODULE_54__["FlowPathGraphComponent"],
            _modules_switches_switch_detail_switch_detail_component__WEBPACK_IMPORTED_MODULE_55__["SwitchDetailComponent"],
            _common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_56__["OtpComponent"],
            _common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_57__["ModalComponent"],
            _common_components_changepassword_changepassword_component__WEBPACK_IMPORTED_MODULE_58__["ChangepasswordComponent"],
            _modules_flows_flow_graph_flow_graph_component__WEBPACK_IMPORTED_MODULE_61__["FlowGraphComponent"],
            _modules_topology_topology_menu_topology_menu_component__WEBPACK_IMPORTED_MODULE_62__["TopologyMenuComponent"],
            _modules_switches_port_details_port_details_component__WEBPACK_IMPORTED_MODULE_59__["PortDetailsComponent"],
            _modules_switches_rule_details_rule_details_component__WEBPACK_IMPORTED_MODULE_60__["RuleDetailsComponent"],
            _modules_switches_port_list_port_list_component__WEBPACK_IMPORTED_MODULE_63__["PortListComponent"],
            _modules_topology_affected_isl_affected_isl_component__WEBPACK_IMPORTED_MODULE_64__["AffectedIslComponent"],
            _modules_topology_failed_isl_failed_isl_component__WEBPACK_IMPORTED_MODULE_65__["FailedIslComponent"],
            _modules_topology_unidirectional_isl_unidirectional_isl_component__WEBPACK_IMPORTED_MODULE_66__["UnidirectionalIslComponent"],
            _modules_settings_settings_component__WEBPACK_IMPORTED_MODULE_67__["SettingsComponent"],
            _modules_settings_identity_server_identity_server_component__WEBPACK_IMPORTED_MODULE_68__["IdentityServerComponent"],
            _modules_settings_link_store_link_store_component__WEBPACK_IMPORTED_MODULE_69__["LinkStoreComponent"],
            _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_71__["ModalconfirmationComponent"],
            _common_components_logout_logout_component__WEBPACK_IMPORTED_MODULE_72__["LogoutComponent"],
            _modules_flows_flow_datatables_flow_datatables_component__WEBPACK_IMPORTED_MODULE_73__["FlowDatatablesComponent"],
            _modules_switches_switch_datatable_switch_datatable_component__WEBPACK_IMPORTED_MODULE_74__["SwitchDatatableComponent"],
            _modules_flows_flow_contracts_flow_contracts_component__WEBPACK_IMPORTED_MODULE_75__["FlowContractsComponent"],
            _common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_80__["ResetPasswordComponent"],
            _modules_switches_switch_meters_switch_meters_component__WEBPACK_IMPORTED_MODULE_82__["SwitchMetersComponent"],
            _modules_switches_switch_meters_table_switch_meters_table_component__WEBPACK_IMPORTED_MODULE_83__["SwitchMetersTableComponent"],
            _modules_isl_isl_flow_datatables_isl_flow_datatables_component__WEBPACK_IMPORTED_MODULE_84__["IslFlowDatatablesComponent"],
            _common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_85__["FlowReRouteModalComponent"],
            _modules_settings_session_session_component__WEBPACK_IMPORTED_MODULE_86__["SessionComponent"],
            _modules_settings_switch_store_switch_store_component__WEBPACK_IMPORTED_MODULE_76__["SwitchStoreComponent"],
            _modules_switches_flows_flows_component__WEBPACK_IMPORTED_MODULE_77__["FlowsComponent"],
            _modules_switches_port_graph_port_graph_component__WEBPACK_IMPORTED_MODULE_78__["PortGraphComponent"],
            _common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_80__["ResetPasswordComponent"],
            _modules_topology_import_topology_setting_import_topology_setting_component__WEBPACK_IMPORTED_MODULE_87__["ImportTopologySettingComponent"],
            _modules_topology_export_topology_setting_export_topology_setting_component__WEBPACK_IMPORTED_MODULE_88__["ExportTopologySettingComponent"],
            _common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_89__["IslmaintenancemodalComponent"],
            _modules_switches_switch_flows_switch_flows_component__WEBPACK_IMPORTED_MODULE_90__["SwitchFlowsComponent"],
            _modules_networkpath_networkpath_component__WEBPACK_IMPORTED_MODULE_91__["NetworkpathComponent"],
            _modules_switches_port_flows_port_flows_component__WEBPACK_IMPORTED_MODULE_92__["PortFlowsComponent"],
            _modules_switches_port_inventory_flows_port_inventory_flows_component__WEBPACK_IMPORTED_MODULE_93__["PortInventoryFlowsComponent"],
            _modules_flows_connected_devices_connected_devices_component__WEBPACK_IMPORTED_MODULE_94__["ConnectedDevicesComponent"],
            _modules_reports_affected_flows_report_affected_flows_report_component__WEBPACK_IMPORTED_MODULE_95__["AffectedFlowsReportComponent"],
            _modules_reports_affected_flow_list_affected_flow_list_component__WEBPACK_IMPORTED_MODULE_96__["AffectedFlowListComponent"],
            _modules_topology_world_map_view_world_map_view_component__WEBPACK_IMPORTED_MODULE_97__["WorldMapViewComponent"],
            _modules_settings_saml_setting_saml_setting_component__WEBPACK_IMPORTED_MODULE_98__["SamlSettingComponent"],
            _modules_settings_saml_add_saml_add_component__WEBPACK_IMPORTED_MODULE_99__["SamlAddComponent"],
            _modules_settings_saml_edit_saml_edit_component__WEBPACK_IMPORTED_MODULE_100__["SamlEditComponent"],
            _modules_settings_saml_list_table_saml_list_table_component__WEBPACK_IMPORTED_MODULE_101__["SamlListTableComponent"],
            _common_components_switchupdatemodal_switchupdatemodal_component__WEBPACK_IMPORTED_MODULE_102__["SwitchupdatemodalComponent"],
            _modules_useractivity_useractivity_list_useractivity_list_component__WEBPACK_IMPORTED_MODULE_103__["UseractivityListComponent"],
        ],
        imports: [
            _angular_common_http__WEBPACK_IMPORTED_MODULE_9__["HttpClientModule"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["BrowserModule"],
            ng_dygraphs__WEBPACK_IMPORTED_MODULE_12__["NgDygraphsModule"],
            _app_routing_module__WEBPACK_IMPORTED_MODULE_5__["AppRoutingModule"],
            angular_font_awesome__WEBPACK_IMPORTED_MODULE_4__["AngularFontAwesomeModule"],
            angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTablesModule"],
            _ng_select_ng_select__WEBPACK_IMPORTED_MODULE_6__["NgSelectModule"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__["ReactiveFormsModule"],
            ng_select2_component__WEBPACK_IMPORTED_MODULE_8__["Select2Module"],
            ngx_clipboard__WEBPACK_IMPORTED_MODULE_14__["ClipboardModule"],
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__["NgbModule"],
            ngx_typeahead__WEBPACK_IMPORTED_MODULE_16__["NgxTypeaheadModule"],
            _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_10__["BrowserAnimationsModule"],
            ngx_toastr__WEBPACK_IMPORTED_MODULE_11__["ToastrModule"].forRoot({
                timeOut: 4000,
                positionClass: 'toast-top-right',
                preventDuplicates: true,
            }),
            ngx_spinner__WEBPACK_IMPORTED_MODULE_13__["NgxSpinnerModule"],
            ngx_contextmenu__WEBPACK_IMPORTED_MODULE_70__["ContextMenuModule"].forRoot({
                autoFocus: true
            }),
            ng_click_outside__WEBPACK_IMPORTED_MODULE_79__["ClickOutsideModule"]
        ],
        providers: [_common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_43__["SwitchidmaskPipe"], _common_services_alertify_service__WEBPACK_IMPORTED_MODULE_46__["AlertifyService"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__["Title"], _common_interceptors_app_auth_interceptor__WEBPACK_IMPORTED_MODULE_81__["AppAuthProvider"]],
        bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_17__["AppComponent"]],
        entryComponents: [
            _common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_56__["OtpComponent"],
            _common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_57__["ModalComponent"],
            _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_71__["ModalconfirmationComponent"],
            _common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_85__["FlowReRouteModalComponent"],
            _common_components_changepassword_changepassword_component__WEBPACK_IMPORTED_MODULE_58__["ChangepasswordComponent"],
            _modules_topology_affected_isl_affected_isl_component__WEBPACK_IMPORTED_MODULE_64__["AffectedIslComponent"],
            _modules_flows_flow_graph_flow_graph_component__WEBPACK_IMPORTED_MODULE_61__["FlowGraphComponent"],
            _modules_flows_flow_path_graph_flow_path_graph_component__WEBPACK_IMPORTED_MODULE_54__["FlowPathGraphComponent"],
            _modules_flows_flow_contracts_flow_contracts_component__WEBPACK_IMPORTED_MODULE_75__["FlowContractsComponent"],
            _common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_80__["ResetPasswordComponent"],
            _modules_topology_import_topology_setting_import_topology_setting_component__WEBPACK_IMPORTED_MODULE_87__["ImportTopologySettingComponent"],
            _modules_topology_export_topology_setting_export_topology_setting_component__WEBPACK_IMPORTED_MODULE_88__["ExportTopologySettingComponent"],
            _common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_89__["IslmaintenancemodalComponent"],
            _common_components_switchupdatemodal_switchupdatemodal_component__WEBPACK_IMPORTED_MODULE_102__["SwitchupdatemodalComponent"],
        ]
    })
], AppModule);



/***/ }),

/***/ "./src/app/common/components/breadcrumb/breadcrumb.component.css":
/*!***********************************************************************!*\
  !*** ./src/app/common/components/breadcrumb/breadcrumb.component.css ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".navigation_menu_links{\r\n   float:right; \r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvYnJlYWRjcnVtYi9icmVhZGNydW1iLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7R0FDRyxXQUFXO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vY29tcG9uZW50cy9icmVhZGNydW1iL2JyZWFkY3J1bWIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZpZ2F0aW9uX21lbnVfbGlua3N7XHJcbiAgIGZsb2F0OnJpZ2h0OyBcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/common/components/breadcrumb/breadcrumb.component.html":
/*!************************************************************************!*\
  !*** ./src/app/common/components/breadcrumb/breadcrumb.component.html ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\" [class.topology-header]=\"currentRoute=='/topology'\">\r\n  <ul class=\"col breadcrum_flow\" id=\"breadcrum_flow\">\r\n    <li>\r\n      <a routerLink=\"\">Home</a>\r\n    </li>\r\n    <li *ngFor=\"let breadcrumb of breadcrumbs\">\r\n      <i class=\"fa fa-angle-double-right\" *ngIf=\"breadcrumb.label\"></i>&nbsp;\r\n      <a [routerLink]=\"[breadcrumb.url,breadcrumb.params || []]\">{{breadcrumb.label}}</a>\r\n    </li>\r\n  \r\n  </ul>\r\n  <ul class=\"col text-right\" *ngIf=\"currentRoute=='/topology'\">\r\n    <app-topology-menu></app-topology-menu>\r\n  </ul>\r\n  \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/common/components/breadcrumb/breadcrumb.component.ts":
/*!**********************************************************************!*\
  !*** ./src/app/common/components/breadcrumb/breadcrumb.component.ts ***!
  \**********************************************************************/
/*! exports provided: BreadcrumbComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BreadcrumbComponent", function() { return BreadcrumbComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");





let BreadcrumbComponent = class BreadcrumbComponent {
    constructor(activatedRoute, router, location) {
        this.activatedRoute = activatedRoute;
        this.router = router;
        this.location = location;
        this.breadcrumbs = [];
    }
    ngOnInit() {
        const ROUTE_DATA_BREADCRUMB = "breadcrumb";
        this.router.events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__["NavigationEnd"])).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__["NavigationEnd"]))
            .subscribe(event => {
            // set breadcrumbs
            let tempRoute = event;
            this.currentRoute = tempRoute.url;
            let root = this.activatedRoute.root;
            this.breadcrumbs = this.filterBreadCrumbs(this.getBreadcrumbs(root));
        });
    }
    getBreadcrumbs(route, url = "", breadcrumbs = []) {
        const ROUTE_DATA_BREADCRUMB = "breadcrumb";
        // get the child routes
        let children = route.children;
        //return if there are no more children
        if (children.length === 0) {
            return breadcrumbs;
        }
        //iterate over each children
        for (let child of children) {
            //verify primary route
            if (child.outlet !== _angular_router__WEBPACK_IMPORTED_MODULE_2__["PRIMARY_OUTLET"]) {
                continue;
            }
            //verify the custom data property "breadcrumb" is specified on the route
            if (!child.snapshot.data.hasOwnProperty(ROUTE_DATA_BREADCRUMB)) {
                return this.getBreadcrumbs(child, url, breadcrumbs);
            }
            //get the route's URL segment
            let routeURL = child.snapshot.url
                .map(segment => segment.path)
                .join("/");
            //append route URL to URL
            url += `/${routeURL}`;
            let patt = new RegExp("{[a-z]+}");
            let breadcrumbLabel = child.snapshot.data[ROUTE_DATA_BREADCRUMB];
            let breadcrumbLinks = [];
            if (typeof child.snapshot.data.links !== 'undefined') {
                breadcrumbLinks = child.snapshot.data.links;
            }
            /** manipulating breadcrumbs for dynamic params */
            let dynamicBreadCrumb = patt.test(child.snapshot.data[ROUTE_DATA_BREADCRUMB]);
            if (dynamicBreadCrumb) {
                for (let param in child.snapshot.params) {
                    let re = new RegExp("{" + param + "}", "g");
                    breadcrumbLabel = breadcrumbLabel.replace(re, child.snapshot.params[param]);
                    if (breadcrumbLinks.length > 0) {
                        breadcrumbLinks.forEach((v, i) => {
                            v.link = v.link.replace(re, child.snapshot.params[param]);
                            breadcrumbLinks[i] = v;
                        });
                    }
                }
            }
            let breadcrumb = {
                label: breadcrumbLabel,
                params: child.snapshot.params,
                url: url,
                links: breadcrumbLinks
            };
            breadcrumbs.push(breadcrumb);
            //recursive
            return this.getBreadcrumbs(child, url, breadcrumbs);
        }
        //we should never get here, but just in case
        return breadcrumbs;
    }
    filterBreadCrumbs(breadcrumbs) {
        return breadcrumbs.filter(element => {
            if (element.url.includes('switches') && element.url.includes('details')) {
                let retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON')) || null;
                if (retrievedSwitchObject && retrievedSwitchObject.switch_id && element.label == retrievedSwitchObject.switch_id) {
                    element.label = retrievedSwitchObject.name || retrievedSwitchObject.switch_name;
                }
            }
            return element.label;
        });
    }
};
BreadcrumbComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-breadcrumb",
        template: __webpack_require__(/*! ./breadcrumb.component.html */ "./src/app/common/components/breadcrumb/breadcrumb.component.html"),
        styles: [__webpack_require__(/*! ./breadcrumb.component.css */ "./src/app/common/components/breadcrumb/breadcrumb.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["ActivatedRoute"], _angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_common__WEBPACK_IMPORTED_MODULE_4__["Location"]])
], BreadcrumbComponent);



/***/ }),

/***/ "./src/app/common/components/changepassword/changepassword.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/common/components/changepassword/changepassword.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2NoYW5nZXBhc3N3b3JkL2NoYW5nZXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/common/components/changepassword/changepassword.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/common/components/changepassword/changepassword.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"changePassword\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Change Password</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"changePasswordForm\" id=\"changePassword\" (ngSubmit)=\"submitForm()\" novalidate #changePassword=\"ngForm\">\t\t\t\t        \r\n      <fieldset>\r\n        <div class=\"form-group\">\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"oldPassword\" placeholder=\"Old Password\" required/>\r\n          <div *ngIf=\"changePasswordForm.controls['oldPassword'].errors && changePassword.submitted\" class=\"invalid-feedback\" >\r\n            <span *ngIf=\"changePasswordForm.controls['oldPassword'].errors.required\">Old Password is required.</span>\r\n          </div>\r\n        </div>\r\n        <div [formGroup]=\"changePasswordFormGroup\">\r\n          <div class=\"form-group\">\r\n            <input class=\"form-control\" type=\"password\" formControlName=\"newPassword\" placeholder=\"New Password\" required/>\r\n            <div *ngIf=\"changePasswordFormGroup.controls['newPassword'].errors && changePassword.submitted\" class=\"invalid-feedback\" >\r\n              <span *ngIf=\"changePasswordFormGroup.controls['newPassword'].errors.required\">New Password is required.</span>\r\n              <span *ngIf=\"changePasswordFormGroup.controls['newPassword'].errors.minlength\">Password should be between 8 to 15 characters</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <input class=\"form-control\" type=\"password\" formControlName=\"confirmPassword\" placeholder=\"Confirm Password\" required/>\r\n            <div *ngIf=\"changePasswordFormGroup.errors || changePasswordFormGroup.controls.confirmPassword.errors && changePassword.submitted\" class=\"invalid-feedback\" >\r\n              <span *ngIf=\"changePasswordFormGroup.controls.confirmPassword.errors?.required\">Confirm Password is required.</span>\r\n              <span *ngIf=\"changePasswordFormGroup.errors?.doesMatchPassword\">Please enter same password</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" *ngIf=\"is2FaEnabled == 'true'\">\r\n          <input class=\"form-control\" type=\"password\" formControlName=\"otp\" placeholder=\"Enter OTP\" required/>\r\n          <div *ngIf=\"changePasswordForm.controls['otp'].errors && changePassword.submitted\" class=\"invalid-feedback\" >\r\n            <span *ngIf=\"changePasswordForm.controls['otp'].errors.required\">OTP is required.</span>\r\n          </div>\r\n        </div>\r\n        <span class=\"button-checkbox\">\r\n            <button [disabled]=\"!changePasswordForm.valid\" type=\"submit\" class=\"btn kilda_btn\">Change Password</button>\r\n        </span>\r\n      </fieldset>\r\n    </form>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/changepassword/changepassword.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/common/components/changepassword/changepassword.component.ts ***!
  \******************************************************************************/
/*! exports provided: ChangepasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChangepasswordComponent", function() { return ChangepasswordComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../constants/constants */ "./src/app/common/constants/constants.ts");








let ChangepasswordComponent = class ChangepasswordComponent {
    constructor(activeModal, formBuilder, userService, toastr, modalService, loader) {
        this.activeModal = activeModal;
        this.formBuilder = formBuilder;
        this.userService = userService;
        this.toastr = toastr;
        this.modalService = modalService;
        this.loader = loader;
        // Get userId from session
        this.userId = localStorage.getItem('user_id');
        ;
        this.is2FaEnabled = localStorage.getItem('is2FaEnabled');
    }
    /**
   * Method: createForm
   * Description: Create ReActive Form for change Password
   */
    createForm() {
        this.changePasswordForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({
            oldPassword: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](null, [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]),
            otp: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"](null)
        });
        this.changePasswordFormGroup = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({
            newPassword: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(8), _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].maxLength(15)]),
            confirmPassword: new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required])
        }, this.validateAreEqual);
        if (this.is2FaEnabled == 'true') {
            this.changePasswordForm.setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]);
        }
    }
    validateAreEqual(form) {
        let password = form.get('newPassword').value;
        let confirmPassword = form.get('confirmPassword').value;
        if (confirmPassword.length <= 0) {
            return null;
        }
        if (confirmPassword !== password) {
            return {
                doesMatchPassword: true
            };
        }
        return null;
    }
    /**
     * Method: submitForm
     * Description: trigger on change password submit form
    */
    submitForm() {
        this.submitted = true;
        if (this.changePasswordForm.invalid || this.changePasswordFormGroup.invalid) {
            return;
        }
        this.formData = {
            'password': this.changePasswordForm.value.oldPassword,
            'new_password': this.changePasswordFormGroup.value.newPassword
        };
        if (this.is2FaEnabled == 'true') {
            this.formData.code = this.changePasswordForm.value.otp;
        }
        this.loader.show(_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].changing_pwd);
        this.userService.changePassword(this.userId, this.formData).subscribe(user => {
            this.toastr.success(_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].pwd_changed, 'Success! ');
            this.modalService.dismissAll();
            this.loader.hide();
        }, error => {
            this.loader.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    ngOnInit() {
        this.createForm();
    }
};
ChangepasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-changepassword',
        template: __webpack_require__(/*! ./changepassword.component.html */ "./src/app/common/components/changepassword/changepassword.component.html"),
        styles: [__webpack_require__(/*! ./changepassword.component.css */ "./src/app/common/components/changepassword/changepassword.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _services_user_service__WEBPACK_IMPORTED_MODULE_4__["UserService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"],
        _services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"]])
], ChangepasswordComponent);



/***/ }),

/***/ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.css":
/*!*****************************************************************************************!*\
  !*** ./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.css ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2Zsb3ctcmUtcm91dGUtbW9kYWwvZmxvdy1yZS1yb3V0ZS1tb2RhbC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.html":
/*!******************************************************************************************!*\
  !*** ./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{title}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close('Close click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <table class=\"row-border hover dataTable no-footer\">\r\n      <thead>\r\n        <tr class=\"tableHeading\">\r\n            <th>FlowID</th>\r\n            <th>Status</th>\r\n            <th>Response</th>\r\n        </tr>\r\n        \r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let row of responseData; let i = index\" >\r\n          <td style=\"width:10%\">{{row}}</td>\r\n          <td style=\"width:30%\"><ngb-progressbar  showValue=\"true\" [height]=\"progressHeight\" [type]=\"reRouteIndex[row]['type']\" [max]=\"100\"  [value]=\"reRouteIndex[row]['progress']\"></ngb-progressbar>\r\n          </td>\r\n          <td style=\"width:30%\"><span *ngIf=\"reRouteIndex[row]['progress']== 100\">{{reRouteIndex[row]['message']}}</span><span *ngIf=\"reRouteIndex[row]['description']\">({{reRouteIndex[row]['description']}})</span></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n  </div>"

/***/ }),

/***/ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.ts ***!
  \****************************************************************************************/
/*! exports provided: FlowReRouteModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowReRouteModalComponent", function() { return FlowReRouteModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let FlowReRouteModalComponent = class FlowReRouteModalComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
        this.progressHeight = '25px';
    }
    ngOnInit() {
    }
};
FlowReRouteModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow-re-route-modal',
        template: __webpack_require__(/*! ./flow-re-route-modal.component.html */ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.html"),
        styles: [__webpack_require__(/*! ./flow-re-route-modal.component.css */ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"]])
], FlowReRouteModalComponent);



/***/ }),

/***/ "./src/app/common/components/footer/footer.component.css":
/*!***************************************************************!*\
  !*** ./src/app/common/components/footer/footer.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "footer {\r\n    position: absolute;\r\n    bottom: 0;\r\n    height: 35px;\r\n    width: calc(100% - 190px);\r\n    right: 0;\r\n    padding: 0 15px;\r\n    border-top: 1px solid #ccc;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    line-height: 35px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxZQUFZO0lBQ1oseUJBQXlCO0lBQ3pCLFFBQVE7SUFDUixlQUFlO0lBQ2YsMEJBQTBCO0lBQzFCLGVBQWU7SUFDZixnQkFBZ0I7SUFDaEIsaUJBQWlCO0FBQ3JCIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvZm9vdGVyL2Zvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiZm9vdGVyIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGhlaWdodDogMzVweDtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxOTBweCk7XHJcbiAgICByaWdodDogMDtcclxuICAgIHBhZGRpbmc6IDAgMTVweDtcclxuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAzNXB4O1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/common/components/footer/footer.component.html":
/*!****************************************************************!*\
  !*** ./src/app/common/components/footer/footer.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<footer class=\"main-footer\">\r\n\t<p class=\"pull-right\">©{{currentDate | date:'y'}} All rights reserved.</p>\r\n</footer>"

/***/ }),

/***/ "./src/app/common/components/footer/footer.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/common/components/footer/footer.component.ts ***!
  \**************************************************************/
/*! exports provided: FooterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterComponent", function() { return FooterComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let FooterComponent = class FooterComponent {
    constructor() {
        this.currentDate = new Date();
    }
    ngOnInit() {
    }
};
FooterComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-footer',
        template: __webpack_require__(/*! ./footer.component.html */ "./src/app/common/components/footer/footer.component.html"),
        styles: [__webpack_require__(/*! ./footer.component.css */ "./src/app/common/components/footer/footer.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], FooterComponent);



/***/ }),

/***/ "./src/app/common/components/header/header.component.css":
/*!***************************************************************!*\
  !*** ./src/app/common/components/header/header.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".main-header {\r\n    height: 55px;\r\n    position: fixed;\r\n    top: 0px;\r\n    z-index: 3;\r\n    width: 100%;\r\n    background: rgb(27, 31, 38);\r\n}\r\n\r\n.main-header .logo {\r\n    float: left;\r\n    width: 210px;\r\n    padding: 10px 15px 0;\r\n}\r\n\r\n.pull-right {\r\n    float: right !important;\r\n}\r\n\r\n.nav {\r\n    padding-left: 0px;\r\n    margin-bottom: 0px;\r\n    list-style: none;\r\n}\r\n\r\nnav.navbar.navbar-static-top{\r\n    padding: 10px 5px 0px 0;\r\n}\r\n\r\n.navbar-static-top {\r\n    z-index: 1000;\r\n    border-width: 0px 0px 1px;\r\n}\r\n\r\n.navbar {\r\n    position: relative;\r\n    min-height: 50px;\r\n    margin-bottom: 20px;\r\n    border-width: 1px;\r\n    border-style: solid;\r\n    border-color: transparent;\r\n    -webkit-border-image: initial;\r\n         -o-border-image: initial;\r\n            border-image: initial;\r\n    display: block;\r\n}\r\n\r\nnav.navbar .dropdown button i {\r\n    margin-left: 10px;\r\n}\r\n\r\nspan.icon-logo.toggleText {\r\n    float: left;\r\n    padding: 18px 0px;\r\n}\r\n\r\n.icon-logo img {\r\n    width: 30px;\r\n    height: 30px;\r\n    float: left;\r\n}\r\n\r\n.navbar-custom-menu .dropdown p.dropdown-toggle {\r\n    margin-top: 10px;\r\n    color: rgb(255, 255, 255);\r\n}\r\n\r\n.dropdown-menu {\r\n    left: auto;\r\n    right: 0;\r\n    min-width: 175px;\r\n    margin-top: 10px;\r\n    border-radius: 0;\r\n    box-shadow: 0 6px 12px rgba(0,0,0,.175);\r\n}\r\n\r\n.dropdown-menu:before {\r\n\twidth: 0;\r\n\theight: 0;\r\n\tborder-style: solid;\r\n\tborder-width: 0 8px 10px 8px;\r\n\tborder-color: transparent transparent #fff transparent;\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tbottom: 100%;\r\n\tleft: calc(100% - 24px);\r\n}\r\n\r\n.kilda_logo{\r\n    width: 100%;\r\n}\r\n\r\n.btn-outline-primary:hover, .btn-outline-primary:not(:disabled):not(.disabled).active, .btn-outline-primary:not(:disabled):not(.disabled):active, .show>.btn-outline-primary.dropdown-toggle {\r\n    color: #fff;\r\n    background-color: transparent;\r\n    border-color: transparent;\r\n}\r\n\r\n.btn-outline-primary {\r\n    color: #fff;\r\n    background-color: transparent;\r\n    background-image: none;\r\n    border-color: transparent;\r\n    font-size: 100%;\r\n}\r\n\r\n.btn.focus, .btn:focus, .btn-outline-primary.focus, .btn-outline-primary:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus, .btn-outline-primary:not(:disabled):not(.disabled):active:focus, .show>.btn-outline-primary.dropdown-toggle:focus {\r\n    outline: 0;\r\n    box-shadow: none;\r\n}\r\n\r\n.dropdown-item:focus, .dropdown-item:hover {\r\n    cursor: pointer;\r\n}\r\n\r\n.dropdown-toggle:after {display: none;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7SUFDZixRQUFRO0lBQ1IsVUFBVTtJQUNWLFdBQVc7SUFDWCwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9CQUFvQjtBQUN4Qjs7QUFFQTtJQUNJLHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUNBO0lBQ0ksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixtQkFBbUI7SUFDbkIseUJBQXlCO0lBQ3pCLDZCQUFxQjtTQUFyQix3QkFBcUI7WUFBckIscUJBQXFCO0lBQ3JCLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFFBQVE7SUFDUixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQix1Q0FBdUM7QUFDM0M7O0FBRUE7Q0FDQyxRQUFRO0NBQ1IsU0FBUztDQUNULG1CQUFtQjtDQUNuQiw0QkFBNEI7Q0FDNUIsc0RBQXNEO0NBQ3RELFdBQVc7Q0FDWCxrQkFBa0I7Q0FDbEIsWUFBWTtDQUNaLHVCQUF1QjtBQUN4Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7SUFDWCw2QkFBNkI7SUFDN0IseUJBQXlCO0FBQzdCOztBQUVBO0lBQ0ksV0FBVztJQUNYLDZCQUE2QjtJQUM3QixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQSx3QkFBd0IsYUFBYSxDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW4taGVhZGVyIHtcclxuICAgIGhlaWdodDogNTVweDtcclxuICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgIHRvcDogMHB4O1xyXG4gICAgei1pbmRleDogMztcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZDogcmdiKDI3LCAzMSwgMzgpO1xyXG59XHJcblxyXG4ubWFpbi1oZWFkZXIgLmxvZ28ge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogMjEwcHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHggMDtcclxufVxyXG5cclxuLnB1bGwtcmlnaHQge1xyXG4gICAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5uYXYge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgICBsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbm5hdi5uYXZiYXIubmF2YmFyLXN0YXRpYy10b3B7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDVweCAwcHggMDtcclxufVxyXG5cclxuLm5hdmJhci1zdGF0aWMtdG9wIHtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICBib3JkZXItd2lkdGg6IDBweCAwcHggMXB4O1xyXG59XHJcblxyXG4ubmF2YmFyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIG1pbi1oZWlnaHQ6IDUwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1pbWFnZTogaW5pdGlhbDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG5uYXYubmF2YmFyIC5kcm9wZG93biBidXR0b24gaSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuc3Bhbi5pY29uLWxvZ28udG9nZ2xlVGV4dCB7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHBhZGRpbmc6IDE4cHggMHB4O1xyXG59XHJcblxyXG4uaWNvbi1sb2dvIGltZyB7XHJcbiAgICB3aWR0aDogMzBweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG4ubmF2YmFyLWN1c3RvbS1tZW51IC5kcm9wZG93biBwLmRyb3Bkb3duLXRvZ2dsZSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgY29sb3I6IHJnYigyNTUsIDI1NSwgMjU1KTtcclxufVxyXG5cclxuLmRyb3Bkb3duLW1lbnUge1xyXG4gICAgbGVmdDogYXV0bztcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgbWluLXdpZHRoOiAxNzVweDtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgYm94LXNoYWRvdzogMCA2cHggMTJweCByZ2JhKDAsMCwwLC4xNzUpO1xyXG59XHJcblxyXG4uZHJvcGRvd24tbWVudTpiZWZvcmUge1xyXG5cdHdpZHRoOiAwO1xyXG5cdGhlaWdodDogMDtcclxuXHRib3JkZXItc3R5bGU6IHNvbGlkO1xyXG5cdGJvcmRlci13aWR0aDogMCA4cHggMTBweCA4cHg7XHJcblx0Ym9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCAjZmZmIHRyYW5zcGFyZW50O1xyXG5cdGNvbnRlbnQ6IFwiXCI7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGJvdHRvbTogMTAwJTtcclxuXHRsZWZ0OiBjYWxjKDEwMCUgLSAyNHB4KTtcclxufVxyXG5cclxuLmtpbGRhX2xvZ297XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmJ0bi1vdXRsaW5lLXByaW1hcnk6aG92ZXIsIC5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpLmFjdGl2ZSwgLmJ0bi1vdXRsaW5lLXByaW1hcnk6bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCk6YWN0aXZlLCAuc2hvdz4uYnRuLW91dGxpbmUtcHJpbWFyeS5kcm9wZG93bi10b2dnbGUge1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5idG4tb3V0bGluZS1wcmltYXJ5IHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGZvbnQtc2l6ZTogMTAwJTtcclxufVxyXG5cclxuLmJ0bi5mb2N1cywgLmJ0bjpmb2N1cywgLmJ0bi1vdXRsaW5lLXByaW1hcnkuZm9jdXMsIC5idG4tb3V0bGluZS1wcmltYXJ5OmZvY3VzLCAuYnRuLW91dGxpbmUtcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmU6Zm9jdXMsIC5idG4tb3V0bGluZS1wcmltYXJ5Om5vdCg6ZGlzYWJsZWQpOm5vdCguZGlzYWJsZWQpOmFjdGl2ZTpmb2N1cywgLnNob3c+LmJ0bi1vdXRsaW5lLXByaW1hcnkuZHJvcGRvd24tdG9nZ2xlOmZvY3VzIHtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4uZHJvcGRvd24taXRlbTpmb2N1cywgLmRyb3Bkb3duLWl0ZW06aG92ZXIge1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZHJvcGRvd24tdG9nZ2xlOmFmdGVyIHtkaXNwbGF5OiBub25lO30iXX0= */"

/***/ }),

/***/ "./src/app/common/components/header/header.component.html":
/*!****************************************************************!*\
  !*** ./src/app/common/components/header/header.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<header class=\"main-header\">\r\n\t<a routerLink=\"/home\" id=\"logo_header\" class=\"logo\">\r\n      <span class=\"logo-lg toggleText\"><img class=\"kilda_logo\" src=\"ui/assets/images/new_kilda_logo.png\" /></span>\r\n    </a>\r\n    <nav class=\"navbar navbar-static-top\">\r\n      <div class=\"navbar-custom-menu pull-right\">\r\n\t\t\t\t<div ngbDropdown placement=\"bottom-right\" class=\"d-inline-block\">\r\n\t\t\t\t\t<button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\" ngbDropdownToggle>{{username}} <i class=\"fa fa-angle-down\" aria-hidden=\"true\"></i></button>\r\n\t\t\t\t\t<div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n\t\t\t\t\t\t<button (click)=\"openChangePassword()\" class=\"dropdown-item\"><i class=\"fa fa-lock\"></i> Change Password</button>\r\n\t\t\t\t\t\t<button routerLink=\"/storesetting\" *ngIf=\"commonService.hasPermission('store_setting') || commonService.hasPermission('application_setting') || commonService.hasPermission('saml_setting')\" class=\"dropdown-item\"><i class=\"fa fa-cog\"></i> Settings</button>\r\n\t\t\t\t\t\t<button (click)=\"logOut()\" class=\"dropdown-item\"><i class=\"fa fa-sign-out\"></i> Logout</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n      </div>\r\n    </nav>\r\n</header>"

/***/ }),

/***/ "./src/app/common/components/header/header.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/common/components/header/header.component.ts ***!
  \**************************************************************/
/*! exports provided: HeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderComponent", function() { return HeaderComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _changepassword_changepassword_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../changepassword/changepassword.component */ "./src/app/common/components/changepassword/changepassword.component.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _services_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_cookie_manager_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");
/* harmony import */ var _services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/loader.service */ "./src/app/common/services/loader.service.ts");









let HeaderComponent = class HeaderComponent {
    constructor(modalService, commonService, router, cookieManager, appLoader) {
        this.modalService = modalService;
        this.commonService = commonService;
        this.router = router;
        this.cookieManager = cookieManager;
        this.appLoader = appLoader;
    }
    openChangePassword() {
        this.modalService.open(_changepassword_changepassword_component__WEBPACK_IMPORTED_MODULE_3__["ChangepasswordComponent"], { backdrop: 'static', windowClass: 'animated slideInUp' });
    }
    ngAfterViewInit() {
    }
    ngOnInit() {
        this.router.events.subscribe((_) => {
            setTimeout(() => {
                this.username = localStorage.getItem('username');
            });
        });
        this.commonService.sessionReceiver.subscribe((user) => {
            this.username = user.name;
        });
    }
    logOut() {
        this.appLoader.show();
        this.cookieManager.set('isLoggedOutInProgress', 1);
        this.commonService.getLogout().subscribe((data) => {
            location.href = _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].appEndPoint + '/login';
        }, err => {
            location.href = _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].appEndPoint + '/login';
        });
    }
};
HeaderComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-header',
        template: __webpack_require__(/*! ./header.component.html */ "./src/app/common/components/header/header.component.html"),
        styles: [__webpack_require__(/*! ./header.component.css */ "./src/app/common/components/header/header.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"],
        _services_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"],
        _services_cookie_manager_service__WEBPACK_IMPORTED_MODULE_7__["CookieManagerService"],
        _services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], HeaderComponent);



/***/ }),

/***/ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.css":
/*!*****************************************************************************************!*\
  !*** ./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.css ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2lzbG1haW50ZW5hbmNlbW9kYWwvaXNsbWFpbnRlbmFuY2Vtb2RhbC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.html":
/*!******************************************************************************************!*\
  !*** ./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">{{title}}</h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close(false)\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <p [innerHTML]=\"content\"></p>\r\n    <div class=\"form-group\" *ngIf=\"isMaintenance\">\r\n      <input style=\"height: 20px; width: 20px; margin: 0px 4px\"  type=\"checkbox\" name=\"doevacuate\"  (change)=\"setEvacuate($event)\"  />\r\n      <label style=\"margin-top: -10px; vertical-align: middle;\" >Evacuate all flows as well.</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn kilda_btn\" (click)=\"submitConfirmation()\">Yes</button>\r\n    <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close(false)\">No</button>\r\n  </div>"

/***/ }),

/***/ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.ts ***!
  \****************************************************************************************/
/*! exports provided: IslmaintenancemodalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslmaintenancemodalComponent", function() { return IslmaintenancemodalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let IslmaintenancemodalComponent = class IslmaintenancemodalComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
        this.isEvacuate = false;
        this.emitService = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
    }
    setEvacuate(e) {
        this.isEvacuate = e.target.checked;
    }
    submitConfirmation() {
        this.activeModal.close(true);
        this.emitService.emit(this.isEvacuate);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], IslmaintenancemodalComponent.prototype, "emitService", void 0);
IslmaintenancemodalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-islmaintenancemodal',
        template: __webpack_require__(/*! ./islmaintenancemodal.component.html */ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.html"),
        styles: [__webpack_require__(/*! ./islmaintenancemodal.component.css */ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"]])
], IslmaintenancemodalComponent);



/***/ }),

/***/ "./src/app/common/components/logout/logout.component.css":
/*!***************************************************************!*\
  !*** ./src/app/common/components/logout/logout.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2xvZ291dC9sb2dvdXQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/common/components/logout/logout.component.html":
/*!****************************************************************!*\
  !*** ./src/app/common/components/logout/logout.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ""

/***/ }),

/***/ "./src/app/common/components/logout/logout.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/common/components/logout/logout.component.ts ***!
  \**************************************************************/
/*! exports provided: LogoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogoutComponent", function() { return LogoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");





let LogoutComponent = class LogoutComponent {
    constructor(loaderService, toastr) {
        this.loaderService = loaderService;
        this.toastr = toastr;
    }
    ngOnInit() {
        this.toastr.clear();
        window.location.href = src_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].appEndPoint;
    }
};
LogoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-logout',
        template: __webpack_require__(/*! ./logout.component.html */ "./src/app/common/components/logout/logout.component.html"),
        styles: [__webpack_require__(/*! ./logout.component.css */ "./src/app/common/components/logout/logout.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_loader_service__WEBPACK_IMPORTED_MODULE_2__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
], LogoutComponent);



/***/ }),

/***/ "./src/app/common/components/modal/modal.component.css":
/*!*************************************************************!*\
  !*** ./src/app/common/components/modal/modal.component.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL21vZGFsL21vZGFsLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/common/components/modal/modal.component.html":
/*!**************************************************************!*\
  !*** ./src/app/common/components/modal/modal.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>{{content}}</p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/modal/modal.component.ts":
/*!************************************************************!*\
  !*** ./src/app/common/components/modal/modal.component.ts ***!
  \************************************************************/
/*! exports provided: ModalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalComponent", function() { return ModalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let ModalComponent = class ModalComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
    }
    ngOnInit() {
    }
};
ModalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-modal',
        template: __webpack_require__(/*! ./modal.component.html */ "./src/app/common/components/modal/modal.component.html"),
        styles: [__webpack_require__(/*! ./modal.component.css */ "./src/app/common/components/modal/modal.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"]])
], ModalComponent);



/***/ }),

/***/ "./src/app/common/components/modalconfirmation/modalconfirmation.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/common/components/modalconfirmation/modalconfirmation.component.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL21vZGFsY29uZmlybWF0aW9uL21vZGFsY29uZmlybWF0aW9uLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/common/components/modalconfirmation/modalconfirmation.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/common/components/modalconfirmation/modalconfirmation.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close(false)\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p [innerHTML]=\"content\"></p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close(true)\">Yes</button>\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close(false)\">No</button>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/common/components/modalconfirmation/modalconfirmation.component.ts ***!
  \************************************************************************************/
/*! exports provided: ModalconfirmationComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ModalconfirmationComponent", function() { return ModalconfirmationComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let ModalconfirmationComponent = class ModalconfirmationComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
    }
    ngOnInit() {
    }
};
ModalconfirmationComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-modalconfirmation',
        template: __webpack_require__(/*! ./modalconfirmation.component.html */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.html"),
        styles: [__webpack_require__(/*! ./modalconfirmation.component.css */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"]])
], ModalconfirmationComponent);



/***/ }),

/***/ "./src/app/common/components/otp/otp.component.css":
/*!*********************************************************!*\
  !*** ./src/app/common/components/otp/otp.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".barcode-bg .otp input {\r\n    border: 0;\r\n    outline: 0;\r\n    background: transparent;\r\n    border-bottom: 2px solid #c1c1c1;\r\n    width: 25px;\r\n    text-align: center;\r\n    padding: 5px;\r\n    margin: 10px;\r\n    font-family: Telstra-Regular-Bold, Arial, Helvetica, sans-serif;\r\n    font-size: 25px;\r\n    color: #2aa4a2;\r\n    float: left;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvb3RwL290cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVix1QkFBdUI7SUFDdkIsZ0NBQWdDO0lBQ2hDLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsWUFBWTtJQUNaLFlBQVk7SUFDWiwrREFBK0Q7SUFDL0QsZUFBZTtJQUNmLGNBQWM7SUFDZCxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vY29tcG9uZW50cy9vdHAvb3RwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmFyY29kZS1iZyAub3RwIGlucHV0IHtcclxuICAgIGJvcmRlcjogMDtcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjYzFjMWMxO1xyXG4gICAgd2lkdGg6IDI1cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBtYXJnaW46IDEwcHg7XHJcbiAgICBmb250LWZhbWlseTogVGVsc3RyYS1SZWd1bGFyLUJvbGQsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICBjb2xvcjogIzJhYTRhMjtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/common/components/otp/otp.component.html":
/*!**********************************************************!*\
  !*** ./src/app/common/components/otp/otp.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">2Factor Authentication</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n    <form [formGroup]=\"otpForm\" class=\"form-horizotal\">\r\n  <div class=\"form-group\">\r\n    <label for=\"otp\">Enter the authentication code <span class=\"mandatory-text text-danger\">*</span></label>\r\n    <div class=\"barcode-bg\">\r\n      <div class=\"otp otp-container\" #otpcontainer>\r\n        <input formControlName=\"input1\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\" autofocus> \r\n        <input formControlName=\"input2\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\"> \r\n        <input formControlName=\"input3\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\">\r\n        <input formControlName=\"input4\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\"> \r\n        <input formControlName=\"input5\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\">\r\n        <input formControlName=\"input6\" (keypress)=\"validateOtpInput($event)\" class=\"form-control otpdigit\" placeholder=\"*\" maxlength=\"1\">\r\n        \r\n      \r\n      </div>\r\n    </div>\r\n    <div class=\"clear clearfix\"></div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n  <div *ngIf=\"submitted && (f.input1.errors || f.input2.errors || f.input3.errors || f.input4.errors || f.input5.errors || f.input6.errors)\" class=\"invalid-feedback\">\r\n    <div>Authentication code required</div>\r\n   </div>\r\n   </div>\r\n  <div class=\"clear clearfix\"></div>\r\n</form>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button (click)=\"submittOtp()\" class=\"btn btn-sm btn-dark\">Submit</button>\r\n  <button type=\"button\" class=\"btn btn-sm btn-dark\" (click)=\"activeModal.close('Close click')\">Cancel</button>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/otp/otp.component.ts":
/*!********************************************************!*\
  !*** ./src/app/common/components/otp/otp.component.ts ***!
  \********************************************************/
/*! exports provided: OtpComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OtpComponent", function() { return OtpComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");




let OtpComponent = class OtpComponent {
    constructor(activeModal, formBuilder) {
        this.activeModal = activeModal;
        this.formBuilder = formBuilder;
        this.submitted = false;
        this.emitService = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
        this.otpForm = this.formBuilder.group({
            input1: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            input2: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            input3: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            input4: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            input5: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            input6: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
        this.focusNextInput();
    }
    get f() {
        return this.otpForm.controls;
    }
    submittOtp() {
        this.submitted = true;
        if (this.otpForm.invalid) {
            return false;
        }
        let valueObject = this.otpForm.value;
        let otpCode = "";
        for (let input in valueObject) {
            otpCode += valueObject[input];
        }
        this.emitService.emit(otpCode);
    }
    /** Event Binding */
    focusNextInput() {
        var container = this.otpContainerElement.nativeElement;
        let invalidElements = container.querySelectorAll('input');
        if (invalidElements.length > 0) {
            invalidElements[0].focus();
        }
        container.onkeyup = function (e) {
            var target = e.srcElement || e.target;
            var maxLength = parseInt(target.attributes["maxlength"].value, 10);
            var myLength = target.value.length;
            if (myLength >= maxLength) {
                var next = target;
                while ((next = next.nextElementSibling)) {
                    if (next == null)
                        break;
                    if (next.tagName.toLowerCase() === "input") {
                        next.focus();
                        break;
                    }
                }
            }
            else if (myLength === 0) {
                var previous = target;
                while ((previous = previous.previousElementSibling)) {
                    if (previous == null)
                        break;
                    if (previous.tagName.toLowerCase() === "input") {
                        previous.focus();
                        break;
                    }
                }
            }
        };
    }
    validateOtpInput(evt) {
        var theEvent = evt || window.event;
        var key = theEvent.keyCode || theEvent.which;
        key = String.fromCharCode(key);
        var regex = /[0-9]|\./;
        if (theEvent.keyCode == 13) {
            this.submittOtp();
            if (theEvent.stopPropagation)
                theEvent.stopPropagation();
            return;
        }
        if (!regex.test(key)) {
            theEvent.returnValue = false;
            if (theEvent.preventDefault)
                theEvent.preventDefault();
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], OtpComponent.prototype, "emitService", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])("otpcontainer"),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"])
], OtpComponent.prototype, "otpContainerElement", void 0);
OtpComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-otp",
        template: __webpack_require__(/*! ./otp.component.html */ "./src/app/common/components/otp/otp.component.html"),
        styles: [__webpack_require__(/*! ./otp.component.css */ "./src/app/common/components/otp/otp.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
], OtpComponent);



/***/ }),

/***/ "./src/app/common/components/reset-password/reset-password.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/common/components/reset-password/reset-password.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3Jlc2V0LXBhc3N3b3JkL3Jlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/common/components/reset-password/reset-password.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/common/components/reset-password/reset-password.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n  <p>User password is <span class=\"badge badge-light badge-password\">{{content}}</span> &nbsp;<button class=\"btn btn-dark btn-small\" (click)=\"copyPassword(content)\">Copy</button></p>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close('Close click')\">Close</button>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/reset-password/reset-password.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/common/components/reset-password/reset-password.component.ts ***!
  \******************************************************************************/
/*! exports provided: ResetPasswordComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ResetPasswordComponent", function() { return ResetPasswordComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../constants/constants */ "./src/app/common/constants/constants.ts");






let ResetPasswordComponent = class ResetPasswordComponent {
    constructor(activeModal, clipboardService, toaster) {
        this.activeModal = activeModal;
        this.clipboardService = clipboardService;
        this.toaster = toaster;
    }
    ngOnInit() { }
    copyPassword(content) {
        this.clipboardService.copyFromContent(content);
        this.toaster.clear();
        this.toaster.success(_constants_constants__WEBPACK_IMPORTED_MODULE_5__["MessageObj"].pwd_copied);
    }
};
ResetPasswordComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-reset-password",
        template: __webpack_require__(/*! ./reset-password.component.html */ "./src/app/common/components/reset-password/reset-password.component.html"),
        styles: [__webpack_require__(/*! ./reset-password.component.css */ "./src/app/common/components/reset-password/reset-password.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_3__["ClipboardService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
], ResetPasswordComponent);



/***/ }),

/***/ "./src/app/common/components/sidebar/sidebar.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/common/components/sidebar/sidebar.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "ul.submenu  {\r\n    margin-top: -10px;\r\n}\r\nul.submenu li a{\r\n    font-size: 12px;\r\n    padding-left: 30px;\r\n}\r\nul.sidebar-menu li a.active{\r\n    background: #1e242c;\r\n    border-left: 3px solid #00ccbe\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7QUFDdEI7QUFFQTtJQUNJLG1CQUFtQjtJQUNuQjtBQUNKIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ1bC5zdWJtZW51ICB7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTBweDtcclxufVxyXG51bC5zdWJtZW51IGxpIGF7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7XHJcbn1cclxuXHJcbnVsLnNpZGViYXItbWVudSBsaSBhLmFjdGl2ZXtcclxuICAgIGJhY2tncm91bmQ6ICMxZTI0MmM7XHJcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICMwMGNjYmVcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/common/components/sidebar/sidebar.component.html":
/*!******************************************************************!*\
  !*** ./src/app/common/components/sidebar/sidebar.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<aside class=\"main-sidebar\" id=\"sidebar-left\">\r\n\t<!-- sidebar: style can be found in sidebar.less -->\r\n\t<section class=\"sidebar\">\r\n\t\t<!-- sidebar menu: : style can be found in sidebar.less -->\r\n\t\t<ul id=\"menubar-tbn\" class=\"sidebar-menu tree\" data-widget=\"tree\">\r\n\t\t\t<li id=\"home-menu-id\" [class.active]=\"currentUrl == '/home'\">\r\n\t\t\t\t<a title=\"Home\" (click)=\"toggleSubmenu('')\" class=\"\" routerLink=\"/home\"> <i class=\"fa fa-home\" aria-hidden=\"true\"></i> <span class=\"toggleText\">Home</span></a>\r\n\t\t\t</li>\r\n\t\t\r\n\t\t\t<li  *ngIf=\"commonService.hasPermission('menu_topology') || commonService.hasPermission('menu_available_path')\" id=\"topology-menu-id\" style=\"cursor:pointer;\">\r\n\t\t\t\t\t<a  [class.active]=\"currentUrl == '/topology' || currentUrl == '/networkpath' \" title=\"Network\" (click)=\"toggleSubmenu('network-submenu')\"><i class=\"fa fa-cubes\" aria-hidden=\"true\"></i><span class=\"home-Topology toggleText\">Network</span><i [ngClass]=\"{'fa-angle-down':activeSubmenu != 'network-submenu','fa-angle-up':activeSubmenu == 'network-submenu'}\" class=\"fa fa-fw\" style=\"float:right; margin-top:15px;\"></i></a>\r\n\t\t\t\t\t<ul id=\"network-submenu\" [ngClass] = \"{'show':activeSubmenu == 'network-submenu','hide':activeSubmenu != 'network-submenu'}\" class=\"submenu\">\r\n\t\t\t\t\t\t<li *ngIf=\"commonService.hasPermission('menu_topology')\" [class.active]=\"currentUrl == '/topology'\">\r\n\t\t\t\t\t\t\t<a title=\"Topology\" routerLink=\"/topology\"> <i class=\"icon-topology\" aria-hidden=\"true\"></i><span class=\"home-Topology toggleText\">Topology</span></a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li *ngIf=\"commonService.hasPermission('menu_available_path')\" id=\"network-path-menu-id\" [class.active]=\"urlmatch('networkpath')\">\r\n\t\t\t\t\t\t\t\t<a title=\"Available path\" routerLink=\"/networkpath\"> <i class=\"fa fa-road\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">Available Path</span></a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\r\n\t \t\t</li>\r\n\t\t\t<li id=\"flows-menu-id\" *ngIf=\"commonService.hasPermission('menu_flows')\" [class.active]=\"urlmatch('flows')\" >\r\n\t\t\t\t<a (click)=\"toggleSubmenu('')\" title=\"Flows\" routerLink=\"/flows\"> <i class=\"icon-flows\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">Flows</span></a>\r\n\t\t\t</li>\r\n\t\t\t<li id=\"isl-menu-id\" *ngIf=\"commonService.hasPermission('menu_isl')\" [class.active]=\"urlmatch('isl')\">\r\n\t\t\t\t<a (click)=\"toggleSubmenu('')\" title=\"ISL\" routerLink=\"/isl\"> <i class=\"icon-isl\" aria-hidden=\"true\"></i><span class=\"home-isl toggleText\">ISL</span></a>\r\n\t\t\t</li>\r\n\t\t\t<li id=\"switch-menu-id\" *ngIf=\"commonService.hasPermission('menu_switches')\" [class.active]=\"urlmatch('switches')\">\r\n\t\t\t\t<a (click)=\"toggleSubmenu('')\" title=\"Switches\" routerLink=\"/switches\"> <i class=\"icon-switch\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">Switches</span></a>\r\n\t\t\t</li>\r\n\t\t\t<li  *ngIf=\"commonService.hasPermission('menu_user_management') || commonService.hasPermission('menu_user_activity')\" id=\"usermanagement-menu-id\" style=\"cursor:pointer;\">\r\n\t\t\t\t\t<a [class.active]=\"currentUrl == '/useractivity' || currentUrl == '/usermanagement' \" title=\"Users\" (click)=\"toggleSubmenu('user-submenu')\"><i class=\"fa fa-users\" aria-hidden=\"true\"></i><span class=\"home-Topology toggleText\">Users</span><i [ngClass]=\"{'fa-angle-down':activeSubmenu != 'user-submenu','fa-angle-up':activeSubmenu == 'user-submenu'}\"  class=\"fa fa-fw\" style=\"float:right; margin-top:15px;\"></i></a>\r\n\t\t\t\t\t<ul id=\"user-submenu\" [ngClass] = \"{'show':activeSubmenu == 'user-submenu','hide':activeSubmenu != 'user-submenu'}\" class=\"submenu\">\r\n\t\t\t\t\t\t\t<li *ngIf=\"commonService.hasPermission('menu_user_management')\" id=\"usermanagement-menu-id\" [class.active]=\"currentUrl == '/usermanagement'\">\r\n\t\t\t\t\t\t\t\t<a title=\"User Management\" routerLink='/usermanagement'> \r\n\t\t\t\t\t\t\t\t\t<i class=\"icon-usermanagement\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">User Management</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t<li *ngIf=\"commonService.hasPermission('menu_user_activity')\" id=\"useractivity-menu-id\" [class.active]=\"currentUrl == '/useractivity'\">\r\n\t\t\t\t\t\t\t\t<a title=\"User Activity\" routerLink=\"/useractivity\">\r\n\t\t\t\t\t\t\t\t\t<i class=\"icon-logactivity\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">User Activity</span>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t</li>\r\n\t\t\t<li  id=\"reports-menu-id\" style=\"cursor:pointer;\">\r\n\t\t\t\t<a [class.active]=\"currentUrl == '/flowreport'\" title=\"Reports\" (click)=\"toggleSubmenu('reports-submenu')\"><i class=\"fa fa-line-chart\" aria-hidden=\"true\"></i><span class=\"home-Topology toggleText\">Reports</span><i [ngClass]=\"{'fa-angle-down':activeSubmenu != 'reports-submenu','fa-angle-up':activeSubmenu == 'reports-submenu'}\"  class=\"fa fa-fw\" style=\"float:right; margin-top:15px;\"></i></a>\r\n\t\t\t\t<ul id=\"reports-submenu\" [ngClass] = \"{'show':activeSubmenu == 'reports-submenu','hide':activeSubmenu != 'reports-submenu'}\" class=\"submenu\">\r\n\t\t\t\t\t\t<li  id=\"flowsReports-menu-id\" [class.active]=\"currentUrl == '/flowreport'\">\r\n\t\t\t\t\t\t\t<a title=\"Flows Report\" routerLink='/flowreport'> \r\n\t\t\t\t\t\t\t\t<i class=\"fa fa-file-text\" aria-hidden=\"true\"></i><span class=\"home-flows toggleText\">Affected Flows</span>\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\r\n\t\t\t\t</ul>\r\n\t\t</li>\r\n\t\t</ul>\r\n\t</section>\r\n</aside>\r\n\r\n\r\n<a class=\"sidebar-toggle\" >\r\n\t<span class=\"icon-group\">\r\n\t\t<i class=\"fa fa-angle-right\" (click)=\"closeSidebar()\"></i>\r\n\t\t<i class=\"fa fa-angle-left\" (click)=\"openSidebar()\"></i>\r\n\t</span>\r\n</a>\r\n\r\n"

/***/ }),

/***/ "./src/app/common/components/sidebar/sidebar.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/common/components/sidebar/sidebar.component.ts ***!
  \****************************************************************/
/*! exports provided: SidebarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SidebarComponent", function() { return SidebarComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _services_common_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/common.service */ "./src/app/common/services/common.service.ts");




let SidebarComponent = class SidebarComponent {
    constructor(router, commonService) {
        this.router = router;
        this.commonService = commonService;
        this.currentUrl = '';
        this.activeSubmenu = '';
        this.router.events.subscribe((_) => {
            this.currentUrl = router.url;
            if (!this.currentUrl.includes('/flows')) {
                localStorage.removeItem('flows');
                localStorage.removeItem('haslinkStoreSetting');
                localStorage.removeItem('linkStoreSetting');
                localStorage.removeItem('linkStoreStatusList');
                localStorage.removeItem('activeFlowStatusFilter');
                //localStorage.removeItem('filterFlag');          
                localStorage.removeItem('flowsinventory');
            }
            if (!this.currentUrl.includes('/isl')) {
                localStorage.removeItem('linkData');
                localStorage.removeItem('ISL_LIST');
            }
            if (!this.currentUrl.includes('/switches')) {
                localStorage.removeItem('SWITCHES_LIST');
                localStorage.removeItem('SWITCHES_LIST_ALL');
                localStorage.removeItem('switchPortDetail');
            }
            if (!this.currentUrl.includes('/port')) {
                localStorage.removeItem('portFlows');
                localStorage.removeItem('portFlowInventory');
            }
            this.commonService.setCurrentUrl(router.url);
        });
    }
    ngOnInit() { }
    urlmatch(url) {
        return this.currentUrl.includes(url);
    }
    toggleSubmenu(id) {
        if (this.activeSubmenu == id) {
            this.activeSubmenu = '';
        }
        else {
            this.activeSubmenu = id;
        }
    }
    closeSidebar() {
        jQuery('body').removeClass('mini-sidebar');
        localStorage.removeItem('sidebarToggled');
    }
    openSidebar() {
        jQuery('body').addClass('mini-sidebar');
        localStorage.setItem('sidebarToggled', '1');
    }
};
SidebarComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-sidebar',
        template: __webpack_require__(/*! ./sidebar.component.html */ "./src/app/common/components/sidebar/sidebar.component.html"),
        styles: [__webpack_require__(/*! ./sidebar.component.css */ "./src/app/common/components/sidebar/sidebar.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _services_common_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"]])
], SidebarComponent);



/***/ }),

/***/ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/common/components/switchupdatemodal/switchupdatemodal.component.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3N3aXRjaHVwZGF0ZW1vZGFsL3N3aXRjaHVwZGF0ZW1vZGFsLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/common/components/switchupdatemodal/switchupdatemodal.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\">{{title}}</h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.close(false)\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n\r\n  <div class=\"row\" [formGroup]=\"switchLocationForm\">\r\n    <div class=\"form-group col-md-6\" >\r\n          <label class=\" col-md-2 col-form-label\">Pop:</label>\r\n          <div class=\"col-md-12\">\r\n            <input class=\"form-control\" formControlName=\"pop\" name=\"pop\"  />\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group col-md-6\" >\r\n        <label class=\" col-md-2 col-form-label\">Latitude:</label>\r\n        <div class=\"col-md-12\">\r\n          <input class=\"form-control\" (keyup)=\"validateLatLong('latitude')\" formControlName=\"latitude\" name=\"latitude\"  />\r\n          <div *ngIf=\"errorsObj && errorsObj['latitude']\" class=\"invalid-feedback\">\r\n            <div >Latitude should only be in number or decimal</div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group col-md-6 \" >\r\n        <label class=\" col-md-2  col-form-label\">Longitude:</label>\r\n        <div class=\"col-md-12\">\r\n          <input class=\"form-control\" (keyup)=\"validateLatLong('longitude')\" formControlName=\"longitude\" name=\"longitude\"  />\r\n          <div *ngIf=\"errorsObj && errorsObj['longitude']\" class=\"invalid-feedback\">\r\n            <div>Longitude should only be in number or decimal</div>\r\n          </div>\r\n        </div>\r\n     </div>\r\n     <div class=\"form-group col-md-6\" >\r\n        <label class=\"col-md-2  col-form-label\">Street:</label>\r\n        <div class=\"col-md-12\">\r\n          <input class=\"form-control\" formControlName=\"street\" name=\"street\"  />\r\n        </div>\r\n    </div>\r\n     <div class=\"form-group col-md-6\" >\r\n        <label class=\"col-md-2 col-form-label\">City:</label>\r\n        <div class=\"col-md-12\">\r\n          <input class=\"form-control\" formControlName=\"city\" name=\"city\"  />\r\n        </div>\r\n        \r\n     </div>\r\n     <div class=\"form-group col-md-6\" >\r\n        <label class=\" col-md-2 col-form-label\">Country:</label>\r\n        <div class=\"col-md-12\">\r\n          <input class=\"form-control\" formControlName=\"country\" name=\"country\" />\r\n        </div>\r\n        \r\n    </div>\r\n   \r\n  </div>\r\n</div>\r\n<div class=\"modal-footer\">\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"submitUpdate()\">Update</button>\r\n  <button type=\"button\" class=\"btn kilda_btn\" (click)=\"activeModal.close(false)\">Cancel</button>\r\n</div>"

/***/ }),

/***/ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/common/components/switchupdatemodal/switchupdatemodal.component.ts ***!
  \************************************************************************************/
/*! exports provided: SwitchupdatemodalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchupdatemodalComponent", function() { return SwitchupdatemodalComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");






let SwitchupdatemodalComponent = class SwitchupdatemodalComponent {
    constructor(activeModal, formBuilder, commonService, toaster) {
        this.activeModal = activeModal;
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.toaster = toaster;
        this.emitService = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.submitted = false;
    }
    ngOnInit() {
        this.errorsObj = {};
        this.switchLocationForm = this.formBuilder.group({
            pop: [""],
            latitude: [""],
            longitude: [""],
            street: [""],
            city: [""],
            country: [""]
        });
        if (this.data && this.data.pop) {
            this.switchLocationForm.controls['pop'].setValue(this.data.pop || '');
        }
        if (this.data && (this.data.latitude || this.data.latitude == 0)) {
            this.switchLocationForm.controls['latitude'].setValue(this.data.latitude || 0);
        }
        if (this.data && (this.data.longitude || this.data.longitude == 0)) {
            this.switchLocationForm.controls['longitude'].setValue(this.data.longitude || 0);
        }
        if (this.data && this.data.street) {
            this.switchLocationForm.controls['street'].setValue(this.data.street || '');
        }
        if (this.data && this.data.city) {
            this.switchLocationForm.controls['city'].setValue(this.data.city || '');
        }
        if (this.data && this.data.country) {
            this.switchLocationForm.controls['country'].setValue(this.data.country || '');
        }
    }
    validateLatLong(field) {
        if (field == 'latitude') {
            if (!this.commonService.isInt(this.switchLocationForm.controls['latitude'].value) && !this.commonService.isFloat(this.switchLocationForm.controls['latitude'].value)) {
                this.errorsObj['latitude'] = true;
            }
            else {
                this.errorsObj['latitude'] = false;
            }
        }
        if (field == 'longitude') {
            if (!this.commonService.isInt(this.switchLocationForm.controls['longitude'].value) && !this.commonService.isFloat(this.switchLocationForm.controls['longitude'].value)) {
                this.errorsObj['longitude'] = true;
            }
            else {
                this.errorsObj['longitude'] = false;
            }
        }
    }
    submitUpdate() {
        this.errorsObj = {};
        this.submitted = true;
        this.updateData = {
            pop: this.switchLocationForm.controls['pop'].value,
            location: {
                latitude: this.switchLocationForm.controls['latitude'].value,
                longitude: this.switchLocationForm.controls['longitude'].value,
                street: this.switchLocationForm.controls['street'].value,
                city: this.switchLocationForm.controls['city'].value,
                country: this.switchLocationForm.controls['country'].value,
            }
        };
        var errorFlag = false;
        if (!this.commonService.isInt(this.updateData.location.latitude) && !this.commonService.isFloat(this.updateData.location.latitude)) {
            errorFlag = true;
            this.errorsObj['latitude'] = true;
        }
        if (!this.commonService.isInt(this.updateData.location.longitude) && !this.commonService.isFloat(this.updateData.location.longitude)) {
            errorFlag = true;
            this.errorsObj['longitude'] = true;
        }
        if (errorFlag) {
            return false;
        }
        else {
            this.submitted = false;
            this.emitService.emit(this.updateData);
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SwitchupdatemodalComponent.prototype, "emitService", void 0);
SwitchupdatemodalComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switchupdatemodal',
        template: __webpack_require__(/*! ./switchupdatemodal.component.html */ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.html"),
        styles: [__webpack_require__(/*! ./switchupdatemodal.component.css */ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
], SwitchupdatemodalComponent);



/***/ }),

/***/ "./src/app/common/constants/constants.ts":
/*!***********************************************!*\
  !*** ./src/app/common/constants/constants.ts ***!
  \***********************************************/
/*! exports provided: MessageObj */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageObj", function() { return MessageObj; });
const MessageObj = {
    unauthorised: "You are not authorised to access this page.",
    apply_changes: "Applying changes..",
    link_storage_config: "Checking link store configuration..",
    delete_contract: "Contract deleted successfully.",
    load_contract: "Loading contracts..",
    flow_detail: "Loading flow detail",
    load_ports: "Loading ports",
    loading_flows: "Loading flows",
    fetching_flows: "Fetching flows",
    re_routing: "Re-routing",
    re_routing_flows: "Re-routing flows",
    no_ports: "No Ports available",
    no_flow_available: "No Flows available",
    flow_updated: "Updating flow",
    flow_updated_controller: "Flow updated successfully on controller",
    reloading_status_and_flow_path: "Reloading status and flow path after re-route..",
    flow_created: "Flow created successfully",
    flow_not_created: "Unable to create flow",
    flow_deleted: "Flow deleted successfully",
    otp_not_detected: "Unable to detect OTP",
    delete_flow_not_authorised: "You are not authorised to delete the flow.",
    loading_flow_path: "Loading flow path...",
    copied_to_clipboard: "Copied to clicboard",
    loading_isl: "Loading ISL detail",
    no_cost_data_returned: "API did not return Cost data.",
    no_isl: "No ISL Found",
    no_isl_available: "No ISL available",
    loading_isl_flows: "Loading ISL flows",
    no_isl_flows: "No ISL flows available",
    applying_changes: "Applying changes..",
    maintenance_mode_changed: "Maintenance mode changed successfully.",
    error_im_maintenance_mode: "Error in changing maintenance mode!",
    updating_bfd: "updating BFD flag..",
    bfd_flag_updated: "BFD flag updated successfully!",
    flows_evacuated: "All flows are evacuated successfully!",
    error_flows_evacuated: "Error in evacuating flows!",
    reverse_graph_no_data: "Backward graph API did not return data.",
    forward_graph_no_data: "Forward graph API did not return data.",
    updating_isl_bandwidth: "Updating ISL max bandwidth",
    isl_bandwidth_updated: "ISL bandwidth updated successfully!",
    isl_bandwidth_update_error: "Error in updating ISL bandwidth!",
    updating_isl_cost: "Updating ISL cost",
    isl_cost_updated: "ISL cost updated successfully!",
    error_isl_cost_updated: "Error in updating ISL cost!",
    deleting_isl: "Deleting ISL",
    isl_deleted: "ISL deleted successfully!",
    error_isl_delete: "Error in Isl deletion!",
    delete_isl_not_authorised: "You are not authorised to delete the ISL.",
    flow_rerouted: "Flow Re-routes successfully",
    flow_on_best_route: "Flow already on best route",
    loading_switches: "Loading switches..",
    no_switch_data: "No switch data",
    no_switch_found: "No Switch Found",
    fetching_network_paths: "fetching network paths...",
    no_data_found: "No data found",
    loading_is_detail: "Loading identity server details",
    validating_is_server: "Validating identity server details",
    unable_to_validate_is_server: "Unable to validate indentity server",
    is_server_detail_saved: "Identity server details saved successfully",
    loading_link_store: "Loading link store details",
    loading_link_store_setting: "Loading link store settings",
    deleting_link_store_setting: "Deleting link store settings",
    link_store_setting_deleted: "Link store settings deleted successfully",
    saving_link_store_setting: "Saving link store settings",
    link_store_setting_saved: "Link store settings saved successfully",
    loading_app_setting: "Loading application setting",
    saving_session_setting: "Saving session setting",
    session_setting_saved: "Session setting saved",
    saving_switch_name_store_setting: "Saving switch name source setting",
    switch_name_store_setting_saved: "Switch name source saved",
    loading_switch_store: "Loading switch store settings",
    saving_switch_store: "Saving switch store settings",
    saved_switch_store: "Switch store settings saved successfully",
    error_saving_switch_store: "Error in saving switch store",
    deleting_switch_store: "Deleting switch store settings",
    switch_store_setting_deleted: "Switch store settings deleted successfully",
    error_in_deleting_switch_store: "Error in deleting switch store setting",
    nothing_changed: "Nothing is changed",
    updating_port_details: "Updating port details",
    port_configured: "Port configured successfully!",
    updating_discovery_flag: "Updating discovery packets flag ...",
    discovery_packets_updated: "Discovery Packets mode updated successful",
    error_updating_discovery_packets: "Error in updating discovery packets mode!",
    graph_api_did_not_return: "Graph API did not return data.",
    deleting_switch: "Deleting switch",
    switch_deleted: "Switch deleted successfully",
    not_authorised_to_delete_switch: "You are not authorised to delete the switch.",
    saving_switchname: "Saving switch name..",
    loading_switch_detail: "Loading switch details",
    no_switch_available: "No switch available",
    import_setting_saved: "Setting saved successfully!",
    loading_topology: "Loading topology..",
    reloading_topology_with_new_data: "Re-loading topology with new switch or isl",
    loading_user_activity: "Loading user activities",
    no_user_activity: "No useractivity data",
    adding_permission: "Adding permission",
    permission_added: "Permission added successfully!",
    assigning_roles: "Assigning roles",
    role_assigned: "Role assigned successfully!",
    updating_permission: "Updating permission",
    permission_updated: "Permission updated successfully!",
    loading_permission: "Loading permissions",
    something_wrong: "Something went wrong",
    connection_refused: "Connection refused",
    permission_status_changed: "Permission status changed successfully!",
    permission_removed: "Permission removed successfully!",
    adding_role: "Adding role",
    role_added: "Role added successfully!",
    assigning_user: "Assigning user",
    role_updated: "Role updated successfully!",
    getting_role: "Getting role",
    updating_role: "Updating role",
    loading_roles: "Loading roles",
    role_removed: "Role removed successfully!",
    adding_user: "Adding user",
    user_added: "User added successfully!",
    loading_details: "Loading details",
    updating_user: "Updating user",
    user_updated: "User data updated successfully!",
    loading_users: "Loading users",
    deleting_user: "Deleting user",
    user_deleted: "User removed successfully!",
    updating_user_status: "Updating user status",
    user_status_updated: "User status changed successfully!",
    resetting_password: "Resetting Password",
    reset_pwd_mail_sent: "Reset password email sent successfully!",
    resetting_pwd_by_admin: "Resetting password by admin",
    pwd_reset: "Password Reset successfully!",
    resetting_twofa: "Resetting 2FA",
    twofa_reset: "User 2FA reset successfully!",
    changing_pwd: "Changing password..",
    pwd_changed: "Password changed successfully!",
    pwd_copied: "Password copied",
    session_expired: "Your session has been expired",
    loading_data: 'Loading data..',
    error_loading_data: 'Error loading data.',
    adding_provider: 'Adding provider..',
    updating_provider: 'Updating provider..',
    provider_added_success: 'Provider added successfully.',
    provider_updated_success: 'Provider updated successfully.',
    deleting_provider: "Deleting provider",
    provider_deleted_success: "Provider deleted successfully",
    switch_updated_success: "Switch location updated successfully.",
    switch_updated_error: "Error in updating switch location.",
};


/***/ }),

/***/ "./src/app/common/directives/datetimepicker.directive.ts":
/*!***************************************************************!*\
  !*** ./src/app/common/directives/datetimepicker.directive.ts ***!
  \***************************************************************/
/*! exports provided: DatetimepickerDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatetimepickerDirective", function() { return DatetimepickerDirective; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let DatetimepickerDirective = class DatetimepickerDirective {
    constructor(eleRef, zone) {
        this.eleRef = eleRef;
        this.zone = zone;
        this.changeVal = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"];
    }
    onBlur(event) { event.stopImmediatePropagation(); }
    ngAfterViewInit() {
        let nativeElement = this.eleRef.nativeElement;
        jQuery(nativeElement).datetimepicker({
            format: 'Y/m/d H:i:s',
            onChangeDateTime: function (dp, $input) {
                nativeElement.dispatchEvent(new Event("change"));
            },
            maxDate: this.maxDate
        });
    }
    ngOnDestroy() {
        jQuery(this.eleRef.nativeElement).datetimepicker('destroy');
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])('blur', ['$event']),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Function),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Event]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:returntype", void 0)
], DatetimepickerDirective.prototype, "onBlur", null);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], DatetimepickerDirective.prototype, "maxDate", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], DatetimepickerDirective.prototype, "changeVal", void 0);
DatetimepickerDirective = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"])({
        selector: '[datetime-picker]'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]])
], DatetimepickerDirective);



/***/ }),

/***/ "./src/app/common/dygraph/dygraph.component.css":
/*!******************************************************!*\
  !*** ./src/app/common/dygraph/dygraph.component.css ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "canvas{\r\n   width: 751px !important;\r\n    height: 400px !important;\r\n}\r\n\r\n.ng-dygraphs .loader-holder {\r\n    display: none !important;\r\n}\r\n\r\n.ng-dygraphs .loader {\r\n    display: none !important;\r\n }\r\n\r\n.dygraph-legend{\r\n    font-weight: 300 !important;\r\n     width: 350px !important;\r\n    font-family: arial;\r\n    top: -20px !important;\r\n }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2R5Z3JhcGgvZHlncmFwaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0dBQ0csdUJBQXVCO0lBQ3RCLHdCQUF3QjtBQUM1Qjs7QUFFQTtJQUNJLHdCQUF3QjtBQUM1Qjs7QUFFQztJQUNHLHdCQUF3QjtDQUMzQjs7QUFFQTtJQUNHLDJCQUEyQjtLQUMxQix1QkFBdUI7SUFDeEIsa0JBQWtCO0lBQ2xCLHFCQUFxQjtDQUN4QiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9keWdyYXBoL2R5Z3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImNhbnZhc3tcclxuICAgd2lkdGg6IDc1MXB4ICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDQwMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5uZy1keWdyYXBocyAubG9hZGVyLWhvbGRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiAubmctZHlncmFwaHMgLmxvYWRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbiB9XHJcblxyXG4gLmR5Z3JhcGgtbGVnZW5ke1xyXG4gICAgZm9udC13ZWlnaHQ6IDMwMCAhaW1wb3J0YW50O1xyXG4gICAgIHdpZHRoOiAzNTBweCAhaW1wb3J0YW50O1xyXG4gICAgZm9udC1mYW1pbHk6IGFyaWFsO1xyXG4gICAgdG9wOiAtMjBweCAhaW1wb3J0YW50O1xyXG4gfSJdfQ== */"

/***/ }),

/***/ "./src/app/common/dygraph/dygraph.component.html":
/*!*******************************************************!*\
  !*** ./src/app/common/dygraph/dygraph.component.html ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<ng-dygraphs [data]=\"data\" [noDataLabel]=\"'    '\" [options]=\"options\"></ng-dygraphs>\r\n"

/***/ }),

/***/ "./src/app/common/dygraph/dygraph.component.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/dygraph/dygraph.component.ts ***!
  \*****************************************************/
/*! exports provided: DygraphComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DygraphComponent", function() { return DygraphComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _services_isl_data_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/isl-data.service */ "./src/app/common/services/isl-data.service.ts");
/* harmony import */ var _services_dygraph_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");




let DygraphComponent = class DygraphComponent {
    constructor(islDataService, dygraphService, cdr) {
        this.islDataService = islDataService;
        this.dygraphService = dygraphService;
        this.cdr = cdr;
        this.zoomChange = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.graphAPIFlag = false;
        this.data = [];
        this.highestYaXis = null;
        this.options = Object.assign({}, {
            width: "auto",
            chartHeight: "380",
            legend: "onmouseover",
            noDataLabel: "Please wait",
        });
        this.count = 0;
        this.objectCount = 0;
        this.optionsObject = {};
        this.zoomCallbackHandler = (minX, maxX, yRanges) => {
            this.zoomChange.emit({ minX: minX, maxX: maxX, yRanges: yRanges });
        };
    }
    constructGraphData(data, jsonResponse, startDate, endDate, timezone) {
        this.numOperator = 0;
        var metric1 = "";
        var metric2 = "";
        var direction1 = "";
        var direction2 = "";
        var labels = ["Time", "X", "Y"];
        var graphData = [];
        if (typeof startDate !== "undefined" && startDate != null) {
            var dat = new Date(startDate);
            var startTime = dat.getTime();
            var usedDate = new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                startTime = startTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(startTime), null, null];
            graphData.push(arr);
        }
        if (!jsonResponse) {
            var getValue = typeof data[0] !== "undefined" ? data[0].dps : {};
            var fDps = [];
            var rDps = [];
            metric1 = typeof data[0] !== "undefined" ? data[0].metric : "";
            if (data.length == 2) {
                var getVal = typeof data[1] !== "undefined" ? data[1].dps : {};
                rDps = Object.keys(getVal);
                metric2 = data[1].metric;
                if (data[1].tags.direction) {
                    metric2 = data[1].metric + "(" + data[1].tags.direction + ")";
                }
                if (data[0].tags.direction) {
                    metric1 = data[0].metric + "(" + data[0].tags.direction + ")";
                }
            }
            fDps = Object.keys(getValue);
            var graphDps = fDps.concat(rDps);
            graphDps.sort();
            graphDps = graphDps.filter((v, i, a) => a.indexOf(v) === i);
            if (graphDps.length <= 0) {
                metric1 = "F";
                metric2 = "R";
            }
            else {
                for (var index = 0; index < graphDps.length; index++) {
                    let i = graphDps[index];
                    this.numOperator = parseInt(i);
                    if (getValue[i] == null || typeof getValue[i] == 'undefined') {
                        getValue[i] = null;
                    }
                    else if (getValue[i] < 0) {
                        getValue[i] = 0;
                    }
                    var temparr = [];
                    temparr[0] = new Date(Number(this.numOperator * 1000));
                    temparr[1] = getValue[i];
                    if (data.length == 2) {
                        if (getVal[i] == null || typeof getVal[i] == 'undefined') {
                            getVal[i] = null;
                        }
                        else if (getVal[i] < 0) {
                            getVal[i] = 0;
                        }
                        temparr[2] = getVal[i];
                    }
                    graphData.push(temparr);
                    this.numOperator++;
                }
            }
            if (metric1 && metric2) {
                labels = ["Time", metric1, metric2];
            }
            else if (metric1) {
                labels = ["Time", metric1];
            }
            else {
                labels = ["Time", metric2];
            }
        }
        else {
            metric1 = "F";
            metric2 = "R";
            labels = ["Time", metric1, metric2];
        }
        if (typeof endDate !== "undefined" && endDate != null) {
            var dat = new Date(endDate);
            var lastTime = dat.getTime();
            var usedDate = graphData && graphData.length
                ? new Date(graphData[graphData.length - 1][0])
                : new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                lastTime = lastTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(lastTime), null, null];
            graphData.push(arr);
            //graphData.shift();
        }
        return { data: graphData, labels: labels };
    }
    ngOnInit() {
        this.islDataService.currentMessage.subscribe(message => {
            this.message = message;
            if (this.count >= 1) {
                this.options = Object.assign({}, {
                    width: "auto",
                    chartHeight: "380",
                    legend: "onmouseover",
                    noDataLabel: "Please wait",
                });
                this.drawGraphCall(message);
            }
            this.count++;
        });
        this.islDataService.currentOptionsObject.subscribe(message => {
            this.optionsObject = message;
            this.graphDataOptions = message;
            if (this.objectCount >= 1) {
                this.options = Object.assign({}, {
                    width: "auto",
                    chartHeight: "380",
                    legend: "onmouseover",
                    noDataLabel: "Please wait",
                });
                this.drawGraphCall(message);
            }
            this.objectCount++;
        });
        this.islDataService.IslFlowGraph.subscribe(message => {
            this.message = message;
            if (this.count >= 1) {
                this.options = Object.assign({}, {
                    width: "auto",
                    chartHeight: "380",
                    legend: "onmouseover",
                    noDataLabel: "Please wait",
                });
                this.plotISLFlowGraph(message);
            }
            this.count++;
        });
        this.islDataService.IslFlowStackedGraph.subscribe(message => {
            this.message = message;
            if (this.count >= 1) {
                this.options = Object.assign({}, {
                    width: "auto",
                    chartHeight: "380",
                    legend: "onmouseover",
                    noDataLabel: "Please wait",
                });
                this.plotISLStackedFlowGraph(message);
            }
            this.count++;
        });
        this.dygraphService.flowGraph.subscribe(data => {
            this.options = Object.assign({}, {
                width: "auto",
                chartHeight: "380",
                legend: "onmouseover",
                noDataLabel: "Please wait",
            });
            this.plotFlowGraph(data.data, data.startDate, data.endDate, data.timezone);
            try {
                this.cdr.detectChanges();
            }
            catch (err) { }
        });
        this.dygraphService.meterGraph.subscribe(data => {
            this.options = Object.assign({}, {
                width: "auto",
                chartHeight: "380",
                legend: "onmouseover",
                noDataLabel: "Please wait",
            });
            this.plotMeterGraph(data.data, data.startDate, data.endDate, data.timezone);
            try {
                this.cdr.detectChanges();
            }
            catch (err) { }
        });
    }
    drawGraphCall(dataObj) {
        this.timezone = dataObj.timezone;
        this.jsonResponse = undefined;
        let processedResponse = this.dygraphService.constructGraphData(dataObj.data, this.jsonResponse, dataObj.startDate, dataObj.endDate, dataObj.timezone);
        this.data = processedResponse.data;
        this.labels = processedResponse.labels;
        if (this.timezone == "UTC") {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: true,
                colors: ["#1C227C", "#A1CD24"],
                legend: "onmouseover",
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
        else {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: false,
                colors: ["#1C227C", "#A1CD24"],
                legend: "onmouseover",
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
    }
    plotISLFlowGraph(dataObj) {
        this.timezone = dataObj.timezone;
        this.jsonResponse = undefined;
        this.labels = dataObj.labels;
        this.data = dataObj.data;
        if (this.timezone == "UTC") {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: true,
                series: dataObj.series,
                legend: "onmouseover",
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
        else {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: false,
                series: dataObj.series,
                legend: "onmouseover",
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
    }
    plotISLStackedFlowGraph(dataObj) {
        this.timezone = dataObj.timezone;
        this.jsonResponse = undefined;
        this.labels = dataObj.labels;
        this.data = dataObj.data;
        if (this.timezone == "UTC") {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: true,
                series: dataObj.series,
                legend: "onmouseover",
                stackedGraph: true,
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler,
                axes: {
                    x: {
                        drawGrid: false
                    }
                }
            });
        }
        else {
            this.options = Object.assign(this.options, {
                labels: this.labels,
                drawPoints: false,
                animatedZooms: true,
                labelsUTC: false,
                series: dataObj.series,
                legend: "onmouseover",
                stackedGraph: true,
                valueRange: [0, null],
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler,
                axes: {
                    x: {
                        drawGrid: false
                    }
                }
            });
        }
    }
    /** Start : Flow Graphs */
    plotMeterGraph(data, startDate, endDate, timezone) {
        var graph_data = this.dygraphService.computeMeterGraphData(data, startDate, endDate, timezone);
        var graphData = graph_data["data"];
        var labels = graph_data["labels"];
        var series = {};
        var colors = graph_data["color"];
        if (labels && labels.length) {
            for (var k = 0; k < labels.length; k++) {
                if (k != 0) {
                    series[labels[k]] = { color: colors[k - 1] };
                }
            }
        }
        this.data = graphData;
        if (timezone == "UTC") {
            this.options = Object.assign(this.options, {
                labels: labels,
                labelsUTC: true,
                series: series,
                legend: "onmouseover",
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
        else {
            this.options = Object.assign(this.options, {
                labels: labels,
                series: series,
                labelsUTC: false,
                legend: "onmouseover",
                connectSeparatedPoints: true,
                legendFormatter: this.dygraphService.legendFormatter,
                zoomCallback: this.zoomCallbackHandler
            });
        }
    }
    plotFlowGraph(data, startDate, endDate, timezone) {
        let graphData = this.dygraphService.constructGraphData(data, undefined, startDate, endDate, timezone);
        try {
            this.data = graphData["data"];
            this.labels = graphData["labels"];
            if (timezone == "UTC") {
                this.options = Object.assign(this.options, {
                    labels: this.labels,
                    animatedZooms: true,
                    labelsUTC: true,
                    colors: ["#1C227C", "#A1CD24"],
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoomCallbackHandler
                });
            }
            else {
                this.options = Object.assign(this.options, {
                    labels: this.labels,
                    animatedZooms: true,
                    labelsUTC: false,
                    colors: ["#1C227C", "#A1CD24"],
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoomCallbackHandler
                });
            }
        }
        catch (err) { }
    }
    /** End : Flow Graph Path */
    ngOnDestroy() {
        this.cdr.detach();
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], DygraphComponent.prototype, "zoomChange", void 0);
DygraphComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-dygraph",
        template: __webpack_require__(/*! ./dygraph.component.html */ "./src/app/common/dygraph/dygraph.component.html"),
        styles: [__webpack_require__(/*! ./dygraph.component.css */ "./src/app/common/dygraph/dygraph.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_isl_data_service__WEBPACK_IMPORTED_MODULE_2__["IslDataService"],
        _services_dygraph_service__WEBPACK_IMPORTED_MODULE_3__["DygraphService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectorRef"]])
], DygraphComponent);



/***/ }),

/***/ "./src/app/common/enums/isl.enum.ts":
/*!******************************************!*\
  !*** ./src/app/common/enums/isl.enum.ts ***!
  \******************************************/
/*! exports provided: ISL */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISL", function() { return ISL; });
var ISL;
(function (ISL) {
    ISL["DISCOVERED"] = "#00baff";
    ISL["FAILED"] = "#d93923";
    ISL["UNIDIR"] = "#333";
    ISL["MOVED"] = "#9e3574";
    ISL["FLOWCOUNT"] = "#228B22";
})(ISL || (ISL = {}));


/***/ }),

/***/ "./src/app/common/interceptors/app.auth.interceptor.ts":
/*!*************************************************************!*\
  !*** ./src/app/common/interceptors/app.auth.interceptor.ts ***!
  \*************************************************************/
/*! exports provided: AppAuthInterceptor, AppAuthProvider */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppAuthInterceptor", function() { return AppAuthInterceptor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppAuthProvider", function() { return AppAuthProvider; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _services_cookie_manager_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../services/cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../constants/constants */ "./src/app/common/constants/constants.ts");










let AppAuthInterceptor = class AppAuthInterceptor {
    constructor(appLoader, cookieManager, _router, toastr) {
        this.appLoader = appLoader;
        this.cookieManager = cookieManager;
        this._router = _router;
        this.toastr = toastr;
    }
    intercept(request, next) {
        let requestToForward = request;
        var url_to_call = request.url;
        var url_arr = url_to_call.split('/');
        if (typeof (url_arr[2]) != 'undefined' && url_arr[2] == location.host) {
            let token = this.cookieManager.get('XSRF-TOKEN');
            if (token !== null) {
                requestToForward = request.clone({ setHeaders: { "X-XSRF-TOKEN": token } });
            }
        }
        return next.handle(requestToForward).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["catchError"])(err => {
            if (err.status === 401) {
                let msg = this.cookieManager.get('isLoggedOutInProgress') ? "" : _constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].session_expired;
                this.appLoader.show(msg);
                localStorage.removeItem('flows');
                localStorage.removeItem('is2FaEnabled');
                localStorage.removeItem('userPermissions');
                localStorage.removeItem('user_id');
                localStorage.removeItem('username');
                this.cookieManager.delete('isLoggedOutInProgress');
                this._router.navigate(['/logout']);
            }
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["throwError"])(err);
        }));
    }
};
AppAuthInterceptor = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"], _services_cookie_manager_service__WEBPACK_IMPORTED_MODULE_6__["CookieManagerService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrService"]])
], AppAuthInterceptor);

let AppAuthProvider = {
    provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HTTP_INTERCEPTORS"],
    useClass: AppAuthInterceptor,
    multi: true
};


/***/ }),

/***/ "./src/app/common/pipes/mb.pipe.ts":
/*!*****************************************!*\
  !*** ./src/app/common/pipes/mb.pipe.ts ***!
  \*****************************************/
/*! exports provided: MbPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MbPipe", function() { return MbPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let MbPipe = class MbPipe {
    transform(value, args) {
        return (Math.floor(value / 1000)) + " Mbps";
    }
};
MbPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'mb'
    })
], MbPipe);



/***/ }),

/***/ "./src/app/common/pipes/switchidmask.pipe.ts":
/*!***************************************************!*\
  !*** ./src/app/common/pipes/switchidmask.pipe.ts ***!
  \***************************************************/
/*! exports provided: SwitchidmaskPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchidmaskPipe", function() { return SwitchidmaskPipe; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SwitchidmaskPipe = class SwitchidmaskPipe {
    transform(value = null, pattern) {
        if (value) {
            var prefix = "SW";
            if (pattern == 'legacy') {
                return prefix + value.replace(/:/g, "").toUpperCase();
            }
            else {
                return this.addCharacter(value, 2).join(':').substring(3).toLowerCase();
            }
        }
    }
    addCharacter(str, n) {
        var ret = [];
        for (var i = 0, len = str.length; i < len; i += n) {
            ret.push(str.substr(i, n));
        }
        return ret;
    }
};
SwitchidmaskPipe = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Pipe"])({
        name: 'switchidmask'
    })
], SwitchidmaskPipe);



/***/ }),

/***/ "./src/app/common/services/alertify.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/services/alertify.service.ts ***!
  \*****************************************************/
/*! exports provided: AlertifyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlertifyService", function() { return AlertifyService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let AlertifyService = class AlertifyService {
    constructor() { }
    confirm(title, message, okCallback) {
        alertify.confirm(message, function (e) {
            if (e) {
                okCallback();
            }
            else {
                console.log(e);
                //Do nothing
            }
        })
            .setHeader(title)
            .set('labels', { ok: 'Yes', cancel: 'No' })
            .set({ transition: 'slide' })
            .set('position', 'top-center')
            .show(true, 'custom_class');
    }
    success(title, message) {
        alertify.success(message).setHeader(title);
    }
    error(title, message) {
        alertify.error(message).setHeader(title);
    }
    warning(title, message) {
        alertify.warning(message).setHeader(title);
    }
    message(message) {
        alertify.message(message);
    }
    prompt() {
        alertify.prompt().setContent('<app-otp></app-otp>').show();
    }
};
AlertifyService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], AlertifyService);



/***/ }),

/***/ "./src/app/common/services/common.service.ts":
/*!***************************************************!*\
  !*** ./src/app/common/services/common.service.ts ***!
  \***************************************************/
/*! exports provided: CommonService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CommonService", function() { return CommonService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");




let CommonService = class CommonService {
    constructor(httpClient) {
        this.httpClient = httpClient;
        this.linkStoreTransmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"];
        this.linkStoreReceiver = this.linkStoreTransmitter.asObservable();
        this.sessionTranmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"];
        this.sessionReceiver = this.sessionTranmitter.asObservable();
        this.currentUrl = null;
    }
    groupBy(array, f) {
        var groups = {};
        array.forEach(function (o) {
            var group = JSON.stringify(f(o));
            groups[group] = groups[group] || [];
            groups[group].push(o);
        });
        return Object.keys(groups).map(function (group) {
            return groups[group];
        });
    }
    getCommonColorCode(i, arr) {
        var colourArr = ['#e6194b', '#3cb44b', '#ffe119', '#4363d8', '#f58231', '#911eb4', '#46f0f0', '#f032e6', '#bcf60c', '#fabebe', '#008080', '#e6beff', '#9a6324', '#fffac8', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#808080', '#ffffff', '#000000'];
        if (i < colourArr.length) {
            return colourArr[i];
        }
        else {
            return this.getColorCode(i, arr);
        }
    }
    getColorCode(j, arr) {
        var chars = "0123456789ABCDE".split("");
        var hex = "#";
        for (var i = 0; i < 6; i++) {
            hex += chars[Math.floor(Math.random() * 14)];
        }
        var colorCode = hex;
        if (arr.indexOf(colorCode) < 0) {
            return colorCode;
        }
        else {
            this.getColorCode(j, arr);
        }
    }
    pluck(array, key) {
        return array.map(function (d) {
            return d[key];
        });
    }
    getPercentage(val, baseVal) {
        var percentage = (val / baseVal) * 100;
        var percentage_fixed = percentage.toFixed(2);
        var value_percentage = percentage_fixed.split(".");
        if (parseInt(value_percentage[1]) > 0) {
            return percentage.toFixed(2);
        }
        else {
            return value_percentage[0];
        }
    }
    isInt(n) {
        var num = /^-?[0-9]+$/;
        return num.test(n);
    }
    isFloat(n) {
        var num = /^[-+]?[0-9]+\.[0-9]+$/;
        return num.test(n);
    }
    hasPermission(permission) {
        if (JSON.parse(localStorage.getItem("userPermissions"))) {
            let userPermissions = JSON.parse(localStorage.getItem("userPermissions"));
            if ((userPermissions).find(up => up == permission)) {
                return true;
            }
            else {
                return false;
            }
        }
        return false;
    }
    setIdentityServer(value) {
        this.linkStoreTransmitter.emit(value);
    }
    setCurrentUrl(url) {
        this.currentUrl = url;
    }
    getCurrentUrl() {
        return this.currentUrl;
    }
    setUserData(user) {
        this.sessionTranmitter.emit(user);
    }
    getLogout() {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].appEndPoint}/logout`, {});
    }
    getAutoreloadValues() {
        return [
            { value: 10, text: '10' },
            { value: 15, text: '15' },
            { value: 30, text: '30' },
            { value: 45, text: '45' },
            { value: 60, text: '60' },
        ];
    }
    convertBytesToMbps(value) {
        let valInMbps = (value / 1000) / 1000; // conversion
        return (valInMbps < 1) ? Math.ceil(valInMbps * 1000) / 1000 : Math.ceil(valInMbps * 100) / 100;
    }
    convertNumberToString(data) {
        var returnDatajson = data.replace(/([\[:])?(\d+)([,\}\]])/g, "$1\"$2\"$3").replace(/-"/g, '\"-');
        returnDatajson = JSON.parse(returnDatajson);
        return returnDatajson;
    }
    convertDpsToSecond(data) {
        var dps = (data.dps && Object.keys(data.dps).length > 0) ? data.dps : [];
        var dpsData = {};
        Object.keys(dps).forEach(function (i, v) {
            dpsData[i] = Number(dps[i] / 1000000000).toFixed(4);
        });
        data.dps = dpsData;
        return data;
    }
    convertDpsToMicroSecond(data) {
        var dps = (data.dps && Object.keys(data.dps).length > 0) ? data.dps : [];
        var dpsData = {};
        Object.keys(dps).forEach(function (i, v) {
            dpsData[i] = Number(dps[i] / 1000).toFixed(4);
        });
        data.dps = dpsData;
        return data;
    }
    convertDpsToMilliSecond(data) {
        var dps = (data.dps && Object.keys(data.dps).length > 0) ? data.dps : [];
        var dpsData = {};
        Object.keys(dps).forEach(function (i, v) {
            dpsData[i] = Number(dps[i] / 1000000).toFixed(4);
        });
        data.dps = dpsData;
        return data;
    }
    saveSessionTimeoutSetting(timeout) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/settings/SESSION_TIMEOUT`, timeout);
    }
    getSwitchNameSourceTypes() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/settings/storagetypes`);
    }
    saveSwitchNameSourceSettings(value) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/settings/SWITCH_NAME_STORAGE_TYPE`, value);
    }
    getAllSettings() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/settings`);
    }
};
CommonService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], CommonService);



/***/ }),

/***/ "./src/app/common/services/cookie-manager.service.ts":
/*!***********************************************************!*\
  !*** ./src/app/common/services/cookie-manager.service.ts ***!
  \***********************************************************/
/*! exports provided: CookieManagerService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CookieManagerService", function() { return CookieManagerService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let CookieManagerService = class CookieManagerService {
    constructor() { }
    set(name, value, days = null) {
        var expires = "";
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = "; expires=" + date.toUTCString();
        }
        document.cookie = name + "=" + value + expires + "; path=/";
    }
    get(name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ')
                c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0)
                return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
    delete(name) {
        this.set(name, "", -1);
    }
    ;
};
CookieManagerService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], CookieManagerService);



/***/ }),

/***/ "./src/app/common/services/dygraph.service.ts":
/*!****************************************************!*\
  !*** ./src/app/common/services/dygraph.service.ts ***!
  \****************************************************/
/*! exports provided: DygraphService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DygraphService", function() { return DygraphService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");





let DygraphService = class DygraphService {
    constructor(httpClient) {
        this.httpClient = httpClient;
        this.flowPathGraphSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"](); /*  */
        this.flowGraphSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.meterGraphSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.metrices = [
            "bits:Bits/sec",
            "bytes:Bytes/sec",
            "packets:Packets/sec",
            "drops:Drops/sec",
            "errors:Errors/sec",
            "collisions:Collisions",
            "frameerror:Frame Errors",
            "overerror:Overruns",
            "crcerror:CRC Errors"
        ];
        this.flowPathGraph = this.flowPathGraphSource.asObservable();
        this.flowGraph = this.flowGraphSource.asObservable();
        this.meterGraph = this.meterGraphSource.asObservable();
    }
    ;
    getForwardGraphData(src_switch, src_port, dst_switch, dst_port, frequency, graph, menu, from, to) {
        if (graph === "latency") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/${src_switch}/${src_port}/${dst_switch}/${dst_port}/${from}/${to}/${frequency}/latency`);
        }
        if (graph === "rtt") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/${src_switch}/${src_port}/${dst_switch}/${dst_port}/${from}/${to}/${frequency}/rtt`);
        }
        if (graph === "source") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/switchid/${src_switch}/port/${src_port}/${from}/${to}/${frequency}/${menu}`);
        }
        if (graph === "target") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/switchid/${dst_switch}/port/${dst_port}/${from}/${to}/${frequency}/${menu}`);
        }
        if (graph === "isllossforward") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/losspackets/${src_switch}/${src_port}/${dst_switch}/${dst_port}/${from}/${to}/${frequency}/${menu}`);
        }
        if (graph === "isllossreverse") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/losspackets/${dst_switch}/${dst_port}/${src_switch}/${src_port}/${from}/${to}/${frequency}/${menu}`);
        }
    }
    getBackwardGraphData(src_switch, src_port, dst_switch, dst_port, frequency, graph, from, to) {
        if (graph === "rtt") {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/${dst_switch}/${dst_port}/${src_switch}/${src_port}/${from}/${to}/${frequency}/rtt`);
        }
        if (graph == 'latency') {
            return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/${dst_switch}/${dst_port}/${src_switch}/${src_port}/${from}/${to}/${frequency}/latency`);
        }
    }
    changeFlowPathGraphData(pathGraphData) {
        this.flowPathGraphSource.next(pathGraphData);
    }
    changeMeterGraphData(graphData) {
        this.meterGraphSource.next(graphData);
    }
    changeFlowGraphData(graphData) {
        this.flowGraphSource.next(graphData);
    }
    getFlowMetricData() {
        let metricArray = this.metrices;
        let tempArray = [];
        for (var i = 0; i < metricArray.length; i++) {
            if (metricArray[i].includes("bits") ||
                metricArray[i].includes("packets") ||
                metricArray[i].includes("bytes")) {
                tempArray.push({
                    label: metricArray[i].split(":")[1],
                    value: metricArray[i].split(":")[0]
                });
            }
        }
        return tempArray;
    }
    getPortMetricData() {
        let metricArray = this.metrices;
        let tempArray = [];
        for (var i = 0; i < metricArray.length; i++) {
            if (metricArray[i].includes("bytes") ||
                metricArray[i].includes("latency")) {
            }
            else {
                tempArray.push({
                    label: metricArray[i].split(":")[1],
                    value: metricArray[i].split(":")[0]
                });
            }
        }
        return tempArray;
    }
    getPacketsMetricData() {
        return [
            { label: "Forward", value: "forward" },
            { label: "Reverse", value: "reverse" }
        ];
    }
    getMetricDirections() {
        return [
            { label: "Both", value: "both" },
            { label: "Forward", value: "forward" },
            { label: "Reverse", value: "reverse" }
        ];
    }
    constructGraphData(data, jsonResponse, startDate, endDate, timezone) {
        this.numOperator = 0;
        var metric1 = "";
        var metric2 = "";
        var direction1 = "";
        var direction2 = "";
        var labels = ["Time", "X", "Y"];
        var graphData = [];
        if (typeof startDate !== "undefined" && startDate != null) {
            var dat = new Date(startDate);
            var startTime = dat.getTime();
            var usedDate = new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                startTime = startTime - (usedDate.getTimezoneOffset() * 60 * 1000);
            }
            var arr = [new Date(startTime)];
            if (data && data.length) {
                for (let i = 0; i < data.length; i++) {
                    arr.push(null);
                }
            }
            else {
                arr.push(null);
                arr.push(null);
            }
            graphData.push(arr);
        }
        if (!jsonResponse) {
            var fDpsObject = typeof data[0] !== "undefined" ? data[0].dps : {};
            var fDps = [];
            var rDps = [];
            metric1 = typeof data[0] !== "undefined" ? data[0].metric : "";
            if (data.length == 2) {
                var rDpsObject = typeof data[1] !== "undefined" ? data[1].dps : {};
                rDps = Object.keys(rDpsObject);
                metric2 = data[1].metric;
                if (data[1].tags.direction) {
                    metric2 = data[1].metric + "(" + data[1].tags.direction + ")";
                }
                if (data[0].tags.direction) {
                    metric1 = data[0].metric + "(" + data[0].tags.direction + ")";
                }
            }
            fDps = Object.keys(fDpsObject);
            var graphDps = fDps.concat(rDps);
            graphDps.sort();
            graphDps = graphDps.filter((v, i, a) => a.indexOf(v) === i);
            if (graphDps.length <= 0) {
                metric1 = "F";
                metric2 = "R";
            }
            else {
                for (var index = 0; index < graphDps.length; index++) {
                    let i = graphDps[index];
                    this.numOperator = parseInt(i);
                    if (fDpsObject[i] == null || typeof fDpsObject[i] == 'undefined') {
                        fDpsObject[i] = null;
                    }
                    else if (fDpsObject[i] < 0) {
                        fDpsObject[i] = 0;
                    }
                    var temparr = [];
                    temparr[0] = new Date(Number(this.numOperator * 1000));
                    temparr[1] = fDpsObject[i];
                    if (data.length == 2) {
                        if (rDpsObject[i] == null || typeof rDpsObject[i] == 'undefined') {
                            rDpsObject[i] = null;
                        }
                        else if (rDpsObject[i] < 0) {
                            rDpsObject[i] = 0;
                        }
                        temparr[2] = rDpsObject[i];
                    }
                    graphData.push(temparr);
                    this.numOperator++;
                }
            }
            if (metric1 && metric2) {
                labels = ["Time", metric1, metric2];
            }
            else if (metric1) {
                labels = ["Time", metric1];
            }
            else {
                labels = ["Time", metric2];
            }
        }
        else {
            metric1 = "F";
            metric2 = "R";
            labels = ["Time", metric1, metric2];
        }
        if (typeof endDate !== "undefined" && endDate != null) {
            var dat = new Date(endDate);
            var lastTime = dat.getTime();
            var usedDate = graphData && graphData.length
                ? new Date(graphData[graphData.length - 1][0])
                : new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                lastTime = lastTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(lastTime)];
            if (data && data.length) {
                for (let i = 0; i < data.length; i++) {
                    arr.push(null);
                }
            }
            else {
                arr.push(null);
                arr.push(null);
            }
            graphData.push(arr);
        }
        return { data: graphData, labels: labels };
    }
    getColorCode(j, arr) {
        var chars = "0123456789ABCDE".split("");
        var hex = "#";
        for (var i = 0; i < 6; i++) {
            hex += chars[Math.floor(Math.random() * 14)];
        }
        var colorCode = hex;
        if (arr.indexOf(colorCode) < 0) {
            return colorCode;
        }
        else {
            this.getColorCode(j, arr);
        }
    }
    getCookieBasedData(data, type) {
        var constructedData = {};
        for (var i = 0; i < data.length; i++) {
            var cookieId = data[i].tags && data[i].tags['cookie'] ? data[i].tags['cookie'] : null;
            if (cookieId) {
                var keyArray = Object.keys(constructedData);
                if (keyArray.indexOf(cookieId) > -1) {
                    constructedData[cookieId].push(data[i]);
                }
                else {
                    if (type == 'forward' && cookieId.charAt(0) == '4') {
                        constructedData[cookieId] = [];
                        constructedData[cookieId].push(data[i]);
                    }
                    else if (type == 'reverse' && cookieId.charAt(0) == '2') {
                        constructedData[cookieId] = [];
                        constructedData[cookieId].push(data[i]);
                    }
                }
            }
        }
        return constructedData;
    }
    getCookieDataforFlowStats(data, type) {
        var constructedData = [];
        for (var i = 0; i < data.length; i++) {
            var cookieId = data[i].tags && data[i].tags['cookie'] ? data[i].tags['cookie'] : null;
            if (cookieId) {
                if (type == 'forward' && cookieId.charAt(0) == '4') {
                    constructedData.push(data[i]);
                }
                else if (type == 'reverse' && cookieId.charAt(0) == '2') {
                    constructedData.push(data[i]);
                }
            }
        }
        return constructedData;
    }
    computeMeterGraphData(data, startDate, endDate, timezone) {
        let maxtrixArray = [];
        let labels = ["Date"];
        let color = [];
        let meterChecked = {};
        if (typeof startDate !== "undefined" && startDate != null) {
            var dat = new Date(startDate);
            var startTime = dat.getTime();
            var usedDate = new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                startTime = startTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(startTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        /** process graph data */
        if (data) {
            if (data.length > 0) {
                /**getting all unique dps timestamps */
                let timestampArray = [];
                let dpsArray = [];
                for (let j = 0; j < data.length; j++) {
                    var dataValues = typeof data[j] !== "undefined" ? data[j].dps : null;
                    var metric = typeof data[j] !== "undefined" ? data[j].metric : "";
                    metric = metric + "(switchid=" + data[j].tags.switchid + ", meterid=" + data[j].tags['meterid'] + ")";
                    labels.push(metric);
                    var colorCode = this.getColorCode(j, color);
                    if (meterChecked && typeof (meterChecked[data[j].tags['meterid']]) != 'undefined' && typeof (meterChecked[data[j].tags['meterid']][data[j].tags.switchid]) != 'undefined') {
                        colorCode = meterChecked[data[j].tags['meterid']][data[j].tags.switchid];
                        color.push(colorCode);
                    }
                    else {
                        if (meterChecked && typeof (meterChecked[data[j].tags['meterid']]) != 'undefined') {
                            meterChecked[data[j].tags['meterid']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                        else {
                            meterChecked[data[j].tags['meterid']] = [];
                            meterChecked[data[j].tags['meterid']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                    }
                    if (dataValues) {
                        timestampArray = timestampArray.concat(Object.keys(dataValues));
                        dpsArray.push(dataValues);
                    }
                }
                timestampArray = Array.from(new Set(timestampArray)); /**Extracting unique timestamps */
                timestampArray.sort();
                for (let m = 0; m < timestampArray.length; m++) {
                    let row = [];
                    for (let n = 0; n < dpsArray.length; n++) {
                        if (typeof dpsArray[n][timestampArray[m]] != 'undefined') {
                            row.push(dpsArray[n][timestampArray[m]]);
                        }
                        else {
                            row.push(null);
                        }
                    }
                    row.unshift(new Date(Number(parseInt(timestampArray[m]) * 1000)));
                    maxtrixArray.push(row);
                }
            }
        }
        if (typeof endDate !== "undefined" && endDate != null) {
            var dat = new Date(endDate);
            var lastTime = dat.getTime();
            var usedDate = maxtrixArray && maxtrixArray.length
                ? new Date(maxtrixArray[maxtrixArray.length - 1][0])
                : new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                lastTime = lastTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(lastTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        return { labels: labels, data: maxtrixArray, color: color };
    }
    computeFlowPathGraphData(data, startDate, endDate, type, timezone, loadfromcookie) {
        let maxtrixArray = [];
        var labels = ["Date"];
        var color = [];
        let cookiesChecked = {};
        if (typeof startDate !== "undefined" && startDate != null) {
            var dat = new Date(startDate);
            var startTime = dat.getTime();
            var usedDate = new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                startTime = startTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(startTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        if (data) {
            if (data.length > 0) {
                /**getting all unique dps timestamps */
                let timestampArray = [];
                let dpsArray = [];
                for (let j = 0; j < data.length; j++) {
                    var dataValues = typeof data[j] !== "undefined" ? data[j].dps : null;
                    var metric = typeof data[j] !== "undefined" ? data[j].metric : "";
                    metric = metric + "(switchid=" + data[j].tags.switchid + ", cookie=" + data[j].tags['cookie'] + ")";
                    labels.push(metric);
                    var colorCode = this.getColorCode(j, color);
                    if (cookiesChecked && typeof (cookiesChecked[data[j].tags['cookie']]) != 'undefined' && typeof (cookiesChecked[data[j].tags['cookie']][data[j].tags.switchid]) != 'undefined') {
                        colorCode = cookiesChecked[data[j].tags['cookie']][data[j].tags.switchid];
                        color.push(colorCode);
                    }
                    else {
                        if (cookiesChecked && typeof (cookiesChecked[data[j].tags['cookie']]) != 'undefined') {
                            cookiesChecked[data[j].tags['cookie']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                        else {
                            cookiesChecked[data[j].tags['cookie']] = [];
                            cookiesChecked[data[j].tags['cookie']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                    }
                    if (dataValues) {
                        timestampArray = timestampArray.concat(Object.keys(dataValues));
                        dpsArray.push(dataValues);
                    }
                }
                timestampArray = Array.from(new Set(timestampArray)); /**Extracting unique timestamps */
                timestampArray.sort();
                for (let m = 0; m < timestampArray.length; m++) {
                    let row = [];
                    for (let n = 0; n < dpsArray.length; n++) {
                        if (typeof dpsArray[n][timestampArray[m]] != 'undefined') {
                            row.push(dpsArray[n][timestampArray[m]]);
                        }
                        else {
                            row.push(null);
                        }
                    }
                    row.unshift(new Date(Number(parseInt(timestampArray[m]) * 1000)));
                    maxtrixArray.push(row);
                }
            }
        }
        if (typeof endDate !== "undefined" && endDate != null) {
            var dat = new Date(endDate);
            var lastTime = dat.getTime();
            var usedDate = maxtrixArray && maxtrixArray.length
                ? new Date(maxtrixArray[maxtrixArray.length - 1][0])
                : new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                lastTime = lastTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(lastTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        return { labels: labels, data: maxtrixArray, color: color };
    }
    computeFlowGraphDataForISL(data, startDate, endDate, timezone, direction) {
        let maxtrixArray = [];
        var labels = ["Date"];
        var color = [];
        let cookiesChecked = {};
        if (typeof startDate !== "undefined" && startDate != null) {
            var dat = new Date(startDate);
            var startTime = dat.getTime();
            var usedDate = new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                startTime = startTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(startTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        if (data) {
            if (data.length > 0) {
                /**getting all unique dps timestamps */
                let timestampArray = [];
                let dpsArray = [];
                for (let j = 0; j < data.length; j++) {
                    var dataValues = typeof data[j] !== "undefined" ? data[j].dps : null;
                    var metric = typeof data[j] !== "undefined" ? data[j].metric : "";
                    //metric = metric + "(switchid=" + data[j].tags.switchid + ", direction="+ direction +", flowid="+data[j].tags['flowid']+")";
                    metric = metric + "(flowid=" + data[j].tags['flowid'] + ")";
                    labels.push(metric);
                    var colorCode = this.getColorCode(j, color);
                    if (cookiesChecked && typeof (cookiesChecked[data[j].tags['flowid']]) != 'undefined' && typeof (cookiesChecked[data[j].tags['flowid']][data[j].tags.switchid]) != 'undefined') {
                        colorCode = cookiesChecked[data[j].tags['flowid']][data[j].tags.switchid];
                        color.push(colorCode);
                    }
                    else {
                        if (cookiesChecked && typeof (cookiesChecked[data[j].tags['flowid']]) != 'undefined') {
                            cookiesChecked[data[j].tags['flowid']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                        else {
                            cookiesChecked[data[j].tags['flowid']] = [];
                            cookiesChecked[data[j].tags['flowid']][data[j].tags.switchid] = colorCode;
                            color.push(colorCode);
                        }
                    }
                    if (dataValues) {
                        timestampArray = timestampArray.concat(Object.keys(dataValues));
                        dpsArray.push(dataValues);
                    }
                }
                timestampArray = Array.from(new Set(timestampArray)); /**Extracting unique timestamps */
                timestampArray.sort();
                for (let m = 0; m < timestampArray.length; m++) {
                    let row = [];
                    for (let n = 0; n < dpsArray.length; n++) {
                        if (typeof dpsArray[n][timestampArray[m]] != 'undefined') {
                            row.push(dpsArray[n][timestampArray[m]]);
                        }
                        else {
                            row.push(null);
                        }
                    }
                    row.unshift(new Date(Number(parseInt(timestampArray[m]) * 1000)));
                    maxtrixArray.push(row);
                }
            }
        }
        if (typeof endDate !== "undefined" && endDate != null) {
            var dat = new Date(endDate);
            var lastTime = dat.getTime();
            var usedDate = maxtrixArray && maxtrixArray.length
                ? new Date(maxtrixArray[maxtrixArray.length - 1][0])
                : new Date();
            if (typeof timezone !== "undefined" && timezone == "UTC") {
                lastTime = lastTime - usedDate.getTimezoneOffset() * 60 * 1000;
            }
            var arr = [new Date(lastTime)];
            if (data && data.length) {
                for (var j = 0; j < data.length; j++) {
                    arr.push(null);
                }
            }
            maxtrixArray.push(arr);
        }
        return { labels: labels, data: maxtrixArray, color: color };
    }
    legendFormatter(data) {
        if (data.x == null) {
            return '<br>' + data.series.map(function (series) { return series.dashHTML + ' ' + series.labelHTML; }).join('<br>');
        }
        var html = data.xHTML;
        data.series.forEach(function (series) {
            if (!series.isVisible)
                return;
            var labeledData = '';
            if (series.yHTML && series.yHTML != 'undefined' && series.yHTML != null) {
                labeledData = "<span style='color:" + series.color + "'>" + series.labelHTML + ': ' + series.yHTML + "</span>";
            }
            if (labeledData.trim() != '') {
                if (series.isHighlighted) {
                    labeledData = '<b>' + labeledData + '</b>';
                }
                html += '<br>' + labeledData;
            }
        });
        return html;
    }
};
DygraphService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root"
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], DygraphService);



/***/ }),

/***/ "./src/app/common/services/flowpath.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/services/flowpath.service.ts ***!
  \*****************************************************/
/*! exports provided: FlowpathService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowpathService", function() { return FlowpathService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var src_environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");







let FlowpathService = class FlowpathService {
    constructor(commonService, router) {
        this.commonService = commonService;
        this.router = router;
        this.forwardPathLoaded = false;
        this.reversepathLoaded = false;
        this.forwardpathLoadedChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.reversepathLoadedChange = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.diverseGroupCommonSwitch = [];
        this.diverseGroupCommonSwitchReverse = [];
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.min_zoom = 0.15;
        this.max_zoom = 3;
        this.zoomStep = 0.15;
        this.simulationArr = {};
        this.zoomArr = {};
        this.zoomLevelArr = {};
        this.isDragMoveForward = false;
        this.isDragMoveReverse = false;
        this.graphLinkArr = {};
        this.graphPortArrSource = {};
        this.graphPortArrTarget = {};
        this.graphNodeArr = {};
        this.linksSource = {};
        this.graphportGroupTarget = {};
        this.graphportGroupSource = {};
        this.linkNum = {};
        this.svgElementArr = {};
        this.horizontallyBound = (parentDiv, childDiv) => {
            let parentRect = parentDiv.getBoundingClientRect();
            let childRect = childDiv.getBoundingClientRect();
            return (parentRect.left <= childRect.left && parentRect.right >= childRect.right);
        };
        this.dragStartForward = () => {
            var simulation = this.simulationArr['forwardDiverse'];
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                simulation.alphaTarget(1).stop();
        };
        this.draggingForward = (d, i) => {
            this.isDragMoveForward = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            this.tick(this.graphLinkArr['forwardDiverse'], this.graphNodeArr['forwardDiverse'], this.graphPortArrSource['forwardDiverse'], this.graphPortArrTarget['forwardDiverse'], this.linksSource['forwardDiverse'], this.linkNum['forwardDiverse']);
        };
        this.dragEndForward = (d, i) => {
            var simulation = this.simulationArr['forwardDiverse'];
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                simulation.alphaTarget(0);
            d.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff
            this.tick(this.graphLinkArr['forwardDiverse'], this.graphNodeArr['forwardDiverse'], this.graphPortArrSource['forwardDiverse'], this.graphPortArrTarget['forwardDiverse'], this.linksSource['forwardDiverse'], this.linkNum['forwardDiverse']);
        };
        // for reverse
        this.dragStartReverse = () => {
            var simulation = this.simulationArr['reverseDiverse'];
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                simulation.alphaTarget(1).stop();
            jQuery('#topology-hover-txt').hide();
            jQuery('#topology-click-txt').hide();
        };
        this.draggingReverse = (d, i) => {
            this.isDragMoveReverse = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            this.tick(this.graphLinkArr['reverseDiverse'], this.graphNodeArr['reverseDiverse'], this.graphPortArrSource['reverseDiverse'], this.graphPortArrTarget['reverseDiverse'], this.linksSource['reverseDiverse'], this.linkNum['reverseDiverse']);
        };
        this.dragEndReverse = (d, i) => {
            var simulation = this.simulationArr['reverseDiverse'];
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                simulation.alphaTarget(0);
            d.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff
            this.tick(this.graphLinkArr['reverseDiverse'], this.graphNodeArr['reverseDiverse'], this.graphPortArrSource['reverseDiverse'], this.graphPortArrTarget['reverseDiverse'], this.linksSource['reverseDiverse'], this.linkNum['reverseDiverse']);
        };
        this.zoomFit = (g, svgElement, zoomLevel, zoom, nodes, type) => {
            var bounds = g.node().getBBox();
            var parent = g.node().parentElement;
            var fullWidth = parent.clientWidth || parent.parentNode.clientWidth || $(parent).width(), fullHeight = parent.clientHeight || parent.parentNode.clientHeight || $(parent).height();
            var width = bounds.width, height = bounds.height;
            var midX = (bounds.x + width) / 2, midY = (bounds.y + height) / 2;
            if (width == 0 || height == 0)
                return;
            if (nodes.length > 10) {
                var scale = 0.50;
                var translate = [(fullWidth / 2 - scale * midX) / scale, (fullHeight / 2 - scale * midY) / scale];
            }
            else {
                var scale = (zoomLevel || 1.30) / Math.max(width / fullWidth, height / fullHeight);
                var translate = [fullWidth / 2 - scale * midX, fullHeight / 2 - scale * midY];
            }
            let newtranformation = d3__WEBPACK_IMPORTED_MODULE_3__["zoomIdentity"]
                .scale(scale)
                .translate(translate[0], translate[1]);
            svgElement.transition().duration(300).call(zoom.transform, newtranformation);
            if (type == 'forwardDiverse') {
                this.forwardLoaderChange();
            }
            else {
                this.reverseLoaderChange();
            }
        };
    }
    setCommonSwitch(type, data) {
        if (type == 'forward') {
            this.diverseGroupCommonSwitch = data;
        }
        else {
            this.diverseGroupCommonSwitchReverse = data;
        }
    }
    getcommonSwitches(type) {
        if (type == 'forward') {
            return this.diverseGroupCommonSwitch;
        }
        else {
            return this.diverseGroupCommonSwitchReverse;
        }
    }
    loadIslDetail(src_switch, src_port, dst_switch, dst_port) {
        this.router.navigate(["/isl/switch/isl/" + src_switch + "/" + src_port + "/" + dst_switch + "/" + dst_port]);
    }
    loadSwitchDetail(switchId) {
        this.router.navigate(["/switches/details/" + switchId]);
    }
    forwardLoaderChange() {
        this.forwardPathLoaded = false;
        this.forwardpathLoadedChange.next(this.forwardPathLoaded);
    }
    reverseLoaderChange() {
        this.reversepathLoaded = false;
        this.reversepathLoadedChange.next(this.reversepathLoaded);
    }
    initSimulation(nodes, links, svgElement, graphWrapper, type, positions, hoverTextID, showValueID, hideValueID) {
        this.svgElementArr[type] = svgElement;
        var linksSourceArr = [];
        var self = this;
        if (links.length > 0) {
            try {
                var result = this.commonService.groupBy(links, function (item) {
                    return [item.source, item.target];
                });
                for (var i = 0, len = result.length; i < len; i++) {
                    var row = result[i];
                    if (row.length >= 1) {
                        for (var j = 0, len1 = row.length; j < len1; j++) {
                            var key = row[j].source.switch_id + "_" + row[j].target.switch_id;
                            var key1 = row[j].target.switch_id + "_" + row[j].source.switch_id;
                            var prcessKey = (linksSourceArr && typeof linksSourceArr[key] !== "undefined") ? key : key1;
                            if (typeof linksSourceArr[prcessKey] !== "undefined") {
                                linksSourceArr[prcessKey].push(row[j]);
                            }
                            else {
                                linksSourceArr[key] = [];
                                linksSourceArr[key].push(row[j]);
                            }
                        }
                    }
                }
            }
            catch (e) { }
        }
        this.linksSource[type] = linksSourceArr;
        var processedlinks = this.processLinks(nodes, links);
        var zoomLevel = 0.45;
        svgElement.html("");
        var width = $("#" + graphWrapper)[0].clientWidth || window.innerWidth;
        var height = svgElement.attr('height');
        svgElement.style('cursor', 'move');
        svgElement.attr("width", width);
        svgElement.attr("height", height);
        var g = svgElement.append("g");
        var graphLinkGroup = g.append("g").attr("id", `links`).attr("class", "links");
        var graphNodeGroup = g.append('g').attr("class", "nodes").attr("id", "nodes");
        this.graphportGroupSource[type] = g.append("g").attr("id", `sourcePorts`).attr("class", "sourcePorts");
        this.graphportGroupTarget[type] = g.append("g").attr("id", `targetPorts`).attr("class", "targetPorts");
        var size = d3__WEBPACK_IMPORTED_MODULE_3__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_3__["range"](1));
        var zoom = this.zoomArr[type] = d3__WEBPACK_IMPORTED_MODULE_3__["zoom"]()
            .scaleExtent([this.min_zoom, this.max_zoom])
            .extent([[0, 0], [width - 200, height - 50]])
            .on("zoom", () => {
            zoomLevel = Math.round(d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.k * 100) / 100;
            self.zoomLevelArr[type] = zoomLevel;
            g.attr("transform", "translate(" +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.x +
                "," +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.y +
                ") scale(" +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.k +
                ")");
        });
        var mLinkNum = this.linkNum[type] = this.setLinkIndexAndNum(processedlinks);
        var forceSimulation = d3__WEBPACK_IMPORTED_MODULE_3__["forceSimulation"]()
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_3__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_3__["forceManyBody"]().strength(-1000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_3__["forceX"](width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_3__["forceY"](height / 2));
        forceSimulation.nodes(nodes);
        forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_3__["forceLink"]().links(processedlinks).distance((d) => {
            let distance = 10;
            if (d.type == 'isl') {
                distance = 150;
            }
            return distance;
        }).strength(0.1));
        forceSimulation.stop();
        var graphNode = this.graphNodeArr[type] = this.insertNodes(graphNodeGroup, nodes, type, hoverTextID, showValueID, hideValueID);
        var graphLink = this.graphLinkArr[type] = this.insertLinks(graphWrapper, graphLinkGroup, processedlinks, type, hoverTextID, showValueID, hideValueID);
        var graphPortSource = this.graphPortArrSource[type] = this.insertSourcePorts(processedlinks, type, hoverTextID, showValueID, hideValueID);
        var graphPortTarget = this.graphPortArrTarget[type] = this.insertTargetPorts(processedlinks, type, hoverTextID, showValueID, hideValueID);
        forceSimulation.on("tick", () => {
            this.tick(graphLink, graphNode, graphPortSource, graphPortTarget, linksSourceArr, mLinkNum);
        });
        if (type == 'forwardDiverse') {
            this.dragforward = d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
                .on("start", this.dragStartForward)
                .on("drag", this.draggingForward)
                .on("end", this.dragEndForward);
        }
        else if (type == 'reverseDiverse') {
            this.dragreverse = d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
                .on("start", this.dragStartReverse)
                .on("drag", this.draggingReverse)
                .on("end", this.dragEndReverse);
        }
        svgElement.call(zoom);
        svgElement.on("dblclick.zoom", null);
        forceSimulation.restart();
        forceSimulation.on("end", () => {
            this.zoomFit(g, svgElement, zoomLevel, zoom, nodes, type);
        });
        this.simulationArr[type] = forceSimulation;
    }
    zoomFn(direction, svgElement, type) {
        var simulation = this.simulationArr[type];
        var zoom = this.zoomArr[type];
        var zoomLevel = this.zoomLevelArr[type];
        if (direction == 1) {
            simulation.stop();
            if (zoomLevel + this.zoomStep <= this.max_zoom) {
                svgElement
                    .transition()
                    .duration(350)
                    .call(zoom.scaleTo, zoomLevel + this.zoomStep);
            }
        }
        else if (direction == -1) {
            simulation.stop();
            if (zoomLevel - this.zoomStep >= this.min_zoom) {
                svgElement
                    .transition()
                    .duration(350)
                    .call(zoom.scaleTo, zoomLevel - this.zoomStep);
            }
        }
    }
    ;
    processLinks(nodes, links) {
        var nodelength = nodes.length;
        var linklength = links.length;
        for (var i = 0; i < nodelength; i++) {
            for (var j = 0; j < linklength; j++) {
                if (nodes[i].switch_id == links[j]["source"]["switch_id"] &&
                    nodes[i].switch_id == links[j]["target"]["switch_id"]) {
                    links[j].source = i;
                    links[j].target = i;
                }
                else {
                    if (nodes[i].switch_id == links[j]["source"]["switch_id"]) {
                        links[j].source = i;
                    }
                    else if (nodes[i].switch_id == links[j]["target"]["switch_id"]) {
                        links[j].target = i;
                    }
                }
            }
        }
        return links;
    }
    insertLinks(graphWrapper, graphLinkGroup, links, type, hoverTextID, showValueID, hideValueID) {
        var ref = this;
        let graphLinksData = graphLinkGroup.selectAll("path.link").data(links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            if (d.link_type == 'protected') {
                return "link_" + type + " link dashed_path_protected physical " + type + "_link_" + d.flow;
            }
            return "link_" + type + " link physical " + type + "_link_" + d.flow;
        })
            .attr("id", (d, index) => {
            return type + "_link" + index;
        }).attr('stroke-width', (d) => { return 4.5; }).attr("stroke", function (d, index) {
            return d.colourCode;
        }).attr("cursor", "pointer")
            .on('mouseover', function (d, index) {
            if (type == 'forwardDiverse' || type == 'reverseDiverse') {
                var element = document.getElementById(type + "_link" + index);
                var classes = element.getAttribute("class");
                classes = classes + " overlay";
                element.setAttribute('class', classes);
                var rec = element.getBoundingClientRect();
                $('#' + hideValueID).css('display', 'none');
                $("#" + hoverTextID).css("display", "block");
                $('#' + showValueID).html(d.flow);
                $('#' + showValueID).css('display', 'block');
                $(element).on("mousemove", function (e) {
                    $("#" + hoverTextID).css("top", (e.pageY - 50) + "px");
                    $("#" + hoverTextID).css("left", (e.pageX - 60) + "px");
                    var bound = ref.horizontallyBound(document.getElementById(graphWrapper), document.getElementById(hoverTextID));
                    if (bound) {
                        $("#" + hoverTextID).removeClass("left");
                    }
                    else {
                        var left = e.pageX; // subtract width of tooltip box + circle radius
                        $("#" + hoverTextID).css("left", left + "px");
                        $("#" + hoverTextID).addClass("left");
                    }
                });
            }
        }).on('mouseout', function (d, index) {
            $('#' + type + '_link' + index).removeClass('overlay');
            $("#" + hoverTextID).css("display", "none");
        }).on('click', function (d) {
            if (d.type == 'isl') {
                var src_switch = d.source_detail.id, src_port = d.source_detail.out_port, dst_switch = d.target_detail.id, dst_port = d.target_detail.in_port;
                ref.loadIslDetail(src_switch, src_port, dst_switch, dst_port);
            }
        });
        graphLinksData.exit().remove();
        return graphNewLink.merge(graphLinksData);
    }
    insertTargetPorts(links, type, hoverTextID, showValueID, hideValueID) {
        let linkText = this.graphportGroupTarget[type].selectAll("circle").data(links);
        let linkCircleTextTarget = linkText
            .enter()
            .append("g")
            .attr("class", "text-circle targetEnd");
        linkText.exit().remove();
        linkCircleTextTarget.append('circle')
            .attr('class', function (d) {
            var classes = "circle-text targetEnd " + type + "_port_circle  " + type + "_port_circle_" + d.flow;
            classes = classes + " " + d.source.switch_id + "_" + d.target.switch_id + "_" + d.flow;
            return classes;
        }).attr('id', function (d) {
            return "textCircle_target_" + type + "_" + d.target.switch_id;
        })
            .attr('r', '8')
            .attr('stroke', '#00baff')
            .attr('stroke-width', '1px')
            .attr('fill', '#FFF').attr('style', "cursor:pointer")
            .on('mouseover', function (d, index) {
            if (type == 'forwardDiverse' || type == 'reverseDiverse') {
                var element = document.getElementById("textCircle_target_" + type + "_" + d.target.switch_id);
                var rec = element.getBoundingClientRect();
                $('#' + hideValueID).css('display', 'none');
                $("#" + hoverTextID).css("display", "block");
                $('#' + showValueID).html(d.target.switch_name || d.target.switch_id);
                $('#' + showValueID).css('display', 'block');
                var x = document.getElementById("textCircle_target_" + type + "_" + d.target.switch_id).getBoundingClientRect().left - 70;
                var y = document.getElementById("textCircle_target_" + type + "_" + d.target.switch_id).getBoundingClientRect().top - 50;
                $("#" + hoverTextID).css("top", (y) + "px");
                $("#" + hoverTextID).css("left", (x) + "px");
            }
        }).on('mouseout', function (d, index) {
            $("#" + hoverTextID).css("display", "none");
        });
        linkCircleTextTarget.append('text')
            .attr('class', function (d) {
            var classes = "zEnd " + type + "_port_text " + type + "_port_text_" + d.flow;
            classes = classes + " " + d.source.switch_id + "_" + d.target.switch_id + "_" + d.flow;
            return classes;
        }).attr('dx', function (d) {
            if (d.target_detail.in_port >= 10) {
                return "-6";
            }
            return "-3";
        })
            .attr("dy", function (d) {
            if (d.target_detail.in_port >= 10) {
                return "3";
            }
            return "5";
        })
            .attr('fill', '#000').text(function (d) {
            return d.target_detail.in_port;
        });
        return linkCircleTextTarget.merge(linkText);
    }
    insertSourcePorts(links, type, hoverTextID, showValueID, hideValueID) {
        let linkText = this.graphportGroupSource[type].selectAll("circle").data(links);
        let linkCircleTextSource = linkText
            .enter()
            .append("g")
            .attr("class", "text-circle sourceEnd");
        linkText.exit().remove();
        linkCircleTextSource.append('circle')
            .attr('class', function (d) {
            var classes = "circle-text sourceEnd " + type + "_port_circle  " + type + "_port_circle_" + d.flow;
            classes = classes + " " + d.source.switch_id + "_" + d.target.switch_id + "_" + d.flow;
            return classes;
        }).attr('id', function (d) {
            return "textCircle_source_" + type + "_" + d.source.switch_id;
        })
            .attr('r', '8')
            .attr('stroke', '#00baff')
            .attr('stroke-width', '1px')
            .attr('fill', '#FFF').attr('style', "cursor:pointer")
            .on('mouseover', function (d, index) {
            if (type == 'forwardDiverse' || type == 'reverseDiverse') {
                var element = document.getElementById("textCircle_source_" + type + "_" + d.source.switch_id);
                var rec = element.getBoundingClientRect();
                $('#' + hideValueID).css('display', 'none');
                $("#" + hoverTextID).css("display", "block");
                $('#' + showValueID).html(d.source.switch_name || d.source.switch_id);
                $('#' + showValueID).css('display', 'block');
                var x = document.getElementById("textCircle_source_" + type + "_" + d.source.switch_id).getBoundingClientRect().left - 70;
                var y = document.getElementById("textCircle_source_" + type + "_" + d.source.switch_id).getBoundingClientRect().top - 50;
                $("#" + hoverTextID).css("top", (y) + "px");
                $("#" + hoverTextID).css("left", (x) + "px");
            }
        }).on('mouseout', function (d, index) {
            $("#" + hoverTextID).css("display", "none");
        });
        linkCircleTextSource.append('text')
            .attr('class', function (d) {
            var classes = "aEnd " + type + "_port_text " + type + "_port_text_" + d.flow;
            classes = classes + " " + d.source.switch_id + "_" + d.target.switch_id + "_" + d.flow;
            return classes;
        }).attr('dx', function (d) {
            if (d.source_detail.out_port >= 10) {
                return "-6";
            }
            return "-3";
        })
            .attr("dy", function (d) {
            if (d.source_detail.out_port >= 10) {
                return "3";
            }
            return "5";
        })
            .attr('fill', '#000').text(function (d) {
            return d.source_detail.out_port;
        });
        return linkCircleTextSource.merge(linkText);
    }
    insertNodes(graphNodeGroup, nodes, type, hoverTextID, showValueID, hideValueID) {
        let ref = this;
        let graphNodesData = graphNodeGroup.selectAll("g.node").data(nodes, d => d.switch_id);
        let graphNodeElement;
        if (type == 'forwardDiverse') {
            graphNodeElement = graphNodesData.enter().append("g")
                .attr("class", "node")
                .call(d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
                .on("start", this.dragStartForward)
                .on("drag", this.draggingForward)
                .on("end", this.dragEndForward));
        }
        else if (type == 'reverseDiverse') {
            graphNodeElement = graphNodesData.enter().append("g")
                .attr("class", "node")
                .call(d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
                .on("start", this.dragStartReverse)
                .on("drag", this.draggingReverse)
                .on("end", this.dragEndReverse));
        }
        graphNodesData.exit().remove();
        graphNodeElement.append("circle")
            .attr("r", this.graphOptions.radius)
            .attr("class", function (d, index) {
            var switchcls = d.switch_id.split(":").join("_");
            var classes = "circle " + type + "_circle blue " + type + "_circle_" + d.flow + " sw_" + switchcls;
            return classes;
        })
            .attr("id", function (d, index) {
            return type + "_circle_" + d.switch_id;
        }).style("cursor", "pointer")
            .on('click', function (d) {
            ref.loadSwitchDetail(d.switch_id);
        });
        let images = graphNodeElement
            .append("svg:image")
            .attr("xlink:href", function (d) {
            return src_environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].assetsPath + "/images/switch.png";
        })
            .attr("x", function (d) {
            return -29;
        })
            .attr("y", function (d) {
            return -29;
        }).attr('class', function (d) {
            var switchcls = d.switch_id.split(":").join("_");
            return type + "_switch_image " + type + "_switch_image_" + d.flow + " sw_img_" + switchcls;
        })
            .attr("height", 58)
            .attr("width", 58)
            .attr("id", function (d, index) {
            return "image_" + index;
        })
            .attr("cursor", "pointer")
            .on('mouseover', function (d, index) {
            if (type == 'forwardDiverse' || type == 'reverseDiverse') {
                var element = document.getElementById(type + "_circle_" + d.switch_id);
                var rec = element.getBoundingClientRect();
                $('#' + hideValueID).css('display', 'none');
                $("#" + hoverTextID).css("display", "block");
                $('#' + showValueID).html(d.switch_name || d.switch_id);
                $('#' + showValueID).css('display', 'block');
                var x = document.getElementById(type + "_circle_" + d.switch_id).getBoundingClientRect().left - 70;
                var y = document.getElementById(type + "_circle_" + d.switch_id).getBoundingClientRect().top - 50;
                $("#" + hoverTextID).css("top", (y) + "px");
                $("#" + hoverTextID).css("left", (x) + "px");
            }
        }).on('mouseout', function (d, index) {
            $("#" + hoverTextID).css("display", "none");
        });
        return graphNodeElement.merge(graphNodesData);
    }
    isObjEquivalent(a, b) {
        // Create arrays of property names
        var aProps = Object.getOwnPropertyNames(a);
        var bProps = Object.getOwnPropertyNames(b);
        if (aProps.length != bProps.length) {
            return false;
        }
        for (var i = 0; i < aProps.length; i++) {
            var propName = aProps[i];
            if (a[propName] !== b[propName]) {
                return false;
            }
        }
        return true;
    }
    setLinkIndexAndNum(links) {
        var mLinkNum = [];
        for (var i = 0; i < links.length; i++) {
            if (i != 0 &&
                links[i].source == links[i - 1].source.switch_id &&
                links[i].target == links[i - 1].target.switch_id) {
                links[i].linkindex = links[i - 1].linkindex + 1;
            }
            else {
                links[i].linkindex = 1;
            }
            // save the total number of links between two nodes
            if (mLinkNum[links[i].target.switch_id + "," + links[i].source.switch_id] !==
                undefined) {
                mLinkNum[links[i].target.switch_id + "," + links[i].source.switch_id] = links[i].linkindex;
            }
            else {
                mLinkNum[links[i].source.switch_id + "," + links[i].target.switch_id] = links[i].linkindex;
            }
        }
        return mLinkNum;
    }
    tick(graphLink, graphNode, graphPortSource, graphPortTarget, linksSourceArr, mLinkNum) {
        var ref = this;
        graphLink.attr("d", d => {
            var islCount = 0;
            var matchedIndex = 1;
            var key = d.source.switch_id + "_" + d.target.switch_id;
            var key1 = d.target.switch_id + "_" + d.source.switch_id;
            var processKey = (linksSourceArr && typeof linksSourceArr[key] !== "undefined") ? key : key1;
            if (linksSourceArr &&
                typeof linksSourceArr[processKey] !== "undefined") {
                islCount = linksSourceArr[processKey].length;
            }
            if (islCount > 1) {
                linksSourceArr[processKey].map(function (o, i) {
                    if (ref.isObjEquivalent(o, d)) {
                        matchedIndex = i + 1;
                        return;
                    }
                });
            }
            var processKeyValues = processKey.split("_");
            if (processKeyValues[0] == d.target.switch_id && processKeyValues[1] == d.source.switch_id) {
                matchedIndex = matchedIndex + 1;
            }
            var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy);
            var lTotalLinkNum = mLinkNum[d.source.index + "," + d.target.index] ||
                mLinkNum[d.target.index + "," + d.source.index];
            if (lTotalLinkNum > 1) {
                dr = dr / (1 + (1 / lTotalLinkNum) * (d.linkindex - 1));
            }
            if (islCount == 1) {
                return ("M" +
                    d.source.x +
                    "," +
                    d.source.y +
                    "L" +
                    d.target.x +
                    "," +
                    d.target.y);
            }
            else {
                if (islCount % 2 != 0 && matchedIndex == 1) {
                    return ("M" +
                        d.source.x +
                        "," +
                        d.source.y +
                        "L" +
                        d.target.x +
                        "," +
                        d.target.y);
                }
                else if (matchedIndex % 2 == 0) {
                    return ("M" +
                        d.source.x +
                        "," +
                        d.source.y +
                        "A" +
                        dr +
                        "," +
                        dr +
                        " 0 0 1," +
                        d.target.x +
                        "," +
                        d.target.y +
                        "A" +
                        dr +
                        "," +
                        dr +
                        " 0 0 0," +
                        d.source.x +
                        "," +
                        d.source.y);
                }
                else {
                    return ("M" +
                        d.source.x +
                        "," +
                        d.source.y +
                        "A" +
                        dr +
                        "," +
                        dr +
                        " 0 0 0," +
                        d.target.x +
                        "," +
                        d.target.y +
                        "A" +
                        dr +
                        "," +
                        dr +
                        " 0 0 1," +
                        d.source.x +
                        "," +
                        d.source.y);
                }
            }
        });
        graphNode.attr("transform", function (d) {
            if (typeof (d.x) != 'undefined' && typeof (d.y) != 'undefined') {
                return "translate(" + d.x + "," + d.y + ")";
            }
        });
        graphPortSource.attr('transform', function (d) {
            var yvalue = (d.source.y + d.target.y) / 2;
            var xvalue = (d.source.x + d.target.x) / 2;
            var points = ref.getCornerPoint(d.source.x, d.source.y, d.target.x, d.target.y);
            if (typeof (points) != 'undefined' && points.length) {
                xvalue = points[0];
                yvalue = points[1];
            }
            var key = d.source.switch_id + "_" + d.target.switch_id;
            var key1 = d.target.switch_id + "_" + d.source.switch_id;
            var processKey = (linksSourceArr && typeof linksSourceArr[key] !== "undefined") ? key : key1;
            var processKeyValues = processKey.split("_");
            var linkArr = linksSourceArr[processKey];
            if (processKeyValues[0] == d.target.switch_id && processKeyValues[1] == d.source.switch_id) {
                return "translate(" + (xvalue + 10) + "," + (yvalue - 10) + ")";
            }
            return "translate(" + xvalue + "," + yvalue + ")";
        });
        graphPortTarget.attr('transform', function (d) {
            var yvalue = (d.source.y + d.target.y) / 2;
            var xvalue = (d.source.x + d.target.x) / 2;
            var points = ref.getCornerPoint(d.target.x, d.target.y, d.source.x, d.source.y);
            if (typeof (points) != 'undefined' && points.length) {
                xvalue = points[0];
                yvalue = points[1];
            }
            return "translate(" + xvalue + "," + yvalue + ")";
        });
    }
    getCornerPoint(x1, y1, x2, y2) {
        var y = (y1 + y2) / 2;
        var x = (x1 + x2) / 2;
        if (y1 < y2 && x1 > x2) {
            if (y - y1 < this.graphOptions.radius + 5 && x1 - x < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (x1 < x2 && y1 < y2) {
            if (x - x1 < this.graphOptions.radius + 5 && y - y1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (x1 > x2) {
            if (x1 - x < this.graphOptions.radius + 5 && y1 - y < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (y1 > y2) {
            if (y1 - y < this.graphOptions.radius + 5 && x - x1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else {
            if (x - x1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
    }
};
FlowpathService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_6__["Router"]])
], FlowpathService);



/***/ }),

/***/ "./src/app/common/services/flows.service.ts":
/*!**************************************************!*\
  !*** ./src/app/common/services/flows.service.ts ***!
  \**************************************************/
/*! exports provided: FlowsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowsService", function() { return FlowsService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");





let FlowsService = class FlowsService {
    constructor(httpClient, cookieManager) {
        this.httpClient = httpClient;
        this.cookieManager = cookieManager;
    }
    getFlowsList(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/list`, { params: query });
    }
    getFlowDetailById(flowId, filterFlag) {
        let query = { controller: filterFlag == 'controller' };
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}`, { params: query });
    }
    createFlow(data) {
        return this.httpClient.put(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows`, data);
    }
    validateFlow(flowId) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}/validate`);
    }
    getFlowHistory(flowId, fromDate, toDate) {
        let query = { timeFrom: fromDate, timeTo: toDate };
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/all/history/${flowId}`, { params: query });
    }
    updateFlow(flowId, payload) {
        return this.httpClient.put(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}`, payload);
    }
    deleteFlow(flowId, data, successCb, errorCb) {
        var requestBody = JSON.stringify(data);
        let token = this.cookieManager.get('XSRF-TOKEN');
        var xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.addEventListener("readystatechange", function () {
            if (this.readyState == 4 && this.status == 200) {
                successCb(JSON.parse(this.responseText));
            }
            else if (this.readyState == 4 && this.status >= 300) {
                errorCb(JSON.parse(this.responseText));
            }
        });
        xhr.open("DELETE", `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}`);
        xhr.setRequestHeader("Content-Type", "application/json");
        if (token !== null) {
            xhr.setRequestHeader("X-XSRF-TOKEN", token);
        }
        xhr.send(requestBody);
    }
    getFlowPath(flowId) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/path/${flowId}`);
    }
    getConnectedDevices(flowId) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/connected/devices/${flowId}`);
    }
    getReRoutedPath(flowId) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}/reroute`);
    }
    getFlowPathStats(jsonPayload) {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/flowpath`, jsonPayload);
    }
    getFlowGraphData(flowid, convertedStartDate, convertedEndDate, downsampling, metric) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/flowid/${flowid}/${convertedStartDate}/${convertedEndDate}/${downsampling}/${metric}`);
    }
    getMeterGraphData(flowid, convertedStartDate, convertedEndDate, downsampling, metric, direction) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/meter/${flowid}/${convertedStartDate}/${convertedEndDate}/${downsampling}/${metric}/${direction}`);
    }
    getFlowPacketGraphData(flowid, convertedStartDate, convertedEndDate, downsampling, direction) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/flow/losspackets/${flowid}/${convertedStartDate}/${convertedEndDate}/${downsampling}/${direction}`);
    }
    getFlowCount() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/count`);
    }
    resynchFlow(flowId) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}/sync`, {});
    }
    pingFlow(flowId) {
        return this.httpClient.put(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowId}/ping`, { timeout: 3000 });
    }
    getcontract(flowid) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/contracts/list/${flowid}`);
    }
    deletecontract(flowid, contractid) {
        return this.httpClient.delete(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/contracts/delete/${flowid}/${contractid}`);
    }
    getStatusList() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/status`);
    }
    getFlowStatus(flowid) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/flows/${flowid}/status`);
    }
};
FlowsService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__["CookieManagerService"]])
], FlowsService);



/***/ }),

/***/ "./src/app/common/services/isl-data.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/services/isl-data.service.ts ***!
  \*****************************************************/
/*! exports provided: IslDataService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslDataService", function() { return IslDataService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let IslDataService = class IslDataService {
    constructor() {
        this.messageSource = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
        this.graphOptionsObject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
        this.islFlowObj = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
        this.islFlowStackedObj = new rxjs__WEBPACK_IMPORTED_MODULE_2__["BehaviorSubject"]({});
        this.currentMessage = this.messageSource.asObservable();
        this.currentOptionsObject = this.graphOptionsObject.asObservable();
        this.IslFlowGraph = this.islFlowObj.asObservable();
        this.IslFlowStackedGraph = this.islFlowStackedObj.asObservable();
    }
    changeMessage(message) {
        this.messageSource.next(message);
    }
    changeGraphOptionsObject(optionsObject) {
        this.graphOptionsObject.next(optionsObject);
    }
    changeIslFlowGraph(dataObj) {
        this.islFlowObj.next(dataObj);
    }
    changeIslFlowStackedGraph(dataObj) {
        this.islFlowStackedObj.next(dataObj);
    }
};
IslDataService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], IslDataService);



/***/ }),

/***/ "./src/app/common/services/isl-detail.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/common/services/isl-detail.service.ts ***!
  \*******************************************************/
/*! exports provided: IslDetailService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslDetailService", function() { return IslDetailService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");





let IslDetailService = class IslDetailService {
    constructor(httpClient) {
        this.httpClient = httpClient;
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    }
    setSelectedItem(item) {
        this.subject.next({ item: item });
    }
    getSelectedItem() {
        return this.subject.asObservable();
    }
    getISLFlowsList(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links/flows`, { params: query });
    }
    getIslLatencyfromGraph(src_switch, src_port, dst_switch, dst_port, from, to, frequency) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/isl/${src_switch}/${src_port}/${dst_switch}/${dst_port}/${from}/${to}/${frequency}/latency`);
    }
};
IslDetailService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"]])
], IslDetailService);



/***/ }),

/***/ "./src/app/common/services/isl-list.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/services/isl-list.service.ts ***!
  \*****************************************************/
/*! exports provided: IslListService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslListService", function() { return IslListService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");





let IslListService = class IslListService {
    constructor(httpClient, cookieManager) {
        this.httpClient = httpClient;
        this.cookieManager = cookieManager;
    }
    getIslList(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links`, { params: query });
    }
    getIslDetail(src_switch, src_port, dst_switch, dst_port) {
        let date = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/link/props?src_switch=${src_switch}&src_port=${src_port}&dst_switch=${dst_switch}&dst_port=${dst_port}&_=${date}`);
    }
    getISLDetailData(src_switch, src_port, dst_switch, dst_port) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links?src_switch=${src_switch}&src_port=${src_port}&dst_switch=${dst_switch}&dst_port=${dst_port}`);
    }
    islUnderMaintenance(data) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links/under-maintenance`;
        return this.httpClient.patch(url, data);
    }
    updateBFDflag(data) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/link/enable-bfd`;
        return this.httpClient.patch(url, data);
    }
    updateIslBandWidth(data, src_switch, src_port, dst_switch, dst_port) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/link/bandwidth?src_switch=${src_switch}&src_port=${src_port}&dst_switch=${dst_switch}&dst_port=${dst_port}`;
        return this.httpClient.patch(url, data);
    }
    deleteIsl(data, successRes, errorRes) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links`;
        let token = this.cookieManager.get('XSRF-TOKEN');
        var requestBody = JSON.stringify(data);
        var xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.addEventListener("readystatechange", function () {
            if (this.readyState == 4 && this.status == 200) {
                successRes(JSON.parse(this.responseText));
            }
            else if (this.readyState == 4 && this.status >= 300) {
                errorRes(JSON.parse(this.responseText));
            }
        });
        xhr.open("DELETE", url);
        xhr.setRequestHeader("Content-Type", "application/json");
        if (token !== null) {
            xhr.setRequestHeader("X-XSRF-TOKEN", token);
        }
        xhr.send(requestBody);
    }
    updateCost(src_switch, src_port, dst_switch, dst_port, cost) {
        let requestPayload = [
            { "src_switch": src_switch,
                "src_port": src_port,
                "dst_switch": dst_switch,
                "dst_port": dst_port,
                "props": { "cost": cost }
            },
            { "src_switch": dst_switch,
                "src_port": dst_port,
                "dst_switch": src_switch,
                "dst_port": src_port,
                "props": { "cost": cost }
            }
        ];
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/link/props`;
        return this.httpClient.put(url, requestPayload);
    }
};
IslListService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__["CookieManagerService"]])
], IslListService);



/***/ }),

/***/ "./src/app/common/services/loader.service.ts":
/*!***************************************************!*\
  !*** ./src/app/common/services/loader.service.ts ***!
  \***************************************************/
/*! exports provided: LoaderService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoaderService", function() { return LoaderService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let LoaderService = class LoaderService {
    constructor() {
        this.messageSender = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.messageReciever = this.messageSender.asObservable();
    }
    show(message = null) {
        this.messageSender.next({ show: true, message: message });
    }
    hide() {
        this.messageSender.next({ show: false, message: null });
    }
};
LoaderService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root"
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], LoaderService);



/***/ }),

/***/ "./src/app/common/services/permission.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/common/services/permission.service.ts ***!
  \*******************************************************/
/*! exports provided: PermissionService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionService", function() { return PermissionService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");






let PermissionService = class PermissionService {
    constructor(http) {
        this.http = http;
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.permissionSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"](null);
        this.currentPermission = this.permissionSource.asObservable();
        this.configUrl = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}`;
    }
    getPermissions() {
        return this.http.get(this.configUrl + '/permission');
    }
    /** POST: add permission to the server */
    addPermission(permission) {
        return this.http.post(this.configUrl + '/permission', permission);
    }
    getPermissionById(id) {
        const url = `${this.configUrl}/permission/${id}`;
        return this.http.get(url);
    }
    editPermission(id, permission) {
        const url = `${this.configUrl}/permission/${id}`;
        return this.http.put(url, permission);
    }
    /** DELETE: delete the permission from the server */
    deletePermission(id) {
        const url = `${this.configUrl}/permission/${id}`;
        return this.http.delete(url);
    }
    assignPermission(id, role) {
        const url = `${this.configUrl}/role/permission/${id}`;
        return this.http.put(url, role);
    }
    getPermissionRoleById(id) {
        const url = `${this.configUrl}/role/permission/${id}`;
        return this.http.get(url);
    }
    selectedPermission(userId) {
        this.permissionSource.next(userId);
    }
    clearselectedPermission() {
        this.subject.next();
    }
};
PermissionService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], PermissionService);



/***/ }),

/***/ "./src/app/common/services/role.service.ts":
/*!*************************************************!*\
  !*** ./src/app/common/services/role.service.ts ***!
  \*************************************************/
/*! exports provided: RoleService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleService", function() { return RoleService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");






let RoleService = class RoleService {
    constructor(http) {
        this.http = http;
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.roleSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"](null);
        this.currentRole = this.roleSource.asObservable();
        this.configUrl = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}`;
    }
    getRoles() {
        return this.http.get(this.configUrl + '/role');
    }
    /** POST: add role to the server */
    addRole(role) {
        return this.http.post(this.configUrl + '/role', role);
    }
    getRoleById(id) {
        const url = `${this.configUrl}/role/${id}`;
        return this.http.get(url);
    }
    editRole(id, role) {
        const url = `${this.configUrl}/role/${id}`;
        return this.http.put(url, role);
    }
    assignRole(id, role) {
        const url = `${this.configUrl}/user/role/${id}`;
        return this.http.put(url, role);
    }
    getUserRoleById(id) {
        const url = `${this.configUrl}/user/role/${id}`;
        return this.http.get(url);
    }
    /** DELETE: delete the role from the server */
    deleteRole(id) {
        const url = `${this.configUrl}/role/${id}`;
        return this.http.delete(url);
    }
    selectedRole(userId) {
        this.roleSource.next(userId);
    }
    clearSelectedRole() {
        this.subject.next();
    }
};
RoleService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], RoleService);



/***/ }),

/***/ "./src/app/common/services/saml-setting.service.ts":
/*!*********************************************************!*\
  !*** ./src/app/common/services/saml-setting.service.ts ***!
  \*********************************************************/
/*! exports provided: SamlSettingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamlSettingService", function() { return SamlSettingService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");




let SamlSettingService = class SamlSettingService {
    constructor(httpClient) {
        this.httpClient = httpClient;
    }
    getAuthProviders() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/samlconfig`);
    }
    getDetail(uuid) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/samlconfig/${uuid}`);
    }
    saveAuthProvider(data) {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/samlconfig`, data);
    }
    updateAuthProvider(data, uuid) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/samlconfig/${uuid}`, data);
    }
    deleteAuthProvider(uuid) {
        return this.httpClient.delete(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/samlconfig/${uuid}`);
    }
};
SamlSettingService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], SamlSettingService);



/***/ }),

/***/ "./src/app/common/services/store-setting.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/common/services/store-setting.service.ts ***!
  \**********************************************************/
/*! exports provided: StoreSettingtService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StoreSettingtService", function() { return StoreSettingtService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");





let StoreSettingtService = class StoreSettingtService {
    constructor(httpClient) {
        this.httpClient = httpClient;
        this.switchSettings = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"](); /*  */
        this.switchSettingReceiver = this.switchSettings.asObservable();
    }
    ;
    getIdentityServerConfigurations() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/auth/oauth-two-config`);
    }
    getLinkStoreDetails(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/store/link-store-config`, { params: query });
    }
    getLinkStoreUrl() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/url/store/LINK_STORE`);
    }
    generateorRefreshToken(tokenUrl, postData) {
        let headers = {
            "Content-Type": 'application/x-www-form-urlencoded'
        };
        return this.httpClient.post(tokenUrl, postData, { headers: headers });
    }
    getData(url) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}${url}`);
    }
    submitIdentity(url, data) {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}${url}`, data);
    }
    submitLinkData(url, data) {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}${url}`, data);
    }
    deleteLinkStore(url) {
        return this.httpClient.delete(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}${url}`);
    }
    /**Switch Store apis starts */
    getSwitchStoreUrl() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/url/store/SWITCH_STORE`);
    }
    getSwitchStoreDetails(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/store/switch-store-config`, { params: query });
    }
    checkSwitchStoreDetails(query) {
        this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/store/switch-store-config`, { params: query }).subscribe(settings => {
            if (settings && settings['urls'] && typeof (settings['urls']['get-all-switches']) != 'undefined' && typeof (settings['urls']['get-all-switches']['url']) != 'undefined') {
                localStorage.setItem('switchStoreSetting', JSON.stringify(settings));
                localStorage.setItem('hasSwtStoreSetting', "1");
            }
            else {
                localStorage.removeItem('switchStoreSetting');
                localStorage.removeItem('hasSwtStoreSetting');
            }
            this.emitSwitchStoreSettings(settings);
        });
    }
    validateUrlParams(url, params) {
        let return_flag = true;
        if (url == '' || url == null) {
            return true;
        }
        for (let i = 0; i < params.length; i++) {
            if (url.includes(params[i])) {
                return_flag = true;
            }
            else {
                return_flag = false;
                break;
            }
        }
        return return_flag;
    }
    validateUrl(url) {
        if (url == '' || url == null) {
            return true;
        }
        var res = url.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
        if (res == null)
            return false;
        else
            return true;
    }
    deleteSwitchStore(url) {
        return this.httpClient.delete(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}${url}`);
    }
    emitSwitchStoreSettings(settings) {
        this.switchSettings.next(settings);
    }
};
StoreSettingtService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], StoreSettingtService);



/***/ }),

/***/ "./src/app/common/services/switch.service.ts":
/*!***************************************************!*\
  !*** ./src/app/common/services/switch.service.ts ***!
  \***************************************************/
/*! exports provided: SwitchService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchService", function() { return SwitchService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");





let SwitchService = class SwitchService {
    constructor(httpClient, cookieManager) {
        this.httpClient = httpClient;
        this.cookieManager = cookieManager;
    }
    getSwitchList(query) {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/list`, { params: query });
    }
    getSwitchLinks() {
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/links`);
    }
    getSwitchRulesList(switchId) {
        let timestamp = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/rules?_=${timestamp}`, { responseType: 'text' });
    }
    getSwitchPortsStats(switchId) {
        let timestamp = new Date().getTime();
        var endDate = moment().utc().format("YYYY-MM-DD-HH:mm:ss");
        var startDate = moment().utc().subtract(30, 'minutes').format("YYYY-MM-DD-HH:mm:ss");
        let downSample = "30s";
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/stats/switchports/${switchId}/${startDate}/${endDate}/${downSample}?_=${timestamp}`);
    }
    getNetworkPath(source_switch, target_switch) {
        let timestamp = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/network/paths?src_switch=${source_switch}&dst_switch=${target_switch}&_=${timestamp}`);
    }
    configurePort(switchId, portNumber, status) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/${portNumber}/config`;
        return this.httpClient.put(url, { "status": status });
    }
    getSwitchPortFlows(switchId, portNumber, filter) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/${portNumber}/flows`;
        return this.httpClient.get(url);
    }
    getSwitchDetail(switchId, filter) {
        var query = { controller: filter == 'controller' };
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}`, { params: query });
    }
    getSwitchFlows(switchId, filter, port) {
        var url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/flows?inventory=` + filter;
        if (port) {
            url = url + "&port=" + port;
        }
        return this.httpClient.get(url);
    }
    getSwitchMetersList(switchId) {
        let timestamp = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/meters/${switchId}?_=${timestamp}`);
    }
    saveSwitcName(name, switchid) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/name/${switchid}`, name);
    }
    switchMaintenance(data, switchid) {
        return this.httpClient.post(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/under-maintenance/${switchid}`, data);
    }
    updatediscoveryPackets(switchId, portNumber, value) {
        const url = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/ports/${portNumber}/properties`;
        return this.httpClient.put(url, { "discovery_enabled": value });
    }
    getdiscoveryPackets(switchId, portNumber) {
        let timestamp = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}/ports/${portNumber}/properties?_=${timestamp}`);
    }
    updateSwitch(data, switch_id) {
        return this.httpClient.patch(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/location/${switch_id}`, data);
    }
    deleteSwitch(switchId, data, successCb, errorCb) {
        var requestBody = JSON.stringify(data);
        let token = this.cookieManager.get('XSRF-TOKEN');
        var xhr = new XMLHttpRequest();
        xhr.withCredentials = false;
        xhr.addEventListener("readystatechange", function () {
            if (this.readyState == 4 && this.status == 200) {
                successCb(JSON.parse(this.responseText));
            }
            else if (this.readyState == 4 && this.status >= 300) {
                errorCb(JSON.parse(this.responseText));
            }
        });
        xhr.open("DELETE", `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/switch/${switchId}`);
        xhr.setRequestHeader("Content-Type", "application/json");
        if (token !== null) {
            xhr.setRequestHeader("X-XSRF-TOKEN", token);
        }
        xhr.send(requestBody);
    }
};
SwitchService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: "root"
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], _cookie_manager_service__WEBPACK_IMPORTED_MODULE_4__["CookieManagerService"]])
], SwitchService);



/***/ }),

/***/ "./src/app/common/services/tab.service.ts":
/*!************************************************!*\
  !*** ./src/app/common/services/tab.service.ts ***!
  \************************************************/
/*! exports provided: TabService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TabService", function() { return TabService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");



let TabService = class TabService {
    constructor() {
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
    }
    setSelectedTab(tab) {
        this.subject.next({ text: tab });
    }
    getSelectedTab() {
        return this.subject.asObservable();
    }
    clearSelectedTab() {
        this.subject.next();
    }
};
TabService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({ providedIn: 'root' })
], TabService);



/***/ }),

/***/ "./src/app/common/services/topology-graph.service.ts":
/*!***********************************************************!*\
  !*** ./src/app/common/services/topology-graph.service.ts ***!
  \***********************************************************/
/*! exports provided: TopologyGraphService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopologyGraphService", function() { return TopologyGraphService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../enums/isl.enum */ "./src/app/common/enums/isl.enum.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common.service */ "./src/app/common/services/common.service.ts");






let TopologyGraphService = class TopologyGraphService {
    constructor(commonService) {
        this.commonService = commonService;
        this.min_zoom = 0.25;
        this.scaleLimit = 0.05;
        this.linksSourceArr = [];
        this.max_zoom = 3;
        this.mLinkNum = {};
        this.isDragMove = true;
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.zoomFit = () => {
            var bounds = this.g.node().getBBox();
            var parent = this.g.node().parentElement;
            var fullWidth = $(parent).width(), fullHeight = $(parent).height();
            var width = bounds.width, height = bounds.height;
            var midX = (bounds.x + width) / 2, midY = (bounds.y + height) / 2;
            if (width == 0 || height == 0)
                return;
            if (this.graph_data.nodes.length >= 50) {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_3__["zoomIdentity"]
                    .scale(this.scaleLimit)
                    .translate((fullWidth / 2 - this.scaleLimit * midX) / this.scaleLimit, (fullHeight / 2 - this.scaleLimit * midY) / this.scaleLimit);
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
            else {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_3__["zoomIdentity"]
                    .scale(this.min_zoom)
                    .translate((fullWidth / 2 - this.min_zoom * midX), (fullHeight / 2 - this.min_zoom * midY));
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
        };
        this.horizontallyBound = (parentDiv, childDiv) => {
            let parentRect = parentDiv.getBoundingClientRect();
            let childRect = childDiv.getBoundingClientRect();
            return (parentRect.left <= childRect.left && parentRect.right >= childRect.right);
        };
        this.showSwitchDetails = d => {
            localStorage.setItem("switchDetailsJSON", JSON.stringify(d));
            var url = "switches/details/" + d.switch_id;
            var win = window.open(url, "_blank");
            win.focus();
        };
        this.dblclick = (d, index) => {
            var element = document.getElementById("circle_" + d.switch_id);
            var classes = "circle blue";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red";
            }
            element.setAttribute("class", classes);
            this.showSwitchDetails(d);
        };
        this.showLinkDetails = d => {
            localStorage.setItem("linkData", JSON.stringify(d));
            let url = "isl/switch/isl/" + d.source_switch + "/" + d.src_port + "/" + d.target_switch + "/" + d.dst_port;
            var win = window.open(url, '_blank');
            win.focus();
        };
        this.showFlowDetails = d => {
            let url = "flows?src=" + d.source_switch_name + "&dst=" + d.target_switch_name;
            var win = window.open(url, '_blank');
            win.focus();
        };
        this.dragStart = () => {
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                this.simulation.alphaTarget(1).stop();
        };
        this.dragging = (d, i) => {
            // this.isDragMove = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_3__["event"].dy;
            this.ticked();
        };
        this.dragEnd = (d, i) => {
            if (!d3__WEBPACK_IMPORTED_MODULE_3__["event"].active)
                this.simulation.alphaTarget(0);
        };
    }
    loadworldMapGraph(data, svgElement, width, height, graph_loader) {
        this.graph_data = data;
        this.svgElement = d3__WEBPACK_IMPORTED_MODULE_3__["select"]("#" + svgElement)
            .append("svg")
            .attr("width", width)
            .attr("height", height);
        this.g = this.svgElement.append("g");
        this.graphLinkGroup = this.g
            .append("g")
            .attr("id", `links`)
            .attr("class", "links");
        // Initialize the nodes
        this.graphNodeGroup = this.g.append("g")
            .attr("id", `nodes`)
            .attr("class", "nodes");
        this.zoom = d3__WEBPACK_IMPORTED_MODULE_3__["zoom"]()
            .scaleExtent([this.scaleLimit, this.max_zoom])
            .extent([[0, 0], [width, height]])
            .on("zoom", () => {
            this.g.attr("transform", "translate(" +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.x +
                "," +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.y +
                ") scale(" +
                d3__WEBPACK_IMPORTED_MODULE_3__["event"].transform.k +
                ")");
        });
        this.simulation = d3__WEBPACK_IMPORTED_MODULE_3__["forceSimulation"]() // Force algorithm is applied to data.nodes      
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_3__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_3__["forceManyBody"]().strength(-1000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_3__["forceX"](width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_3__["forceY"](height / 2));
        if (this.graph_data.links.length > 0) {
            try {
                var result = this.commonService.groupBy(this.graph_data.links, function (item) {
                    return [item.source_switch, item.target_switch];
                });
                for (var i = 0, len = result.length; i < len; i++) {
                    var row = result[i];
                    if (row.length >= 1) {
                        for (var j = 0, len1 = row.length; j < len1; j++) {
                            var key = row[j].source_switch + "_" + row[j].target_switch;
                            var key1 = row[j].target_switch + "_" + row[j].source_switch;
                            var prcessKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
                            if (typeof this.linksSourceArr[prcessKey] !== "undefined") {
                                this.linksSourceArr[prcessKey].push(row[j]);
                            }
                            else {
                                this.linksSourceArr[key] = [];
                                this.linksSourceArr[key].push(row[j]);
                            }
                        }
                    }
                }
            }
            catch (e) { }
        }
        var nodelength = this.graph_data.nodes.length;
        var linklength = this.graph_data.links.length;
        for (var i = 0; i < nodelength; i++) {
            for (var j = 0; j < linklength; j++) {
                if (this.graph_data.nodes[i].switch_id == this.graph_data.links[j]["source_switch"] &&
                    this.graph_data.nodes[i].switch_id == this.graph_data.links[j]["target_switch"]) {
                    this.graph_data.links[j].source = i;
                    this.graph_data.links[j].target = i;
                }
                else {
                    var key = this.graph_data.links[j]["source_switch"] + "_" + this.graph_data.links[j]["target_switch"];
                    var key1 = this.graph_data.links[j]["target_switch"] + "_" + this.graph_data.links[j]["source_switch"];
                    var processKey = this.linksSourceArr && typeof this.linksSourceArr[key] != 'undefined' ? key : key1;
                    var sourceObj = processKey.split("_")[0];
                    var targetObj = processKey.split("_")[1];
                    if (this.graph_data.nodes[i].switch_id == sourceObj) {
                        this.graph_data.links[j].source = i;
                    }
                    else if (this.graph_data.nodes[i].switch_id == targetObj) {
                        this.graph_data.links[j].target = i;
                    }
                }
            }
        }
        this.simulation.nodes(this.graph_data.nodes);
        this.simulation.force("link", d3__WEBPACK_IMPORTED_MODULE_3__["forceLink"]().links(this.graph_data.links).distance((d) => {
            let distance = 150;
            try {
                if (!d.flow_count) {
                    if (d.speed == "40000000") {
                        distance = 100;
                    }
                    else {
                        distance = 300;
                    }
                }
            }
            catch (e) { }
            return distance;
        }).strength(0.1));
        this.simulation.stop();
        this.simulation.on("tick", () => {
            this.ticked();
            this.zoomFit();
        });
        this.drag = d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd);
        this.size = d3__WEBPACK_IMPORTED_MODULE_3__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_3__["range"](1));
        this.insertNodes(this.graph_data.nodes, true);
        this.insertLinks(this.graph_data.links, true);
        this.svgElement.call(this.zoom);
        this.svgElement.on("dblclick.zoom", null);
        this.simulation.restart();
        this.simulation.on("end", () => {
            setTimeout(() => {
                this.ticked();
                this.zoomFit();
                graph_loader.style.display = "none";
            }, 1000);
        });
    }
    insertNodes(nodes, forMap) {
        let ref = this;
        let graphNodesData = this.graphNodeGroup
            .selectAll("g.node")
            .data(nodes, d => d.switch_id);
        let graphNodeElement = graphNodesData
            .enter()
            .append("g")
            .attr("class", "node")
            .on("dblclick", this.dblclick)
            .call(d3__WEBPACK_IMPORTED_MODULE_3__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd));
        graphNodesData.exit().remove();
        graphNodeElement
            .append("circle")
            .attr("r", this.graphOptions.radius)
            .attr("class", function (d, index) {
            var classes = "circle blue";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red";
            }
            return classes;
        })
            .attr("id", function (d, index) {
            return "circle_" + d.switch_id;
        })
            .style("cursor", "move");
        let text = graphNodeElement
            .append("text")
            .attr("dy", ".35em")
            .style("font-size", this.graphOptions.nominal_text_size + "px")
            .attr("class", "switchname");
        if (this.graphOptions.text_center) {
            text
                .text(function (d) {
                return d.name;
            })
                .style("text-anchor", "middle");
        }
        else {
            text
                .attr("dx", function (d) {
                return ref.size(d.size) || ref.graphOptions.nominal_base_node_size;
            })
                .text(function (d) {
                return d.name;
            });
        }
        let images = graphNodeElement
            .append("svg:image")
            .attr("xlink:href", function (d) {
            return _environments_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].assetsPath + "/images/switch.png";
        })
            .attr("x", function (d) {
            return -29;
        })
            .attr("y", function (d) {
            return -29;
        })
            .attr("height", 58)
            .attr("width", 58)
            .attr("id", function (d, index) {
            return "image_" + index;
        })
            .attr("cursor", "pointer");
        if (!forMap) {
            graphNodeElement.on("mouseover", function (d, index) {
                $("#isl_hover").css("display", "none");
                var element = document.getElementById("circle_" + d.switch_id);
                var classes = "circle blue hover";
                if (d.state && d.state.toLowerCase() == "deactivated") {
                    classes = "circle red hover";
                }
                element.setAttribute("class", classes);
                var rec = element.getBoundingClientRect();
                $("#topology-hover-txt, #switch_hover").css("display", "block");
                $("#topology-hover-txt").css("top", rec.y + "px");
                $("#topology-hover-txt").css("left", (rec.x) + "px");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_switch_name").html("<span>" + d.name + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_controller").html("<span>" + d.switch_id + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_state").html("<span>" + d.state + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_address").html("<span>" + d.address + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_name").html("<span>" + d.switch_id + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_desc").html("<span>" + d.description + "</span>");
                var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-hover-txt"));
                if (bound) {
                    $("#topology-hover-txt").removeClass("left");
                }
                else {
                    var left = rec.x - (300 + 100); // subtract width of tooltip box + circle radius
                    $("#topology-hover-txt").css("left", left + "px");
                    $("#topology-hover-txt").addClass("left");
                }
            })
                .on("mouseout", function (d, index) {
                if (this.flagHover == false) {
                    this.flagHover = true;
                }
                else {
                    var element = document.getElementById("circle_" + d.switch_id);
                    var classes = "circle blue";
                    if (d.state && d.state.toLowerCase() == "deactivated") {
                        classes = "circle red";
                    }
                    element.setAttribute("class", classes);
                }
                if (!$("#topology-hover-txt").is(":hover")) {
                    $("#topology-hover-txt, #switch_hover").css("display", "none");
                }
            })
                .on("click", function (d, index) {
                $("#topology-hover-txt").css("display", "none");
                var cName = document.getElementById("circle_" + d.switch_id).className;
                let circleClass = cName; //cName.baseVal;
                var element = document.getElementById("circle_" + d.switch_id);
                var classes = "circle blue hover";
                if (d.state && d.state.toLowerCase() == "deactivated") {
                    classes = "circle red hover";
                }
                element.setAttribute("class", classes);
                var rec = element.getBoundingClientRect();
                if (!ref.isDragMove) {
                    $("#topology-click-txt, #switch_click").css("display", "block");
                    $("#topology-click-txt").css("top", rec.y + "px");
                    $("#topology-click-txt").css("left", rec.x + "px");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_switch_name").html("<span>" + d.name + "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_controller").html("<span>" + d.switch_id + "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_state").html("<span>" + d.state + "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_address").html("<span>" + d.address + "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_name").html("<span>" + d.switch_id + "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".switchdetails_div_click_desc").html("<span>" + d.description + "</span>");
                    var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-click-txt"));
                    if (bound) {
                        $("#topology-click-txt").removeClass("left");
                    }
                    else {
                        var left = rec.x - (300 + 80); // subtract width of tooltip box + circle radius
                        $("#topology-click-txt").css("left", left + "px");
                        $("#topology-click-txt").addClass("left");
                    }
                    $("#topology-hover-txt").css("display", "none");
                }
                else {
                    ref.isDragMove = false;
                }
            });
        }
        this.graphNodes = graphNodeElement.merge(graphNodesData);
    }
    insertLinks(links, forMap) {
        let ref = this;
        let graphLinksData = this.graphLinkGroup.selectAll("path.link").data(links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                return "link logical";
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            return "link physical  orange_percentage dashed_maintenance_path";
                        }
                        return "link physical  dashed_maintenance_path";
                    }
                    else if (d.affected) {
                        return "link physical  dashed_path";
                    }
                    else {
                        return "link physical";
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            return "link physical dashed_maintenance_path orange_percentage";
                        }
                        return "link physical  dashed_maintenance_path";
                    }
                    else if (d.affected) {
                        return "link physical dashed_path";
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            return "link physical orange_percentage";
                        }
                        return "link physical";
                    }
                }
            }
        })
            .attr("id", (d, index) => {
            return "link" + index;
        }).on("click", function (d, index) {
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                if (d.under_maintenance) {
                    element.setAttribute("class", "link logical overlay dashed_maintenance_path");
                }
                else if (d.affected) {
                    element.setAttribute("class", "link logical overlay dashed_path");
                }
                else {
                    element.setAttribute("class", "link logical overlay");
                }
                ref.showFlowDetails(d);
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical pathoverlay orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical pathoverlay dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical pathoverlay dashed_path");
                    }
                    else {
                        element.setAttribute("class", "link physical pathoverlay");
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical overlay orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical overlay dashed_path");
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical orange_percentage overlay");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay");
                        }
                    }
                }
                ref.showLinkDetails(d);
            }
        })
            .attr("stroke", function (d, index) {
            if (d.hasOwnProperty("flow_count")) {
                return _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__["ISL"].FLOWCOUNT;
            }
            else {
                if (d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") {
                    return _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__["ISL"].UNIDIR;
                }
                else if (d.state && d.state.toLowerCase() == "discovered") {
                    return _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__["ISL"].DISCOVERED;
                }
                else if (d.state && d.state.toLowerCase() == "moved") {
                    return _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__["ISL"].MOVED;
                }
                return _enums_isl_enum__WEBPACK_IMPORTED_MODULE_2__["ISL"].FAILED;
            }
        });
        if (!forMap) {
            graphLinksData.on("mouseover", function (d, index) {
                $("#switch_hover").css("display", "none");
                var element = $("#link" + index)[0];
                var availbandwidth = d.available_bandwidth;
                var max_bandwidth = d.max_bandwidth;
                var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
                if (d.hasOwnProperty("flow_count")) {
                    if (d.under_maintenance) {
                        element.setAttribute("class", "link logical overlay dashed_maintenance_path");
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link logical overlay dashed_path");
                    }
                    else {
                        element.setAttribute("class", "link logical overlay");
                    }
                }
                else {
                    if ((d.unidirectional &&
                        d.state &&
                        d.state.toLowerCase() == "discovered") ||
                        (d.state && d.state.toLowerCase() == "failed")) {
                        if (d.under_maintenance) {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical dashed_maintenance_path orange_percentage pathoverlay");
                            }
                            else {
                                element.setAttribute("class", "link physical dashed_maintenance_path pathoverlay");
                            }
                        }
                        else if (d.affected) {
                            element.setAttribute("class", "link physical dashed_path pathoverlay");
                        }
                        else {
                            if (parseInt(percentage) < 50 && d.state.toLowerCase() != 'failed' && !d.unidirectional) {
                                element.setAttribute("class", "link physical orange_percentage overlay");
                            }
                            else {
                                element.setAttribute("class", "link physical overlay");
                            }
                        }
                    }
                    else {
                        if (d.under_maintenance) {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical overlay orange_percentage dashed_maintenance_path");
                            }
                            else {
                                element.setAttribute("class", "link physical overlay dashed_maintenance_path");
                            }
                        }
                        else if (d.affected) {
                            element.setAttribute("class", "link physical overlay dashed_path");
                        }
                        else {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical orange_percentage overlay");
                            }
                            else {
                                element.setAttribute("class", "link physical overlay");
                            }
                        }
                    }
                    $(element).on("mousemove", function (e) {
                        $("#topology-hover-txt").css("top", (e.pageY - 30) + "px");
                        $("#topology-hover-txt").css("left", (e.pageX) + "px");
                        var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-hover-txt"));
                        if (bound) {
                            $("#topology-hover-txt").removeClass("left");
                        }
                        else {
                            var left = e.pageX - (300 + 100); // subtract width of tooltip box + circle radius
                            $("#topology-hover-txt").css("left", left + "px");
                            $("#topology-hover-txt").addClass("left");
                        }
                    });
                    var rec = element.getBoundingClientRect();
                    $("#topology-hover-txt, #isl_hover").css("display", "block");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_source_port").html("<span>" +
                        (d.src_port == "" || d.src_port == undefined ? "-" : d.src_port) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_maintenance").html("<span>" +
                        (d.under_maintenance == "" || d.under_maintenance == undefined ? "false" : d.under_maintenance) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_destination_port").html("<span>" +
                        (d.dst_port == "" || d.dst_port == undefined ? "-" : d.dst_port) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_source_switch").html("<span>" +
                        (d.source_switch_name == "" || d.source_switch_name == undefined
                            ? "-"
                            : d.source_switch_name) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_destination_switch").html("<span>" +
                        (d.target_switch_name == "" || d.target_switch_name == undefined
                            ? "-"
                            : d.target_switch_name) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_speed").html("<span>" +
                        (d.max_bandwidth == "" || d.max_bandwidth == undefined ? "-" : d.max_bandwidth / 1000) +
                        " Mbps</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_state").html("<span>" +
                        (d.state == "" || d.state == undefined ? "-" : d.state) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_latency").html("<span>" +
                        (d.latency == "" || d.latency == undefined ? "-" : d.latency) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_bandwidth").html("<span>" +
                        (d.available_bandwidth == "" || d.available_bandwidth == undefined
                            ? "-"
                            : d.available_bandwidth / 1000) +
                        " Mbps (" +
                        percentage +
                        "%)</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_unidirectional").html("<span>" +
                        (d.unidirectional == "" || d.unidirectional == undefined
                            ? "-"
                            : d.unidirectional) +
                        "</span>");
                    d3__WEBPACK_IMPORTED_MODULE_3__["select"](".isldetails_div_cost").html("<span>" +
                        (d.cost == "" || d.cost == undefined ? "-" : d.cost) +
                        "</span>");
                }
            })
                .on("mouseout", function (d, index) {
                $("#topology-hover-txt, #isl_hover").css("display", "none");
                var element = $("#link" + index)[0];
                var availbandwidth = d.available_bandwidth;
                var max_bandwidth = d.max_bandwidth;
                var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
                if (d.hasOwnProperty("flow_count")) {
                    if (d.under_maintenance) {
                        element.setAttribute("class", "link logical dashed_maintenance_path");
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link logical dashed_path");
                    }
                    else {
                        element.setAttribute("class", "link logical");
                    }
                }
                else {
                    if ((d.unidirectional &&
                        d.state &&
                        d.state.toLowerCase() == "discovered") ||
                        (d.state && d.state.toLowerCase() == "failed")) {
                        if (d.under_maintenance) {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical  orange_percentage dashed_maintenance_path");
                            }
                            else {
                                element.setAttribute("class", "link physical  dashed_maintenance_path");
                            }
                        }
                        else if (d.affected) {
                            element.setAttribute("class", "link physical  dashed_path");
                        }
                        else {
                            element.setAttribute("class", "link physical ");
                        }
                    }
                    else {
                        if (d.under_maintenance) {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical orange_percentage dashed_maintenance_path");
                            }
                            else {
                                element.setAttribute("class", "link physical dashed_maintenance_path");
                            }
                        }
                        else if (d.affected) {
                            element.setAttribute("class", "link physical dashed_path");
                        }
                        else {
                            if (parseInt(percentage) < 50) {
                                element.setAttribute("class", "link physical orange_percentage ");
                            }
                            else {
                                element.setAttribute("class", "link physical ");
                            }
                        }
                    }
                }
                if (!$("#topology-hover-txt").is(":hover")) {
                    $("#topology-hover-txt, #isl_hover").css("display", "none");
                }
            });
        }
        graphLinksData.exit().remove();
        this.graphlink = graphNewLink.merge(graphLinksData);
    }
    isObjEquivalent(a, b) {
        // Create arrays of property names
        var aProps = Object.getOwnPropertyNames(a);
        var bProps = Object.getOwnPropertyNames(b);
        if (aProps.length != bProps.length) {
            return false;
        }
        for (var i = 0; i < aProps.length; i++) {
            var propName = aProps[i];
            if (a[propName] !== b[propName]) {
                return false;
            }
        }
        return true;
    }
    sortLinks() {
        this.graph_data.links.sort(function (a, b) {
            if (a.source > b.source) {
                return 1;
            }
            else if (a.source < b.source) {
                return -1;
            }
            else {
                if (a.target > b.target) {
                    return 1;
                }
                if (a.target < b.target) {
                    return -1;
                }
                else {
                    return 0;
                }
            }
        });
    }
    setLinkIndexAndNum() {
        for (var i = 0; i < this.graph_data.links.length; i++) {
            if (i != 0 &&
                this.graph_data.links[i].source == this.graph_data.links[i - 1].source &&
                this.graph_data.links[i].target == this.graph_data.links[i - 1].target) {
                this.graph_data.links[i].linkindex = this.graph_data.links[i - 1].linkindex + 1;
            }
            else {
                this.graph_data.links[i].linkindex = 1;
            }
            // save the total number of links between two nodes
            if (this.mLinkNum[this.graph_data.links[i].target + "," + this.graph_data.links[i].source] !==
                undefined) {
                this.mLinkNum[this.graph_data.links[i].target + "," + this.graph_data.links[i].source] = this.graph_data.links[i].linkindex;
            }
            else {
                this.mLinkNum[this.graph_data.links[i].source + "," + this.graph_data.links[i].target] = this.graph_data.links[i].linkindex;
            }
        }
    }
    ticked() {
        let ref = this;
        var lookup = {};
        this.graphlink.attr("d", d => {
            var islCount = 0;
            var matchedIndex = 1;
            var key = d.source_switch + "_" + d.target_switch;
            var key1 = d.target_switch + "_" + d.source_switch;
            var processKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
            if (this.linksSourceArr &&
                typeof this.linksSourceArr[processKey] !== "undefined") {
                islCount = this.linksSourceArr[processKey].length;
            }
            if (islCount > 1) {
                this.linksSourceArr[processKey].map(function (o, i) {
                    if (ref.isObjEquivalent(o, d)) {
                        matchedIndex = i + 1;
                        return;
                    }
                });
            }
            var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy), 
            // Defaults for normal edge.
            drx = dr, dry = dr, xRotation = 0, // degrees
            largeArc = 0, // 1 or 0
            sweep = 1; // 1 or 0
            var lTotalLinkNum = this.mLinkNum[d.source.index + "," + d.target.index] ||
                this.mLinkNum[d.target.index + "," + d.source.index];
            if (lTotalLinkNum > 1) {
                dr = dr / (1 + (1 / lTotalLinkNum) * (d.linkindex - 1));
            }
            // generate svg path
            lookup[d.key] = d.flow_count;
            if (lookup[d.Key] == undefined) {
                if (islCount == 1) {
                    return ("M" +
                        d.source.x +
                        "," +
                        d.source.y +
                        "L" +
                        d.target.x +
                        "," +
                        d.target.y);
                }
                else {
                    if (islCount % 2 != 0 && matchedIndex == 1) {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "L" +
                            d.target.x +
                            "," +
                            d.target.y);
                    }
                    else if (matchedIndex % 2 == 0) {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "A" +
                            dr +
                            "," +
                            dr +
                            " 0 0 1," +
                            d.target.x +
                            "," +
                            d.target.y +
                            "A" +
                            dr +
                            "," +
                            dr +
                            " 0 0 0," +
                            d.source.x +
                            "," +
                            d.source.y);
                    }
                    else {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "A" +
                            dr +
                            "," +
                            dr +
                            " 0 0 0," +
                            d.target.x +
                            "," +
                            d.target.y +
                            "A" +
                            dr +
                            "," +
                            dr +
                            " 0 0 1," +
                            d.source.x +
                            "," +
                            d.source.y);
                    }
                }
            }
            else {
                if (d.source_switch == d.target_switch) {
                    // Self edge.
                    if (x1 === x2 && y1 === y2) {
                        // Fiddle with this angle to get loop oriented.
                        xRotation = -45;
                        // Needs to be 1.
                        largeArc = 1;
                        // Change sweep to change orientation of loop.
                        //sweep = 0;
                        // Make drx and dry different to get an ellipse
                        // instead of a circle.
                        drx = 50;
                        dry = 20;
                        // For whatever reason the arc collapses to a point if the beginning
                        // and ending points of the arc are the same, so kludge it.
                        x2 = x2 + 1;
                        y2 = y2 + 1;
                    }
                    return ("M" +
                        x1 +
                        "," +
                        y1 +
                        "A" +
                        drx +
                        "," +
                        dry +
                        " " +
                        xRotation +
                        "," +
                        largeArc +
                        "," +
                        sweep +
                        " " +
                        x2 +
                        "," +
                        y2);
                }
                else {
                    return ("M" +
                        d.source.x +
                        "," +
                        d.source.y +
                        "L" +
                        d.target.x +
                        "," +
                        d.target.y);
                }
            }
        });
        this.graphNodes.attr("transform", function (d) {
            if (d.x && d.y) {
                return "translate(" + d.x + "," + d.y + ")";
            }
        });
    }
};
TopologyGraphService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"]])
], TopologyGraphService);



/***/ }),

/***/ "./src/app/common/services/topology.service.ts":
/*!*****************************************************!*\
  !*** ./src/app/common/services/topology.service.ts ***!
  \*****************************************************/
/*! exports provided: TopologyService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopologyService", function() { return TopologyService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _cookie_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookie-manager.service */ "./src/app/common/services/cookie-manager.service.ts");



let TopologyService = class TopologyService {
    constructor(cookieService) {
        this.cookieService = cookieService;
        this.settingTransmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"];
        this.autoRefreshTransmitter = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"];
        this.settingReceiver = this.settingTransmitter.asObservable();
        this.autoRefreshReceiver = this.autoRefreshTransmitter.asObservable();
        this.linksdata = [];
        this.failedIsl = [];
        this.unidirectionalIsl = [];
        this.topologyDefaultViewOptions = {
            SWITCH_CHECKED: 0,
            ISL_CHECKED: 1,
            FLOW_CHECKED: 0,
            REFRESH_CHECKED: 0,
            REFRESH_INTERVAL: 1,
            REFRESH_TYPE: "m",
            WORLDMAP: 0
        };
    }
    updateTopologyViewSetting() {
        let currentViewSetting = this.getViewOptions();
        /**Transmit new setting to component */
        this.settingTransmitter.emit(currentViewSetting);
    }
    updateAutoRefreshSetting() {
        let currentViewSetting = this.getViewOptions();
        /**Transmit new setting to component */
        this.autoRefreshTransmitter.emit(currentViewSetting);
    }
    getViewOptions() {
        let obj = JSON.parse(this.cookieService.get("topologyDefaultViewOptions"));
        if (obj == null) {
            return this.topologyDefaultViewOptions;
        }
        return obj;
    }
    setViewOptinos(obj) {
        this.cookieService.set("topologyDefaultViewOptions", JSON.stringify(obj));
        this.updateTopologyViewSetting();
    }
    setCoordinates(positions) {
        if (positions) {
            localStorage.setItem('positions', JSON.stringify(positions));
            localStorage.setItem('isDirtyCoordinates', 'YES');
        }
        else {
            localStorage.removeItem('positions');
            localStorage.removeItem('isDirtyCoordinates');
        }
    }
    setCoordinateChangeStatus(status) {
        localStorage.setItem('isDirtyCoordinates', status);
    }
    isCoordinatesChanged() {
        let flag = localStorage.getItem('isDirtyCoordinates');
        return flag == 'YES' ? true : false;
    }
    getCoordinates() {
        return JSON.parse(localStorage.getItem('positions'));
    }
    setAutoRefreshSetting(obj) {
        this.cookieService.set("topologyDefaultViewOptions", JSON.stringify(obj));
        this.updateAutoRefreshSetting();
    }
    setLinksData(data) {
        this.linksdata = data;
        this.failedIsl = [];
        this.unidirectionalIsl = [];
        for (var i = 0, len = data.length; i < len; i++) {
            if (data[i].state && data[i].state.toLowerCase() == "failed") {
                this.failedIsl.push(data[i]);
            }
            if (data[i].unidirectional && data[i].state && data[i].state.toLowerCase() == "discovered") {
                this.unidirectionalIsl.push(data[i]);
            }
        }
    }
    getLinksData() {
        return this.linksdata;
    }
    getFailedIsls() {
        return this.failedIsl;
    }
    getUnidirectionalIsl() {
        return this.unidirectionalIsl;
    }
};
TopologyService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_cookie_manager_service__WEBPACK_IMPORTED_MODULE_2__["CookieManagerService"]])
], TopologyService);



/***/ }),

/***/ "./src/app/common/services/user-activity.service.ts":
/*!**********************************************************!*\
  !*** ./src/app/common/services/user-activity.service.ts ***!
  \**********************************************************/
/*! exports provided: UserActivityService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserActivityService", function() { return UserActivityService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");




let UserActivityService = class UserActivityService {
    constructor(httpClient) {
        this.httpClient = httpClient;
    }
    getUserActivityList() {
        let date = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/useractivity/log?_=${date}`);
    }
    getFilteredUserActivityList(username, type, startDate, endDate) {
        let url = '';
        let replacement = "";
        let currentDate = new Date().getTime();
        if (type.length || username.length || startDate != '' || endDate != '') {
            url += "";
            if (type.length) {
                for (let i = 0; i < type.length; i++) {
                    url += 'activity=' + type[i] + "&";
                }
            }
            if (username.length) {
                for (let i = 0; i < username.length; i++) {
                    url += 'userId=' + username[i] + "&";
                }
            }
            if (startDate != '' && startDate != undefined) {
                url += 'startTime=' + new Date(startDate).getTime() + "&";
            }
            if (endDate != '' && endDate != undefined) {
                url += 'endTime=' + new Date(endDate).getTime();
            }
        }
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/useractivity/log?${url}&_=${currentDate}`);
    }
    getDropdownList() {
        let date = new Date().getTime();
        return this.httpClient.get(`${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}/useractivity/info?_=${date}`);
    }
};
UserActivityService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], UserActivityService);



/***/ }),

/***/ "./src/app/common/services/user.service.ts":
/*!*************************************************!*\
  !*** ./src/app/common/services/user.service.ts ***!
  \*************************************************/
/*! exports provided: UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");






const httpOptions = {
    headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpHeaders"]({
        'Content-Type': 'application/json',
        'dataType': "json"
    })
};
let UserService = class UserService {
    constructor(http) {
        this.http = http;
        this.subject = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.userSource = new rxjs__WEBPACK_IMPORTED_MODULE_4__["BehaviorSubject"](null);
        this.currentUser = this.userSource.asObservable();
        this.configUrl = `${_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].apiEndPoint}`;
    }
    /** GET: fetch all the users from server */
    getUsers() {
        return this.http.get(this.configUrl + '/user');
    }
    /** POST: add user to the server */
    addUser(user) {
        return this.http.post(this.configUrl + '/user', user);
    }
    getUserById(id) {
        const url = `${this.configUrl}/user/${id}`;
        return this.http.get(url);
    }
    editUser(id, user) {
        const url = `${this.configUrl}/user/${id}`;
        return this.http.put(url, user);
    }
    /** DELETE: delete the user from the server */
    deleteUser(id) {
        const url = `${this.configUrl}/user/${id}`;
        return this.http.delete(url);
    }
    /** GET: Reset Password and send password via Email */
    resetpasswordByUser(id) {
        const url = `${this.configUrl}/user/resetpassword/${id}`;
        return this.http.get(url);
    }
    /** GET: Reset Password by Admin */
    resetpasswordByAdmin(id) {
        const url = `${this.configUrl}/user/admin/resetpassword/${id}`;
        return this.http.get(url);
    }
    /** PUT: Reset2FA */
    reset2fa(id) {
        const url = `${this.configUrl}/user/reset2fa/${id}`;
        return this.http.put(url, id);
    }
    /** Set user for use user id in different components */
    selectedUser(userId) {
        this.userSource.next(userId);
    }
    /** Clear user id from selectedUser service  */
    clearSelectedUser() {
        this.subject.next();
    }
    /** PUT: change Password */
    changePassword(id, user) {
        const url = `${this.configUrl}/user/changePassword/${id}`;
        return this.http.put(url, user);
    }
    getSettings(query) {
        return this.http.get(`${this.configUrl}/user/settings`, { params: query });
    }
    getLoggedInUserInfo() {
        return this.http.get(`${this.configUrl}/user/loggedInUserInfo`);
    }
    saveSettings(payload) {
        return this.http.patch(`${this.configUrl}/user/settings`, payload);
    }
};
UserService = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
        providedIn: 'root'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
], UserService);



/***/ }),

/***/ "./src/app/modules/flows/connected-devices/connected-devices.component.css":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/flows/connected-devices/connected-devices.component.css ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvY29ubmVjdGVkLWRldmljZXMvY29ubmVjdGVkLWRldmljZXMuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/flows/connected-devices/connected-devices.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/modules/flows/connected-devices/connected-devices.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-lg-12 text-right\" style=\"padding-bottom: 10px;position:absolute; z-index: 1; margin-bottom: 10px;\">\r\n   <div class=\"pull-right\"  style=\"margin-right:10px; margin-top:-4px;\">\r\n      <input type=\"hidden\" class=\"on-off-switch\" value=\"0\" style=\"display: none;\">\r\n      <div class=\"pull-left\">\r\n        <div class=\"onoffswitch onoffswitch-connected-devices\">\r\n          <input type=\"checkbox\" (change)=\"toggleView($event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchconnecteddevice\">\r\n          <label class=\"onoffswitch-label\" for=\"onoffswitchconnecteddevice\">\r\n            <span class=\"onoffswitch-inner onoffswitch-inner-kilda-connected-devices\"></span>\r\n            <span class=\"onoffswitch-switch onoffswitch-switch-connected-devices\"></span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>      \r\n </div>\r\n  <div class=\"col-md-12\">\r\n    <div class=\"tabularview table-responsive\" *ngIf=\"tabularViewer\" style=\"margin-top:40px;\">\r\n      <table  class=\"row-border hover dataTable no-footer margin-top-zero\">\r\n        <thead class=\"thead-light\">\r\n          <tr class=\"tableHeading\">\r\n          <th>Mac Addr</th>\r\n          <th>Chassis Id</th>\r\n          <th>Port Id</th>\r\n          <th>Port Desc</th>\r\n          <th>TTL</th>\r\n          <th>Sys Name</th>\r\n          <th>Sys Desc</th>\r\n          <th>Sys Capabilities</th>\r\n          <th>Mgmt Addr</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr style=\"text-align: center;\">\r\n            <td colspan=\"9\"><b>Source Devices</b></td>\r\n          </tr>\r\n          <tr style=\"text-align: center;\" *ngIf=\"connectedDevicesTableData['source'].length == 0\">\r\n            <td colspan=\"9\"> No data available</td>\r\n          </tr>\r\n          <tr *ngFor=\"let device of connectedDevicesTableData['source']\">\r\n            <td class=\"divTableCell\">{{device.mac_address}}</td>\r\n            <td class=\"divTableCell\">{{device.chassis_id}}</td>\r\n            <td class=\"divTableCell\">{{device.port_id}}</td>\r\n            <td class=\"divTableCell\">{{device.port_description}}</td>\r\n            <td class=\"divTableCell\">{{device.ttl}}</td>\r\n            <td class=\"divTableCell\">{{device.system_name}}</td>\r\n            <td class=\"divTableCell\">{{device.system_description}}</td>\r\n            <td class=\"divTableCell\">{{device.system_capabilities}}</td>\r\n            <td class=\"divTableCell\">{{device.management_address}}</td>\r\n          </tr>\r\n          <tr style=\"text-align: center;\">\r\n            <td colspan=\"9\"><b>Destination Devices</b></td>\r\n          </tr>\r\n          <tr style=\"text-align: center;\" *ngIf=\"connectedDevicesTableData['dst'].length == 0\">\r\n            <td colspan=\"9\"> No data available</td>\r\n          </tr>\r\n          <tr *ngFor=\"let device of connectedDevicesTableData['dst']\">\r\n            <td class=\"divTableCell\">{{device.mac_address}}</td>\r\n            <td class=\"divTableCell\">{{device.chassis_id}}</td>\r\n            <td class=\"divTableCell\">{{device.port_id}}</td>\r\n            <td class=\"divTableCell\">{{device.port_description}}</td>\r\n            <td class=\"divTableCell\">{{device.ttl}}</td>\r\n            <td class=\"divTableCell\">{{device.system_name}}</td>\r\n            <td class=\"divTableCell\">{{device.system_description}}</td>\r\n            <td class=\"divTableCell\">{{device.system_capabilities}}</td>\r\n            <td class=\"divTableCell\">{{device.management_address}}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n   \r\n    <div [hidden]=\"!graphViewer\" id=\"connectedGraphwrapper\" class=\"topology-container\">\r\n      <svg id=\"connectedGraph\" width=\"1000\" height=\"450\"></svg>\r\n    </div>\r\n    <div id=\"tooltip_connected_device\" style=\"display:none;\">\r\n      <ul class=\"lldp_tooltip\">\r\n        <li><label>Mac Addr : </label><span id=\"mac_address\"></span></li>\r\n        <li><label>Chassis Id : </label><span id=\"chassis_id\"></span></li>\r\n        <li><label>Port Id : </label><span id=\"port_id\"></span></li>\r\n        <li><label>Port Desc : </label><span id=\"port_description\"></span></li>\r\n        <li><label>TTL : </label><span id=\"ttl\" ></span></li>\r\n        <li><label>System Name : </label><span id=\"system_name\"></span></li>\r\n        <li><label>System Desc : </label> <span id=\"system_description\"></span></li>\r\n        <li><label>System Capabilities : </label><span id=\"system_capabilities\"></span></li>\r\n        <li><label>Management Address : </label><span id=\"management_address\"></span></li>\r\n      </ul>\r\n    </div>\r\n    \r\n</div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/flows/connected-devices/connected-devices.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/modules/flows/connected-devices/connected-devices.component.ts ***!
  \********************************************************************************/
/*! exports provided: ConnectedDevicesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConnectedDevicesComponent", function() { return ConnectedDevicesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/enums/isl.enum */ "./src/app/common/enums/isl.enum.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../environments/environment */ "./src/environments/environment.ts");







let ConnectedDevicesComponent = class ConnectedDevicesComponent {
    constructor(flowService, loaderService) {
        this.flowService = flowService;
        this.loaderService = loaderService;
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.min_zoom = 0.15;
        this.max_zoom = 3;
        this.zoomLevel = 0.15;
        this.zoomStep = 0.15;
        this.property = 'graphicalviewer';
        this.graphViewer = true;
        this.tabularViewer = false;
        this.connectedDevicesTableData = {};
        this.dragStart = () => {
            if (!d3__WEBPACK_IMPORTED_MODULE_4__["event"].active)
                this.forceSimulation.alphaTarget(1).stop();
        };
        this.dragging = (d, i) => {
            this.isDragMove = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_4__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_4__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_4__["event"].dy;
            this.tick();
        };
        this.dragEnd = (d, i) => {
            if (!d3__WEBPACK_IMPORTED_MODULE_4__["event"].active)
                this.forceSimulation.alphaTarget(0);
            if (!d.connected) {
                d.fixed = true;
            }
        };
        this.horizontallyBound = (parentDiv, childDiv) => {
            let parentRect = parentDiv.getBoundingClientRect();
            let childRect = childDiv.getBoundingClientRect();
            return (parentRect.left <= childRect.left && parentRect.right >= childRect.right);
        };
    }
    ngOnInit() {
        if (this.flowId) {
            if (this.connectedDevices) {
                this.getConnectedDevices(this.flowId);
            }
        }
        else {
            console.error("Flow Id required");
        }
    }
    toggleView(e) {
        if (e.target.checked) {
            this.property = 'tabularViewer';
            this.graphViewer = false;
        }
        else {
            this.property = 'graphViewer';
            this.tabularViewer = false;
            this.loadTable(this.connectedDeviceData);
        }
        this[this.property] = true;
    }
    getConnectedDevices(flowId) {
        this.flowService.getConnectedDevices(flowId).subscribe(data => {
            this.connectedDeviceData = data;
            this.loadTable(data);
            this.initGraphSimulation();
        }, error => {
            this.connectedDeviceData = null;
            this.loadTable([]);
            console.log('error in data');
        });
    }
    loadTable(data) {
        var ref = this;
        this.connectedDevicesTableData = {};
        if (this.connectedDeviceData) {
            this.connectedDevicesTableData['source'] = [];
            this.connectedDevicesTableData['dst'] = [];
            if (this.connectedDeviceData.source && this.connectedDeviceData.source.lldp && this.connectedDeviceData.source.lldp.length) {
                for (let i = 0; i < this.connectedDeviceData.source.lldp.length; i++) {
                    let data = this.connectedDeviceData.source.lldp[i];
                    this.connectedDevicesTableData['source'].push(data);
                }
            }
            if (this.connectedDeviceData.source && this.connectedDeviceData.source.arp && this.connectedDeviceData.source.arp.length) {
                for (let i = 0; i < this.connectedDeviceData.source.arp.length; i++) {
                    let data = this.connectedDeviceData.source.arp[i];
                    this.connectedDevicesTableData['source'].push(data);
                }
            }
            if (this.connectedDeviceData.destination && this.connectedDeviceData.destination.lldp && this.connectedDeviceData.destination.lldp.length) {
                for (let i = 0; i < this.connectedDeviceData.destination.lldp.length; i++) {
                    let data = this.connectedDeviceData.destination.lldp[i];
                    this.connectedDevicesTableData['dst'].push(data);
                }
            }
            if (this.connectedDeviceData.destination && this.connectedDeviceData.destination.arp && this.connectedDeviceData.destination.arp.length) {
                for (let i = 0; i < this.connectedDeviceData.destination.arp.length; i++) {
                    let data = this.connectedDeviceData.destination.arp[i];
                    this.connectedDevicesTableData['dst'].push(data);
                }
            }
        }
    }
    initGraphSimulation() {
        this.nodes = [{ "x": -208.992345, "y": -6556.9998, connected: false, switch_id_value: this.flowDetail.source_switch, switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name, port: this.flowDetail.src_port, vlan: this.flowDetail.src_vlan },
            { "x": 595.98896, "y": -6556.9998, connected: false, switch_id_value: this.flowDetail.target_switch, switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name, port: this.flowDetail.dst_port, vlan: this.flowDetail.dst_vlan }
        ];
        this.links = [{
                connected: false,
                source: { switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name },
                target: { switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name }
            }];
        this.devices = [];
        if (this.connectedDeviceData) {
            if (this.connectedDeviceData.source && this.connectedDeviceData.source.lldp && this.connectedDeviceData.source.lldp.length) {
                for (let i = 0; i < this.connectedDeviceData.source.lldp.length; i++) {
                    let data = this.connectedDeviceData.source.lldp[i];
                    let node = data;
                    node['switch_id'] = data.mac_address;
                    node['connected'] = true;
                    this.nodes.push(node);
                    var link = {
                        connected: true,
                        source: { switch_id: data.mac_address, mac_address: data.mac_address },
                        target: { switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name }
                    };
                    this.links.push(link);
                }
            }
            if (this.connectedDeviceData.source && this.connectedDeviceData.source.arp && this.connectedDeviceData.source.arp.length) {
                for (let i = 0; i < this.connectedDeviceData.source.arp.length; i++) {
                    let data = this.connectedDeviceData.source.arp[i];
                    let node = data;
                    node['switch_id'] = data.mac_address;
                    node['connected'] = true;
                    this.nodes.push(node);
                    var link = {
                        connected: true,
                        source: { switch_id: data.mac_address, mac_address: data.mac_address },
                        target: { switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name }
                    };
                    this.links.push(link);
                }
            }
            if (this.connectedDeviceData.destination && this.connectedDeviceData.destination.lldp && this.connectedDeviceData.destination.lldp.length) {
                for (let i = 0; i < this.connectedDeviceData.destination.lldp.length; i++) {
                    let data = this.connectedDeviceData.destination.lldp[i];
                    let node = data;
                    node['switch_id'] = data.mac_address;
                    node['connected'] = true;
                    this.nodes.push(node);
                    var link = {
                        connected: true,
                        source: { switch_id: data.mac_address, mac_address: data.mac_address },
                        target: { switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name }
                    };
                    this.links.push(link);
                }
            }
            if (this.connectedDeviceData.destination && this.connectedDeviceData.destination.arp && this.connectedDeviceData.destination.arp.length) {
                for (let i = 0; i < this.connectedDeviceData.destination.arp.length; i++) {
                    let data = this.connectedDeviceData.destination.arp[i];
                    let node = data;
                    node['switch_id'] = data.mac_address;
                    node['connected'] = true;
                    this.nodes.push(node);
                    var link = {
                        connected: true,
                        source: { switch_id: data.mac_address, mac_address: data.mac_address },
                        target: { switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name }
                    };
                    this.links.push(link);
                }
            }
        }
        this.processLinks();
        this.svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]("svg#connectedGraph");
        this.width = $("#connectedGraphwrapper")[0].clientWidth || window.innerWidth;
        ;
        this.height = this.svgElement.attr('height');
        this.svgElement.style('cursor', 'move');
        this.svgElement.attr("width", this.width);
        this.svgElement.attr("height", this.height);
        this.g = this.svgElement.append("g");
        this.graphLinkGroup = this.g.append("g").attr("id", `links`).attr("class", "links");
        this.graphNodeGroup = this.g.append('g').attr("class", ".nodes").attr("id", "nodes");
        this.size = d3__WEBPACK_IMPORTED_MODULE_4__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_4__["range"](1));
        this.zoom = d3__WEBPACK_IMPORTED_MODULE_4__["zoom"]()
            .scaleExtent([this.min_zoom, this.max_zoom])
            .extent([[0, 0], [this.width, this.height]])
            .on("zoom", () => {
            this.g.attr("transform", "translate(" +
                d3__WEBPACK_IMPORTED_MODULE_4__["event"].transform.x +
                "," +
                d3__WEBPACK_IMPORTED_MODULE_4__["event"].transform.y +
                ") scale(" +
                d3__WEBPACK_IMPORTED_MODULE_4__["event"].transform.k +
                ")");
        });
        this.forceSimulation = d3__WEBPACK_IMPORTED_MODULE_4__["forceSimulation"]()
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_4__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_4__["forceManyBody"]().strength(-500))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_4__["forceX"](this.width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_4__["forceY"](this.height / 2));
        this.forceSimulation.nodes(this.nodes);
        this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_4__["forceLink"]().links(this.links).distance((d) => {
            let distance = 150;
            if (!d.connected) {
                distance = 250;
            }
            return distance;
        }).strength(0.1));
        this.forceSimulation.on("tick", () => {
            this.tick();
        });
        this.drag = d3__WEBPACK_IMPORTED_MODULE_4__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd);
        this.insertNodes();
        this.insertLinks();
        this.svgElement.call(this.zoom);
        this.svgElement.on("dblclick.zoom", null);
        this.forceSimulation.restart();
    }
    processLinks() {
        var nodelength = this.nodes.length;
        var nodedevicelength = this.devices.length;
        var linklength = this.links.length;
        for (var i = 0; i < nodelength; i++) {
            for (var j = 0; j < linklength; j++) {
                if (this.nodes[i].switch_id == this.links[j]["source"]["switch_id"] &&
                    this.nodes[i].switch_id == this.links[j]["target"]["switch_id"]) {
                    this.links[j].source = i;
                    this.links[j].target = i;
                }
                else {
                    if (this.nodes[i].switch_id == this.links[j]["source"]["switch_id"]) {
                        this.links[j].source = i;
                    }
                    else if (this.nodes[i].switch_id == this.links[j]["target"]["switch_id"]) {
                        this.links[j].target = i;
                    }
                }
            }
        }
    }
    insertLinks() {
        var ref = this;
        let graphLinksData = this.graphLinkGroup.selectAll("path.link").data(this.links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            return "link physical";
        })
            .attr("id", (d, index) => {
            return "link" + index;
        }).attr('stroke-width', (d) => { return 2.5; }).attr("stroke", function (d, index) {
            if (d.connected) {
                return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].MOVED;
            }
            return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].DISCOVERED;
        }).attr("cursor", "pointer");
        graphLinksData.exit().remove();
        this.graphLink = graphNewLink.merge(graphLinksData);
    }
    insertNodes() {
        let ref = this;
        let graphNodesData = this.graphNodeGroup.selectAll("g.node").data(this.nodes);
        let graphNodeElement = graphNodesData.enter().append("g").attr("class", "node").call(d3__WEBPACK_IMPORTED_MODULE_4__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd));
        graphNodesData.exit().remove();
        graphNodeElement.append("circle").
            attr("r", this.graphOptions.radius)
            .attr("class", function (d, index) {
            var classes = "circle blue hover";
            return classes;
        })
            .attr("id", function (d, index) {
            return "circle_" + d.index;
        }).style("cursor", "pointer");
        let text = graphNodeElement
            .append("text")
            .attr("dy", ".35em")
            .style("font-size", this.graphOptions.nominal_text_size + "px")
            .attr("class", "switchname");
        if (this.graphOptions.text_center) {
            text
                .text(function (d) {
                return d.name;
            })
                .style("text-anchor", "middle");
        }
        else {
            text
                .attr("dx", function (d) {
                return ref.size(d.size) || ref.graphOptions.nominal_base_node_size;
            })
                .text(function (d) {
                return d.name;
            });
        }
        let images = graphNodeElement.append("svg:image")
            .attr("xlink:href", function (d) {
            if (d.connected) {
                return _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].assetsPath + "/images/server-regular.svg";
            }
            return _environments_environment__WEBPACK_IMPORTED_MODULE_6__["environment"].assetsPath + "/images/switch.png";
        })
            .attr("x", function (d) {
            if (d.connected) {
                return -20;
            }
            return -29;
        })
            .attr("y", function (d) {
            if (d.connected) {
                return -20;
            }
            return -29;
        })
            .attr("height", function (d) {
            if (d.connected) {
                return 38;
            }
            return 58;
        })
            .attr("width", function (d) {
            if (d.connected) {
                return 38;
            }
            return 58;
        })
            .attr("id", function (d, index) {
            return "image_" + index;
        }).attr("cursor", "pointer").on('mouseover', function (d, index) {
            var element = document.getElementById("circle_" + index);
            var rec = element.getBoundingClientRect();
            if (d.connected) {
                $("#tooltip_connected_device").css("display", "block");
                $("#tooltip_connected_device").css("top", rec.y + "px");
                $("#tooltip_connected_device").css("left", (rec.x) + "px");
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#mac_address").html(d.mac_address);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#chassis_id").html(d.chassis_id);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#port_id").html(d.port_id);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#port_description").html(d.port_description);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#ttl").html(d.ttl);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#system_name").html(d.system_name);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#system_description").html(d.system_description);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#system_capabilities").html(d.system_capabilities);
                d3__WEBPACK_IMPORTED_MODULE_4__["select"]("#management_address").html(d.management_address);
                var bound = ref.horizontallyBound(document.getElementById("connectedGraphwrapper"), document.getElementById("tooltip_connected_device"));
                if (bound) {
                    $("#tooltip_connected_device").removeClass("left");
                }
                else {
                    var left = rec.x - (300 + 100);
                    $("#tooltip_connected_device").css("left", left + "px");
                    $("#tooltip_connected_device").addClass("left");
                }
            }
        }).on('mouseout', function (d, index) {
            $("#tooltip_connected_device").css("display", "none");
        });
        ;
        this.graphNode = graphNodeElement.merge(graphNodesData);
    }
    tick() {
        this.graphLink.attr("d", d => {
            var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy), drx = dr, dry = dr - 100, xRotation = 0, // degrees
            largeArc = 0, // 1 or 0
            sweep = 1; // 1 or 0
            var lTotalLinkNum = 2;
            if (lTotalLinkNum > 1) {
                dr = dr / (1 + (1 / lTotalLinkNum) * (d.index));
            }
            if (x1 === x2 && y1 === y2) {
                xRotation = -45;
                largeArc = 1;
                drx = 50;
                dry = 20;
                x2 = x2 + 1;
                y2 = y2 + 1;
            }
            return ("M" +
                d.source.x +
                "," +
                d.source.y +
                "L" +
                d.target.x +
                "," +
                d.target.y);
        });
        this.graphNode.attr("transform", function (d) {
            if (d.x && d.y) {
                return "translate(" + d.x + "," + d.y + ")";
            }
        });
    }
    ngOnChanges(change) {
    }
    ngAfterViewInit() { }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], ConnectedDevicesComponent.prototype, "flowId", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], ConnectedDevicesComponent.prototype, "connectedDevices", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], ConnectedDevicesComponent.prototype, "flowDetail", void 0);
ConnectedDevicesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-connected-devices',
        template: __webpack_require__(/*! ./connected-devices.component.html */ "./src/app/modules/flows/connected-devices/connected-devices.component.html"),
        styles: [__webpack_require__(/*! ./connected-devices.component.css */ "./src/app/modules/flows/connected-devices/connected-devices.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"]])
], ConnectedDevicesComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-add/flow-add.component.css":
/*!***************************************************************!*\
  !*** ./src/app/modules/flows/flow-add/flow-add.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy1hZGQvZmxvdy1hZGQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/flows/flow-add/flow-add.component.html":
/*!****************************************************************!*\
  !*** ./src/app/modules/flows/flow-add/flow-add.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form class=\"flow-card row\" id=\"flowAddForm\" novalidate (ngSubmit)=\"addFlow()\" [formGroup]=\"flowAddForm\">\r\n  <div class=\"col-lg-12\">\r\n    <div class=\"row mb-4\">\r\n      <div class=\"col-sm-12\">\r\n        <h6 class=\"card-title card-custom-title\">FLOW DETAILS</h6>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class=\"isl-source-details-div\">\r\n              <div class='form-group row flow_details' [ngClass]=\"{'error': f.flowname.errors && submitted}\">\r\n                <label class='col-sm-3 col-form-label required'>Flow Name:</label>\r\n                <div class='col-sm-4'>\r\n                  <input formControlName=\"flowname\" id=\"max_bandwidth\" class=\"form-control\" type=\"text\" />\r\n                  <div *ngIf=\"submitted && f.flowname.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.flowname.errors.required\">Flow name is required</div>\r\n                    <div *ngIf=\"f.flowname.errors.pattern\">Only Alphanumeric characters are allowed!</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details' >\r\n                <label class='col-sm-3 col-form-label'>Description:</label>\r\n                <div class=\"col-sm-4\">\r\n                  <textarea formControlName=\"description\" id=\"flow_description\" \r\n                    class=\"form-control\"></textarea>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details' [ngClass]=\"{'error': f.maximum_bandwidth.errors && submitted}\">\r\n                <label class='col-sm-3 col-form-label required'>Bandwidth:</label>\r\n                <div class=\"col-sm-4\">\r\n                  <input formControlName=\"maximum_bandwidth\" id=\"max_bandwidth\" class=\"form-control\" name=\"max_bandwidth\"\r\n                    type=\"number\" min=\"0\"  required />\r\n                  <div *ngIf=\"submitted && f.maximum_bandwidth.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.maximum_bandwidth.errors.required\">bandwidth is required</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div class='form-group row flow_details'>\r\n                <label class='col-sm-3 col-form-label'>Diverse Flow:</label>\r\n                <div class='col-sm-4'>\r\n                  <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select Diverse Flow\" formControlName=\"diverse_flowid\" [items]=\"diverseFlowList\" bindLabel=\"flowid\"     bindValue=\"flowid\"></ng-select>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details'>\r\n                <label class='col-sm-3 col-form-label'>Protected Path:</label>\r\n                <div class='col-sm-4'>\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input  formControlName=\"allocate_protected_path\" [checked]=\"allocate_protected_path\" type=\"checkbox\" (change)=\"setProtectedpath($event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffswitchsource\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                        <span class=\"onoffswitch-inner \"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details'>\r\n                <label class='col-sm-3 col-form-label'>Ignore Bandwidth:</label>\r\n                <div class='col-sm-4'>\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input  formControlName=\"ignore_bandwidth\" [checked]=\"ignore_bandwidth\" type=\"checkbox\"  name=\"ignore_bandwidth\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffignorebandwidth\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffignorebandwidth\">\r\n                        <span class=\"onoffswitch-inner \"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details'>\r\n                <label class='col-sm-3 col-form-label'>Pinned:</label>\r\n                <div class='col-sm-4'>\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input  formControlName=\"pinned\" [checked]=\"pinned\" type=\"checkbox\"  name=\"pinned\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffpinned\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffpinned\">\r\n                        <span class=\"onoffswitch-inner \"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class='form-group row flow_details'>\r\n                <label class='col-sm-3 col-form-label'>Periodic Pings:</label>\r\n                <div class='col-sm-4'>\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input  formControlName=\"periodic_pings\" [checked]=\"periodic_pings\" type=\"checkbox\"  name=\"periodic_pings\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffperiodicpings\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffperiodicpings\">\r\n                        <span class=\"onoffswitch-inner \"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Start : 2 Flow section-->\r\n    <div class=\"row  mb-4\">\r\n      <div class=\"col-sm-6\">\r\n        <h6 class=\"card-title card-custom-title\">SOURCE DETAILS</h6>\r\n        <div class=\"card\">\r\n\r\n          <div class=\"card-body\">\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Switch:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select [virtualScroll]=\"virtualScrollFlag\" searchable=\"true\" dropdownPosition=\"bottom\" placeholder=\"Select source switch\" formControlName=\"source_switch\" (change)=\"getPorts('source_switch')\" [items]=\"sourceSwitches\"\r\n                  bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                  <div *ngIf=\"submitted && f.source_switch.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.source_switch.errors.required\">Please select source switch</div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Port:</label>\r\n              <div class='col-sm-6'> \r\n                <ng-select [virtualScroll]=\"virtualScrollFlag\" searchable=\"true\" dropdownPosition=\"bottom\" placeholder=\"Select source port\" (change)=\"getVLAN('source_port')\" formControlName=\"source_port\" [items]=\"sourcePorts\" bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.source_port.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.source_port.errors.required\">Please select source port</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label'>Vlan:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select [virtualScroll]=\"virtualScrollFlag\" searchable=\"true\" dropdownPosition=\"bottom\" placeholder=\"Select source VLAN\" formControlName=\"source_vlan\" [items]=\"vlanPorts\" bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                 <div *ngIf=\"submitted && f.source_vlan.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.source_vlan.errors.required\">Please select source VLAN</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <h6 class=\"card-title card-custom-title\">DESTINATION DETAILS</h6>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Switch:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select destination switch\" formControlName=\"target_switch\" (change)=\"getPorts('target_switch')\" [items]=\"targetSwitches\"\r\n                  bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                  <div *ngIf=\"submitted && f.target_switch.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.target_switch.errors.required\">Please select destination switch</div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Port:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select [virtualScroll]=\"virtualScrollFlag\" searchable=\"true\" dropdownPosition=\"bottom\" placeholder=\"Select destination port\" (change)=\"getVLAN('target_port')\" formControlName=\"target_port\" [items]=\"targetPorts\" bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.target_port.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.target_port.errors.required\">Please select destination port</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label'>Vlan:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select [virtualScroll]=\"virtualScrollFlag\" searchable=\"true\" dropdownPosition=\"bottom\" placeholder=\"Select destination VLAN\" formControlName=\"target_vlan\" [items]=\"vlanPorts\" bindLabel=\"label\" bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.target_vlan.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.target_vlan.errors.required\">Please select destination VLAN</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ENd : 2 Flow sections-->\r\n    <div class='row'>\r\n      <div class=\"col-sm-12\">\r\n        <button class=\"btn btn-sm btn-dark\">Add</button>\r\n        &nbsp;\r\n        <button (click)=\"goToBack()\" type=\"button\" class=\"btn btn-sm btn-dark\">Cancel</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/modules/flows/flow-add/flow-add.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/modules/flows/flow-add/flow-add.component.ts ***!
  \**************************************************************/
/*! exports provided: FlowAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowAddComponent", function() { return FlowAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/alertify.service */ "./src/app/common/services/alertify.service.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");















let FlowAddComponent = class FlowAddComponent {
    constructor(formBuilder, flowService, toaster, switchService, switchIdMaskPipe, router, loaderService, alertService, _location, modalService, commonService, toastr) {
        this.formBuilder = formBuilder;
        this.flowService = flowService;
        this.toaster = toaster;
        this.switchService = switchService;
        this.switchIdMaskPipe = switchIdMaskPipe;
        this.router = router;
        this.loaderService = loaderService;
        this.alertService = alertService;
        this._location = _location;
        this.modalService = modalService;
        this.commonService = commonService;
        this.toastr = toastr;
        this.submitted = false;
        this.switches = [];
        this.sourceSwitches = [];
        this.targetSwitches = [];
        this.enableSearch = 1;
        this.sourcePorts = [];
        this.mainSourcePorts = [];
        this.targetPorts = [];
        this.mainTargetPorts = [];
        this.vlanPorts = [];
        this.diverseFlowList = [];
        this.virtualScrollFlag = true;
        if (!this.commonService.hasPermission('fw_flow_create')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_14__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.flowAddForm = this.formBuilder.group({
            flowname: [
                "",
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                    _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("[a-zA-Z0-9]*")
                ])
            ],
            description: [""],
            maximum_bandwidth: [
                "",
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]+")])
            ],
            source_switch: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            source_port: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            source_vlan: ["0"],
            target_switch: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            target_port: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            target_vlan: ["0"],
            diverse_flowid: [null],
            allocate_protected_path: [null],
            ignore_bandwidth: [null],
            pinned: [null],
            periodic_pings: [null],
        });
        this.vlanPorts = Array.from({ length: 4095 }, (v, k) => {
            return { label: k.toString(), value: k.toString() };
        });
        this.getflowList();
        this.getSwitchList();
    }
    /** getter to get form fields */
    get f() {
        return this.flowAddForm.controls;
    }
    getflowList() {
        let filtersOptions = { controller: true, _: new Date().getTime() };
        this.flowService.getFlowsList(filtersOptions).subscribe((data) => {
            this.diverseFlowList = data.filter((d) => {
                return d.status != 'DOWN';
            }) || [];
        }, error => {
            this.diverseFlowList = [];
        });
    }
    /** Get switches list via api call */
    getSwitchList() {
        this.loaderService.show("Loading Switches");
        let ref = this;
        this.switchService.getSwitchList().subscribe(response => {
            response.forEach(function (s) {
                ref.switches.push({ label: s.name + ' (' + (s.state.toLowerCase()) + ')', value: s.switch_id });
            });
            ref.targetSwitches = ref.switches;
            ref.sourceSwitches = ref.switches;
            this.loaderService.hide();
        }, error => {
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to fetch switch list';
            this.toaster.error(errorMsg, "Error");
            this.loaderService.hide();
        });
    }
    /** Fetch ports by switch id via api call */
    getPorts(switchType) {
        if (this.flowAddForm.controls[switchType].value) {
            let switchId = this.switchIdMaskPipe.transform(this.flowAddForm.controls[switchType].value, "legacy");
            if (switchType == "source_switch") {
                this.flowAddForm.controls["source_port"].setValue(null);
                this.flowAddForm.controls["source_vlan"].setValue("0");
            }
            else {
                this.flowAddForm.controls["target_port"].setValue(null);
                this.flowAddForm.controls["target_vlan"].setValue("0");
            }
            this.loaderService.show("Loading Ports");
            this.switchService.getSwitchPortsStats(switchId).subscribe(ports => {
                var filteredPorts = ports.filter(function (d) {
                    return d.assignmenttype != 'ISL';
                });
                let sortedPorts = filteredPorts.sort(function (a, b) {
                    return a.port_number - b.port_number;
                });
                sortedPorts = sortedPorts.map(portInfo => {
                    return { label: portInfo.port_number, value: portInfo.port_number };
                });
                if (switchType == "source_switch") {
                    this.sourcePorts = sortedPorts;
                    this.mainSourcePorts = sortedPorts;
                }
                else {
                    this.targetPorts = sortedPorts;
                    this.mainTargetPorts = sortedPorts;
                }
                if (sortedPorts.length == 0) {
                    this.toaster.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_14__["MessageObj"].no_ports, "Info");
                }
                this.loaderService.hide();
            }, error => {
                var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to get port information';
                this.toaster.error(errorMsg, "Error");
                this.loaderService.hide();
            });
        }
        else {
            if (switchType == "source_switch") {
                this.flowAddForm.controls["source_port"].setValue(null);
                this.flowAddForm.controls["source_vlan"].setValue("0");
            }
            else {
                this.flowAddForm.controls["target_port"].setValue(null);
                this.flowAddForm.controls["target_vlan"].setValue("0");
            }
        }
    }
    addFlow() {
        this.submitted = true;
        if (this.flowAddForm.invalid) {
            return;
        }
        var flowData = {
            source: {
                "switch-id": this.flowAddForm.controls["source_switch"].value,
                "port-id": this.flowAddForm.controls["source_port"].value,
                "vlan-id": this.flowAddForm.controls["source_vlan"].value
            },
            destination: {
                "switch-id": this.flowAddForm.controls["target_switch"].value,
                "port-id": this.flowAddForm.controls["target_port"].value,
                "vlan-id": this.flowAddForm.controls["target_vlan"].value
            },
            flowid: this.flowAddForm.controls["flowname"].value,
            "maximum-bandwidth": this.flowAddForm.controls["maximum_bandwidth"].value,
            description: this.flowAddForm.controls["description"].value,
            "diverse-flowid": this.flowAddForm.controls["diverse_flowid"].value || null,
            "allocate_protected_path": this.flowAddForm.controls["allocate_protected_path"].value || null,
            'ignore_bandwidth': this.flowAddForm.controls['ignore_bandwidth'].value || null,
            pinned: this.flowAddForm.controls['pinned'].value || null,
            "periodic-pings": this.flowAddForm.controls['periodic_pings'].value || null,
        };
        const modalReff = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_12__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to create a new flow ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show("Adding Flow");
                this.flowService.createFlow(flowData).subscribe(response => {
                    this.toaster.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_14__["MessageObj"].flow_created, "Success!");
                    localStorage.removeItem('flows');
                    localStorage.removeItem('filterFlag');
                    localStorage.removeItem('flowsinventory');
                    this.router.navigate(["/flows/details/" + response.flowid]);
                    this.loaderService.hide();
                }, error => {
                    if (error.error) {
                        var errorMsg = error && error.error && error.error['error-description'] ? error.error['error-description'] : (error && error.error && error.error['error-description']) ? error.error['error-auxiliary-message'] : "Unable to update";
                        this.toaster.error(errorMsg, "Error!");
                    }
                    else {
                        this.toaster.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_14__["MessageObj"].flow_not_created, "Error!");
                    }
                    this.loaderService.hide();
                });
            }
        });
    }
    setProtectedpath(e) {
        this.flowAddForm.controls['allocate_protected_path'].setValue(e.target.checked);
        this.allocate_protected_path = e.target.checked;
    }
    goToBack() {
        this._location.back();
    }
    getVLAN(type) {
        if (type == "source_port") {
            this.flowAddForm.controls["source_vlan"].setValue("0");
        }
        else {
            this.flowAddForm.controls["target_vlan"].setValue("0");
        }
    }
};
FlowAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-add",
        template: __webpack_require__(/*! ./flow-add.component.html */ "./src/app/modules/flows/flow-add/flow-add.component.html"),
        styles: [__webpack_require__(/*! ./flow-add.component.css */ "./src/app/modules/flows/flow-add/flow-add.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_3__["FlowsService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__["SwitchService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__["SwitchidmaskPipe"],
        _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_9__["LoaderService"],
        _common_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"],
        _angular_common__WEBPACK_IMPORTED_MODULE_10__["Location"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_11__["NgbModal"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_13__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
], FlowAddComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-contracts/flow-contracts.component.css":
/*!***************************************************************************!*\
  !*** ./src/app/modules/flows/flow-contracts/flow-contracts.component.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "table.dataTable i.fa{\r\n    float: right;\r\n    font-size: 12px;\r\n}\r\n\r\ntable.dataTable td{\r\n    position: relative;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    background-position: right 10px;\r\n    padding: 10px 20px 10px 18px;\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWNvbnRyYWN0cy9mbG93LWNvbnRyYWN0cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQiwrQkFBK0I7SUFDL0IsNEJBQTRCO0lBQzVCLGdCQUFnQjtJQUNoQixzQkFBc0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zsb3dzL2Zsb3ctY29udHJhY3RzL2Zsb3ctY29udHJhY3RzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5kYXRhVGFibGUgaS5mYXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRke1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDE4cHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/flows/flow-contracts/flow-contracts.component.html":
/*!****************************************************************************!*\
  !*** ./src/app/modules/flows/flow-contracts/flow-contracts.component.html ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n              <div class=\"form-group input-group-sm\">\r\n                   <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n               </div>\r\n          </div>\r\n       </div>\r\n   </div>\r\n  <div class=\"clear clearfix\"></div>\r\n</div>\r\n<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table datatable id=\"flow_contract_table\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr class=\"tableHeading\">\r\n        <th class=\"\">\r\n          <span title=\"Contract ID\">\r\n         ID\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedId')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedId\" id=\"expandedId\"/>\r\n        </th>\r\n        <th class=\"\" >\r\n          <span title=\"Status\">\r\n            Status\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedStatus')\"></i>\r\n            <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedStatus\" id=\"expandedStatus\"/>\r\n          \r\n        </th>\r\n        <th >\r\n          <span title=\"Bandwidth(Mbps)\">\r\n           Bandwidth(Mbps)\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBandwidth')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedBandwidth\"id=\"expandedBandwidth\"/>\r\n          \r\n        </th>\r\n        <th>\r\n            <span title=\"Start Date\">\r\n          Start\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedStart')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedStart\" id=\"expandedStart\"/>\r\n        \r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Expiry Date\">\r\n            Expiry\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedExpiry')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedExpiry\" id=\"expandedExpiry\"/>\r\n          \r\n        </th>\r\n        <th >\r\n          <span title=\"Renewal\">\r\n           Renewal\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedRenewal')\"></i>\r\n            <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedRenewal\" id=\"expandedRenewal\"/>\r\n          \r\n        </th>\r\n        <th >\r\n            <span title=\"Price\">\r\n          Price\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedPrice')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedPrice\" id=\"expandedPrice\"/>\r\n        \r\n        </th>\r\n        <th class=\"\"><span title=\"Action\">Action</span></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of data; let i = index\">\r\n        <td class=\"divTableCell\" title=\"{{row['contract-id'] || '-'}}\">{{row['contract-id'] || \"-\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row['status'] || '-'}}\">{{row['status'] || \"-\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row.bandwidth / 1000 || '-'}}\">{{row.bandwidth / 1000 || \"-\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row['start-time'] | date:'medium' || '-'}}\">{{row['start-time'] | date:'medium' || \"-\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row['end-time'] | date:'medium' || '-'}}\">{{row['end-time'] | date:'medium' || \"-\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row['renewal-option'] || 'N/A'}}\">{{row['renewal-option'] || \"N/A\"}}</td>\r\n        <td class=\"divTableCell\" title=\"{{row.currency +' '+ row.price || '-'}}\">{{row.currency +\" \"+ row.price || \"-\"}}</td>\r\n        <td class=\"divTableCell\"><a *ngIf=\"row.status == 'Active' || row.status == 'Deployed'\" class=\"pull-left\" (click)=\"deleteContract(row['contract-id'])\"><i  class=\"fa fa-trash \" ></i></a></td>\r\n      </tr>\r\n    </tbody>\r\n  </table>"

/***/ }),

/***/ "./src/app/modules/flows/flow-contracts/flow-contracts.component.ts":
/*!**************************************************************************!*\
  !*** ./src/app/modules/flows/flow-contracts/flow-contracts.component.ts ***!
  \**************************************************************************/
/*! exports provided: FlowContractsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowContractsComponent", function() { return FlowContractsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let FlowContractsComponent = class FlowContractsComponent {
    constructor(renderer, loaderService, flowService, modalService, toaster) {
        this.renderer = renderer;
        this.loaderService = loaderService;
        this.flowService = flowService;
        this.modalService = modalService;
        this.toaster = toaster;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.data = [];
        this.expandedId = false;
        this.expandedStatus = false;
        this.expandedBandwidth = false;
        this.expandedStart = false;
        this.expandedExpiry = false;
        this.expandedRenewal = false;
        this.expandedPrice = false;
        this.wrapperHide = false;
    }
    ngOnInit() {
        let ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            dom: 'tpl',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            language: {
                searchPlaceholder: "Search"
            }, drawCallback: function () {
                if (jQuery('#flow_contract_table tbody tr').length < 10) {
                    jQuery('#flow_contract_table_next').addClass('disabled');
                }
                else {
                    jQuery('#flow_contract_table_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '13%' },
                { sWidth: '9%' },
                { sWidth: '12%' },
                { sWidth: '15%' },
                { sWidth: '15%' },
                { sWidth: '13%' },
                { sWidth: '8%' },
                { sWidth: '10%', "bSortable": false },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    ngOnChanges(change) {
        if (change.data) {
            if (change.data.currentValue) {
                this.data = change.data.currentValue;
            }
        }
    }
    fulltextSearch(e) {
        var value = e.target.value;
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    deleteContract(contractid) {
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_7__["ModalconfirmationComponent"]);
        var self = this;
        modalReff.componentInstance.title = "Delete Contract";
        modalReff.componentInstance.content = 'Are you sure you want to perform delete action ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                self.loaderService.show('Deleting contract');
                this.flowService.deletecontract(this.flowId, contractid).subscribe((response) => {
                    self.loaderService.hide();
                    self.toaster.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].delete_contract);
                }, function (err) {
                    self.loaderService.hide();
                    var Err = err.error;
                    var msg = (Err && typeof (Err['error-auxiliary-message']) != 'undefined') ? Err['error-auxiliary-message'] : '';
                    self.toaster.error(msg, "Error");
                });
            }
        });
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], FlowContractsComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowContractsComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowContractsComponent.prototype, "flowId", void 0);
FlowContractsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow-contracts',
        template: __webpack_require__(/*! ./flow-contracts.component.html */ "./src/app/modules/flows/flow-contracts/flow-contracts.component.html"),
        styles: [__webpack_require__(/*! ./flow-contracts.component.css */ "./src/app/modules/flows/flow-contracts/flow-contracts.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_2__["LoaderService"], src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_5__["FlowsService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_6__["NgbModal"], ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrService"]])
], FlowContractsComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-datatables/flow-datatables.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/flows/flow-datatables/flow-datatables.component.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\nth.sorting:last-child {\r\n    background-image: none !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWRhdGF0YWJsZXMvZmxvdy1kYXRhdGFibGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zsb3dzL2Zsb3ctZGF0YXRhYmxlcy9mbG93LWRhdGF0YWJsZXMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhVGFibGUgdGZvb3Qge1xyXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgaS5mYXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZToxMnB4O1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy51cC1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTliMzY1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2I2NDU0NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0aCBzcGFuIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0ZCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIFxyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdHIgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRoLnNvcnRpbmc6bGFzdC1jaGlsZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lICFpbXBvcnRhbnQ7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/flows/flow-datatables/flow-datatables.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/modules/flows/flow-datatables/flow-datatables.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table id=\"flowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr class=\"tableHeading\">\r\n        <th>\r\n          <input [disabled]=\"!hasDownFLows\" type=\"checkbox\" [checked]=\"selectAll\" style=\"margin-left: 7px;\" class=\"large-checkbox\" (click)=\"selectAllFlows($event)\"  />\r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Flow ID\">\r\n         Flow ID\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedFlowId')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedFlowId\" id=\"expandedFlowId\"/>\r\n        </th>\r\n        <th class=\"\" >\r\n          <span title=\"Source Switch\">\r\n            Src Switch\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n            <input  value=\"{{ srcSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchName\" id=\"expandedSrcSwitchName\"/>\r\n          \r\n        </th>\r\n        <th> <span title=\"Source Switch\">Src Switch ID</span></th>\r\n        <th >\r\n          <span title=\"Source Port\">\r\n            Src Port\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchPort')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchPort\"id=\"expandedSrcSwitchPort\"/>\r\n          \r\n        </th>\r\n        <th>\r\n            <span title=\"Source VLAN\">\r\n          Src VLAN\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchVlan')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedSrcSwitchVlan\" id=\"expandedSrcSwitchVlan\"/>\r\n        \r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Destination Switch\">\r\n            Dst Switch\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchName')\"></i>\r\n            <input  value=\"{{ dstSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchName\" id=\"expandedTargetSwitchName\"/>\r\n          \r\n        </th>\r\n        <th > <span  title=\"Destination Switch\">Dst Switch ID</span></th>\r\n        <th >\r\n          <span title=\"Destination Port\">\r\n            Dst Port\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchPort')\"></i>\r\n            <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchPort\" id=\"expandedTargetSwitchPort\"/>\r\n          \r\n        </th>\r\n        <th >\r\n            <span title=\"Destination VLAN\">\r\n          Dst VLAN\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchVlan')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchVlan\" id=\"expandedTargetSwitchVlan\"/>\r\n        \r\n        \r\n        </th>\r\n        <th >\r\n            <span title=\"Bandwidth (Mbps)\">\r\n               Bandwidth (Mbps)\r\n              </span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBandwidth')\"></i>\r\n                <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedBandwidth\" id=\"expandedBandwidth\"/>\r\n              \r\n        </th>\r\n        <th >\r\n            <span title=\"State\">\r\n                Status\r\n           </span>\r\n             <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n             <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedState\" id=\"expandedState\"/>\r\n           \r\n        </th>\r\n       \r\n        <th >\r\n            <span title=\"Description\">\r\n                Description\r\n               </span>\r\n                 <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDescription')\"></i>\r\n                 <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedDescription\" id=\"expandedDescription\"/>\r\n               \r\n        </th>\r\n\r\n\r\n        <th >\r\n          <span title=\"Created\">\r\n              Created\r\n             </span>\r\n               <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedCreated')\"></i>\r\n               <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedCreated\" id=\"expandedCreated\"/>\r\n             \r\n       </th>\r\n\r\n       <!-- <th >\r\n        <span title=\"Updated\">\r\n          Updated\r\n           </span>\r\n             <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedUpdated')\"></i>\r\n             <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedUpdated\" id=\"expandedUpdated\"/>\r\n       </th> -->\r\n\r\n\r\n        <th >\r\n          <span title=\"type\">\r\n              type\r\n             </span>\r\n              \r\n        </th>        \r\n        <th class=\"\"><span title=\"Action\">Action</span></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of data; let i = index\"  class=\"flowDataRow\"   [class.down-state]=\"!(row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED')\" [class.up-state]=\"row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED'\" [class.down-status]=\"storeLinkSetting && row.hasOwnProperty('discrepancy') && ((row['discrepancy'].hasOwnProperty('bandwidth') && row['discrepancy']['bandwidth']) || (row['discrepancy'].hasOwnProperty('status') && row['discrepancy']['status']))\">\r\n        <td class=\"divTableCell\">\r\n          <input [disabled]=\"row.status == 'UP' || row.status == 'IN PROGRESS' || (storeLinkSetting  && row.state) \"  type=\"checkbox\" class=\"large-checkbox\" name=\"checkedFlow[row.flowid]\" [checked]=\"checkedFlow[row.flowid]\" (click) = \"toggleSelection(row)\" />\r\n        </td>\r\n        <td (click)=\"showFlow(row)\" class=\"divTableCell\" title=\"{{row.flowid }}\" [contextMenu]=\"copyFLow\"> \r\n          {{row.flowid || \"-\"}} \r\n          <context-menu #copyFLow>\r\n              <ng-template contextMenuItem (execute)=\"copyToClip($event,'flowid',i);\">\r\n                Copy to Clipboard\r\n              </ng-template>\r\n            </context-menu>\r\n         </td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.source_switch_name}}\" [contextMenu]=\"copySourceSwitch\">\r\n          {{row.source_switch_name || \"-\"}}\r\n          <context-menu #copySourceSwitch>\r\n              <ng-template contextMenuItem (execute)=\"copyToClip($event,'source_switch_name',i);\">\r\n                Copy to Clipboard\r\n              </ng-template>\r\n            </context-menu>\r\n        </td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.src_switch}}\">{{row.source_switch || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.src_port}}\">{{row.src_port || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\">{{row.src_vlan || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.target_switch_name}}\" [contextMenu]=\"copyTargetSwitch\">\r\n          {{row.target_switch_name || \"-\"}}\r\n          <context-menu #copyTargetSwitch>\r\n            <ng-template contextMenuItem (execute)=\"copyToClip($event,'target_switch_name',i);\">\r\n              Copy to Clipboard\r\n            </ng-template>\r\n          </context-menu>\r\n        </td>\r\n         <td (click)=\"showFlow(row)\" title=\"{{row.target_switch}}\">{{row.target_switch || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\">{{row.dst_port || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\">{{row.dst_vlan || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" >{{row.maximum_bandwidth / 1000  || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.status || row.state ||  '-'}}\">{{ row.status || row.state ||  \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.description}}\">{{row.description || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row['created'] | date:'yyyy/MM/dd H:mm:s'}}\">{{row['created'] | date:'yyyy/MM/dd H:mm:s'}}</td>\r\n        <!-- <td>{{row['last-updated']}}</td> -->\r\n        <td (click)=\"showFlow(row)\">{{ descrepancyString(row) }}</td>\r\n        <td >\r\n          <a class=\"pull-left\" title=\"Edit Flow\" *ngIf=\"commonService.hasPermission('fw_flow_update') && (!storeLinkSetting || (row.hasOwnProperty('controller-flow')  && row['controller-flow'] ) ||  (storeLinkSetting && row.hasOwnProperty('discrepancy') && row['discrepancy'].hasOwnProperty('controller-discrepancy') && !row['discrepancy']['controller-discrepancy']))\" [routerLink]=\"['/flows/edit',row.flowid]\"><i class=\"fa fa-edit\"></i></a></td>\r\n        \r\n        \r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  "

/***/ }),

/***/ "./src/app/modules/flows/flow-datatables/flow-datatables.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/modules/flows/flow-datatables/flow-datatables.component.ts ***!
  \****************************************************************************/
/*! exports provided: FlowDatatablesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDatatablesComponent", function() { return FlowDatatablesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var src_app_common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/components/flow-re-route-modal/flow-re-route-modal.component */ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");













let FlowDatatablesComponent = class FlowDatatablesComponent {
    constructor(loaderService, renderer, router, commonService, flowService, clipboardService, modalService, formBuilder) {
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.router = router;
        this.commonService = commonService;
        this.flowService = flowService;
        this.clipboardService = clipboardService;
        this.modalService = modalService;
        this.formBuilder = formBuilder;
        this.data = [];
        this.refresh = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.enableReroute = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.typeFilter = '';
        this.dtOptions = {};
        this.reRouteFlowIndex = {};
        this.reRouteList = [];
        this.checkedFlow = [];
        this.selectAll = false;
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.wrapperHide = true;
        this.expandedSrcSwitchName = false;
        this.expandedSrcSwitchPort = false;
        this.expandedSrcSwitchVlan = false;
        this.expandedTargetSwitchName = false;
        this.expandedTargetSwitchPort = false;
        this.expandedTargetSwitchVlan = false;
        this.expandedBandwidth = false;
        this.expandedFlowId = false;
        this.expandedState = false;
        this.expandedStatus = false;
        this.expandedDescription = false;
        this.expandedCreated = false;
        this.storeLinkSetting = false;
        this.loadFilter = false;
        this.hasDownFLows = false;
        this.activeStatus = '';
        this.clipBoardItems = [];
        this.wrapperHide = false;
        let storeSetting = localStorage.getItem("haslinkStoreSetting") || false;
        this.storeLinkSetting = storeSetting && storeSetting == "1" ? true : false;
    }
    ngOnInit() {
        let ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            "order": [],
            language: {
                searchPlaceholder: "Search"
            },
            buttons: {
                buttons: [
                    { extend: 'csv', text: 'Export', className: 'btn btn-dark' }
                ]
            },
            drawCallback: function () {
                if (jQuery('#flowDataTable tbody tr').length < 10) {
                    jQuery('#flowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#flowDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '7%', "bSortable": false },
                { sWidth: '15%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '1%', "bSortable": false },
                { sWidth: '10%', "bSortable": false },
            ],
            columnDefs: [
                {
                    "targets": [0],
                    "visible": ref.commonService.hasPermission('fw_permission_reroute'),
                    "searchable": false
                },
                {
                    "targets": [3],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [7],
                    "visible": false,
                    "searchable": true
                },
                { "targets": [14], "visible": false },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    ngOnChanges(change) {
        var ref = this;
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
                this.data.forEach(function (d) {
                    if (d.status == 'DOWN' || d.status == 'DEGRADED') {
                        ref.hasDownFLows = true;
                        ref.checkedFlow[d.flowid] = false;
                    }
                });
                this.clipBoardItems = this.data;
            }
        }
        if (typeof (change.textSearch) !== 'undefined' && change.textSearch.currentValue) {
            this.fulltextSearch(change.textSearch.currentValue);
        }
        if (typeof (change.srcSwitch) !== 'undefined' && change.srcSwitch.currentValue) {
            this.expandedSrcSwitchName = true;
        }
        else {
            this.expandedSrcSwitchName = false;
        }
        if (typeof (change.dstSwitch) != 'undefined' && change.dstSwitch.currentValue) {
            this.expandedTargetSwitchName = true;
        }
        else {
            this.expandedTargetSwitchName = false;
        }
        this.triggerSearch();
    }
    loadFilters() {
        this.loadFilter = !this.loadFilter;
    }
    fulltextSearch(value) {
        if (this.dtTrigger)
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.search(value)
                    .draw();
            });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input[type="search"]', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    triggerSearch() {
        setTimeout(() => {
            jQuery('#expandedSrcSwitchName').trigger('change');
            jQuery('#expandedTargetSwitchName').trigger('change');
        }, 1000);
    }
    showFlow(flowObj) {
        localStorage.setItem("filterFlag", this.filterFlag);
        this.router.navigate(['/flows/details/' + flowObj.flowid]);
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    descrepancyString(row) {
        let text = [];
        if (row.hasOwnProperty('controller-flow')) {
            if (row['controller-flow']) {
                text.push("controller:true");
            }
            else {
                text.push("controller:false");
            }
        }
        else {
            text.push("controller:false");
        }
        if (row.hasOwnProperty('inventory-flow')) {
            if (row['inventory-flow']) {
                text.push("inventory:true");
            }
            else {
                text.push("inventory:false");
            }
        }
        else {
            text.push("inventory:false");
        }
        return text.join(", ");
    }
    copyToClip(event, copyItem, index) {
        var copyItem = this.clipBoardItems[index][copyItem];
        this.clipboardService.copyFromContent(copyItem);
    }
    /*    Re-routing down flows ***/
    loadFlowReRouteModal() {
        const modelRef = this.modalService.open(src_app_common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_9__["FlowReRouteModalComponent"], { size: 'lg', windowClass: 'modal-isl slideInUp', backdrop: 'static', keyboard: false });
        modelRef.componentInstance.title = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].re_routing_flows;
        modelRef.componentInstance.reRouteIndex = this.reRouteFlowIndex;
        modelRef.componentInstance.responseData = this.reRouteList;
        modelRef.result.then(() => {
            this.refreshList();
        });
    }
    refreshList() {
        this.refresh.emit();
    }
    enableRerouteFlow(flag) {
        this.enableReroute.emit({ flag: flag });
    }
    selectAllFlows(e) {
        this.selectAll = !this.selectAll;
        if (this.checkedFlow && Object.keys(this.checkedFlow).length) {
            Object.keys(this.checkedFlow).forEach((k, i) => { this.checkedFlow[k] = this.selectAll; });
        }
        this.enableRerouteFlow(this.selectAll);
    }
    toggleSelection(flow) {
        var re_routeFlag = false;
        this.checkedFlow[flow.flowid] = !this.checkedFlow[flow.flowid];
        if (this.checkedFlow && Object.keys(this.checkedFlow).length) {
            var selectAll = true;
            Object.keys(this.checkedFlow).forEach((k, i) => {
                if (!this.checkedFlow[k]) {
                    selectAll = false;
                    return false;
                }
                else {
                    re_routeFlag = true;
                }
            });
            this.selectAll = selectAll;
        }
        this.enableRerouteFlow(re_routeFlag);
    }
    reRouteFlows() {
        this.reRouteFlowIndex = {};
        let selectedFlows = [];
        Object.keys(this.checkedFlow).forEach((k, i) => {
            if (this.checkedFlow[k]) {
                selectedFlows.push(k);
            }
        });
        if (selectedFlows && selectedFlows.length) {
            this.loadFlowReRouteModal();
            var flowID = selectedFlows.pop();
            this.reRouteFlowIndex[flowID] = { type: 'info' };
            this.reRouteFlow(flowID, selectedFlows);
        }
    }
    reRouteFlow(flowID, flowList) {
        var self = this;
        if (flowID) {
            this.reRouteList.push(flowID);
            this.reRouteFlowIndex[flowID]['progress'] = 10;
            this.reRouteFlowIndex[flowID]['interval'] = setInterval(() => {
                if (this.reRouteFlowIndex[flowID]['progress'] <= 90) {
                    this.reRouteFlowIndex[flowID]['progress'] = this.reRouteFlowIndex[flowID]['progress'] + 10;
                }
            }, 300);
            this.flowService.getReRoutedPath(flowID).subscribe(function (data) {
                if (data && typeof (data.rerouted) !== 'undefined' && data.rerouted) {
                    clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                    self.reRouteFlowIndex[flowID]['type'] = 'success';
                    self.reRouteFlowIndex[flowID]['progress'] = 100;
                    self.reRouteFlowIndex[flowID]['message'] = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].flow_rerouted;
                }
                else {
                    clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                    self.reRouteFlowIndex[flowID]['type'] = 'success';
                    self.reRouteFlowIndex[flowID]['progress'] = 100;
                    self.reRouteFlowIndex[flowID]['message'] = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].flow_on_best_route;
                }
                if (flowList && flowList.length) {
                    var flow_id = flowList.pop();
                    self.reRouteFlowIndex[flow_id] = { type: 'info' };
                    self.reRouteFlow(flow_id, flowList);
                }
                else {
                    return;
                }
            }, function (error) {
                clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                self.reRouteFlowIndex[flowID]['type'] = 'danger';
                self.reRouteFlowIndex[flowID]['progress'] = 100;
                self.reRouteFlowIndex[flowID]['message'] = error.error["error-auxiliary-message"];
                self.reRouteFlowIndex[flowID]['description'] = error.error["error-description"];
                if (flowList && flowList.length) {
                    var flow_id = flowList.pop();
                    self.reRouteFlowIndex[flow_id] = { type: 'info' };
                    self.reRouteFlow(flow_id, flowList);
                }
                else {
                    return;
                }
            });
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"])
], FlowDatatablesComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowDatatablesComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowDatatablesComponent.prototype, "srcSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowDatatablesComponent.prototype, "dstSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowDatatablesComponent.prototype, "filterFlag", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowDatatablesComponent.prototype, "textSearch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowDatatablesComponent.prototype, "refresh", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowDatatablesComponent.prototype, "enableReroute", void 0);
FlowDatatablesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow-datatables',
        template: __webpack_require__(/*! ./flow-datatables.component.html */ "./src/app/modules/flows/flow-datatables/flow-datatables.component.html"),
        styles: [__webpack_require__(/*! ./flow-datatables.component.css */ "./src/app/modules/flows/flow-datatables/flow-datatables.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"],
        src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_11__["FlowsService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__["ClipboardService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_10__["NgbModal"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"]])
], FlowDatatablesComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-detail/flow-detail.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/modules/flows/flow-detail/flow-detail.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".clip-board-wrapper{\r\n    position: relative;\r\n}\r\n\r\n.clip-board-button{\r\n    position: absolute;\r\n    background: #9d9191cf;\r\n    outline: none;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    display: none;\r\n}\r\n\r\n.popover{\r\n    background: #3e3b3b !important;\r\n}\r\n\r\n.popover-body {\r\n    color: #fff !important;\r\n}\r\n\r\n.bs-popover-auto[x-placement^=top] .arrow::after, .bs-popover-top .arrow::after {\r\n    border-top-color: #3e3b3b !important;\r\n}\r\n\r\n.flow-title{\r\n    font-size: 16px;\r\n}\r\n\r\n.onoffswitch-checkbox {\r\n    visibility: hidden;\r\n    overflow: hidden;\r\n    float: left;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWRldGFpbC9mbG93LWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixhQUFhO0lBQ2IsV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFDQTtJQUNJLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLG9DQUFvQztBQUN4Qzs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBR0E7SUFDSSxrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy1kZXRhaWwvZmxvdy1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jbGlwLWJvYXJkLXdyYXBwZXJ7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5jbGlwLWJvYXJkLWJ1dHRvbntcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJhY2tncm91bmQ6ICM5ZDkxOTFjZjtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnBvcG92ZXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiAjM2UzYjNiICFpbXBvcnRhbnQ7XHJcbn1cclxuLnBvcG92ZXItYm9keSB7XHJcbiAgICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uYnMtcG9wb3Zlci1hdXRvW3gtcGxhY2VtZW50Xj10b3BdIC5hcnJvdzo6YWZ0ZXIsIC5icy1wb3BvdmVyLXRvcCAuYXJyb3c6OmFmdGVyIHtcclxuICAgIGJvcmRlci10b3AtY29sb3I6ICMzZTNiM2IgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmZsb3ctdGl0bGV7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcblxyXG4ub25vZmZzd2l0Y2gtY2hlY2tib3gge1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/flows/flow-detail/flow-detail.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/modules/flows/flow-detail/flow-detail.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"flow_detail_div\" *ngIf=\"flowDetail\">\r\n  <!-- Start : Flow Top Section-->\r\n\r\n  <div class=\"row mb-3\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"\">\r\n            <div class=\"col-sm-3 pull-right flow-search-container\">\r\n                <app-flow-search></app-flow-search>\r\n            </div>\r\n            <div class=\"clear clearfix\"></div>\r\n        </div>\r\n      <p class=\"text-center flow-title\" >Flow ID : <span [contextMenu]=\"copyFLow\">{{flowDetail.flowid}}</span>\r\n      <a *ngIf=\"commonService.hasPermission('fw_flow_update') && (!storeLinkSetting || controllerFilter || (storeLinkSetting && flowDetail.hasOwnProperty('discrepancy') && flowDetail['discrepancy'].hasOwnProperty('controller-discrepancy') && !flowDetail['discrepancy']['controller-discrepancy']))\" class=\"btn btn-dark btn-sm pull-right\" role=\"button\" aria-pressed=\"true\" [routerLink]=\"['/flows/edit',flowDetail.flowid]\">Edit</a>\r\n      </p>     \r\n      </div>\r\n    </div>\r\n  <!-- End : Flow Top Section-->\r\n  <!-- Start : 2 Flow section-->\r\n  <div class=\"row  mb-4\">\r\n    <div class=\"col-sm-6\">\r\n      <h6 class=\"card-title card-custom-title\">SOURCE DETAILS</h6>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <ul class=\"list-group list-group-no-border\">\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Port:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"src_port\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Switch Id:</div>\r\n                <div class=\"col-sm-4\" [contextMenu]=\"copySrcSwitch\">{{ flowDetail[\"source_switch\"] }}</div>\r\n                <div class=\"col-sm-4\">\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input  [(ngModel)]=\"sourceCheckedValue\" type=\"checkbox\" (change)=\"maskSwitchId('source',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffswitchsource\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                        <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Name:</div>\r\n                <div class=\"col-sm-4\" [contextMenu]=\"copySrcSwitchName\">{{ flowDetail[\"source_switch_name\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Vlan:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"src_vlan\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Connected Devices:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"src_lldp\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <h6 class=\"card-title card-custom-title\">DESTINATION DETAILS</h6>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <ul class=\"list-group list-group-no-border\">\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Port:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"dst_port\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Switch Id:</div>\r\n                <div class=\"col-sm-4\" [contextMenu]=\"copyTrgSwitch\">{{ flowDetail[\"target_switch\"] }}</div>\r\n                <div class=\"col-sm-4\">\r\n                  <div class=\"pull-left\">\r\n                    <div class=\"onoffswitch\">\r\n                      <input type=\"checkbox\" [(ngModel)]=\"targetCheckedValue\"  (change)=\"maskSwitchId('target',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                        id=\"onoffswitchdestination\">\r\n                      <label class=\"onoffswitch-label\" for=\"onoffswitchdestination\">\r\n                        <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                        <span class=\"onoffswitch-switch\"></span>\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Name:</div>\r\n                <div class=\"col-sm-4\" [contextMenu]=\"copyTrgSwitchName\">{{ flowDetail[\"target_switch_name\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Vlan:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"dst_vlan\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n            <li class=\"list-group-item\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">Connected Devices:</div>\r\n                <div class=\"col-sm-4\">{{ flowDetail[\"dst_lldp\"] }}</div>\r\n                <div class=\"col-sm-4\"></div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- ENd : 2 Flow sections-->\r\n  <!-- Start : Switch Section-->\r\n  <div class=\"row mb-3\">\r\n    <div class=\"col-md-12\">\r\n      <h6 class=\"card-title card-custom-title\">FLOW DETAILS</h6>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n              <div class=\"col-sm-6\">\r\n                <ul class=\"list-group list-group-no-border\">\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Status:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail.status || \"-\" }}\r\n                         &nbsp; <i title=\"Flow doesn't exist in the controller\" *ngIf=\"storeLinkSetting &&  statusDescrepancy && (descrepancyData.status.controller =='-' && descrepancyData.status.inventory == 'Active')\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n                         <i title=\"Flow doesn't exist in the inventory\" *ngIf=\"storeLinkSetting &&  statusDescrepancy && (descrepancyData.status.inventory == '-')\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\" *ngIf=\"flowDetail.status && (flowDetail.status =='DOWN' || flowDetail.status =='DEGRADED')\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Status Info:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail.status_info || \"-\" }} </div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Description:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail.description }}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Bandwidth(Mbps):</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"maximum_bandwidth\"] / 1000 }}\r\n                          &nbsp;<i *ngIf=\"storeLinkSetting && bandWidthDescrepancy\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n                      </div>\r\n                    </div>\r\n                  </li>        \r\n                  <li class=\"list-group-item \">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Protected Path:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"allocate_protected_path\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Ignore Bandwidth:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"ignore_bandwidth\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n      \r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Created:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"created\"] | date:'yyyy/MM/dd H:mm:s'}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Last Updated:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"last-updated\"] | date:'yyyy/MM/dd H:mm:s'}}</div>\r\n                    </div>\r\n                  </li>                  \r\n                </ul>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <ul class=\"list-group list-group-no-border\">\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Src Inner Vlan:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"src_inner_vlan\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Dst Inner Vlan:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"dst_inner_vlan\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Pinned:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"pinned\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Encapsulation Type:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"encapsulation-type\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Path Computation Strategy:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"path-computation-strategy\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                  <li class=\"list-group-item\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-sm-4\">Periodic Pings:</div>\r\n                      <div class=\"col-sm-8\">{{ flowDetail[\"periodic-pings\"]}}</div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- End : Switch Section -->\r\n\r\n  <!-- Start : Swith Tab Section -->\r\n  <div>\r\n    <div class=\"row\">\r\n      <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n        <ul class=\"nav nav-pills\">\r\n          <li [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('graph');\">Graph</a>\r\n          </li>\r\n          <li [ngClass]=\"{'active': openedTab == 'path'}\" *ngIf=\"(storeLinkSetting  && flowDetail.status)  || !(storeLinkSetting)\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('path');\">Path</a>\r\n          </li>\r\n          <li *ngIf=\"commonService.hasPermission('fw_permission_validate') && ((storeLinkSetting  && flowDetail.status)  || !(storeLinkSetting))\" [ngClass]=\"{'active': openedTab == 'validate'}\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('validate');\">Validate</a>\r\n          </li>\r\n          <li *ngIf=\"storeLinkSetting && flowDetail.hasOwnProperty('inventory-flow') && flowDetail['inventory-flow'] && commonService.hasPermission('fw_flow_contract') && commonService.hasPermission('fw_flow_inventory')\" [ngClass]=\"{'active': openedTab == 'contracts'}\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('contracts');\">Contract</a>\r\n          </li>\r\n          <li *ngIf=\"storeLinkSetting && (bandWidthDescrepancy || statusDescrepancy)\" [ngClass]=\"{'active': openedTab == 'descrepancy'}\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('descrepancy');\">Discrepancy</a>\r\n          </li>\r\n          <li  [ngClass]=\"{'active': openedTab == 'ping'}\"  *ngIf=\"commonService.hasPermission('fw_flow_ping') && ((storeLinkSetting  && flowDetail.status)  || !(storeLinkSetting))\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('ping');\">Ping</a>\r\n          </li>\r\n          <li  *ngIf=\"commonService.hasPermission('fw_flow_history') && ((storeLinkSetting  && flowDetail.status)  || !(storeLinkSetting))\" [ngClass]=\"{'active': openedTab == 'history'}\" >\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('history');\">Flow History</a>\r\n          <li  [ngClass]=\"{'active': openedTab == 'connected'}\" *ngIf=\"hasConnectedDevices\">\r\n            <a href=\"javascript:void(0);\" (click)=\"openTab('connected');\">Connected Devices</a>\r\n          </li>\r\n        </ul>\r\n        <div class=\"tab-content padding-15 clearfix\">\r\n          <div class=\"tab-pane\" *ngIf=\"openedTab == 'graph'\" [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n            <app-flow-graph *ngIf=\"openedTab == 'graph' && loadStatsGraph\" [flowId]=\"flowDetail.flowid\"></app-flow-graph>\r\n          </div>\r\n          <div class=\"tab-pane\" *ngIf=\"openedTab == 'path'\" [ngClass]=\"{'active': openedTab == 'path'}\">\r\n            <div class=\"text-right mb-2\">\r\n              <button *ngIf=\"commonService.hasPermission('fw_permission_reroute')\" class=\"btn btn-dark btn-sm\" (click)=\"reRouteFlow()\">Re-route\r\n                Flow</button>\r\n            </div>\r\n            <app-flow-path *ngIf=\"!reRoutingInProgress\"  [flowId]=\"flowDetail.flowid\"></app-flow-path>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'validate'}\">\r\n            <div class=\"text-right mb-2\">\r\n               <button *ngIf=\"commonService.hasPermission('fw_flow_resync')\" class=\"btn btn-dark btn-sm\" (click)=\"resyncFlow()\">Resync\r\n                Flow</button>&nbsp;\r\n              <button *ngIf=\"commonService.hasPermission('fw_permission_validate')\" class=\"btn btn-dark btn-sm\" (click)=\"validateFlow()\">Validate\r\n                Flow</button>\r\n            </div>\r\n            <div *ngIf=\"loading\" class=\"component-loader\"></div>\r\n            <div *ngIf=\"flowIs =='validate' && !loading\" class=\"clip-board-wrapper\">\r\n              <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <label class=\"response_flow_label\">Validate Flow</label>\r\n                <button class=\"btn btn-secondary btn-no-radius pull-right btn-custom-margin\" (click)=\"clearValidatedFlow()\">Clear</button>\r\n                <div class=\"clear clearfix\"></div>\r\n              </div>\r\n            </div>           \r\n            <pre [contextMenu]=\"copyValidateFlow\" class=\"code validateFlow\" *ngIf=\"validatedFlow\">{{validatedFlow | json}}</pre>\r\n          </div>\r\n          <div *ngIf=\"flowIs =='resync' && !loading\" class=\"clip-board-wrapper\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                <label class=\"response_flow_label\">Resync Flow</label>\r\n                <button class=\"btn btn-secondary btn-no-radius pull-right btn-custom-margin\" (click)=\"clearResyncedFlow()\">Clear</button>\r\n                <div class=\"clear clearfix\"></div>\r\n              </div>\r\n            </div>\r\n           \r\n            <pre [contextMenu]=\"copyResyncFlow\" class=\"code resyncFlow\" *ngIf=\"resyncedFlow\">{{resyncedFlow | json}}</pre>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'contracts'}\">\r\n            <app-flow-contracts *ngIf=\"openedTab == 'contracts' && isLoadedcontract\" [data]=\"contracts\" [flowId]=\"flowDetail.flowid\" ></app-flow-contracts>\r\n        </div>\r\n        <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'descrepancy'}\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"row-border hover dataTable no-footer\">\r\n                <thead class=\"thead-light\"><tr class=\"tableHeading\"><th>Discrepancy</th><th>Kilda Controller</th><th>Link Store</th></tr></thead>\r\n              <tbody>\r\n                <tr *ngIf=\"statusDescrepancy\" >\r\n                  <td class=\"divTableCell\">Status</td>\r\n                  <td class=\"divTableCell\">{{ descrepancyData.status.controller}}</td>\r\n                  <td class=\"divTableCell\">{{ descrepancyData.status.inventory}}</td>\r\n                </tr>\r\n                <tr *ngIf=\"bandWidthDescrepancy\">\r\n                  <td class=\"divTableCell\">Bandwidth(Kbps)</td>\r\n                  <td class=\"divTableCell\">{{ descrepancyData.bandwidth.controller}}</td>\r\n                  <td class=\"divTableCell\">{{ descrepancyData.bandwidth.inventory}}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'ping'}\">\r\n          <div class=\"row\">\r\n              <div class=\"col-sm-12 mb-2\">\r\n                  <button  class=\" pull-right btn btn-dark btn-sm\" (click)=\"pingFlow()\">Ping Flow</button>\r\n                  <div  *ngIf=\"pingedFlow && pingedFlow['forward']\">\r\n                      <input type=\"hidden\" class=\"on-off-switch\" value=\"0\" style=\"display: none;\">\r\n                      <div class=\"pull-right\" style=\"margin-right:10px; margin-top:8px;\">\r\n                        <div class=\"onoffswitch onoffflow-ping\">\r\n                          <input type=\"checkbox\" (change)=\"toggleGraphView($event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffflowping\">\r\n                          <label class=\"onoffswitch-label\" for=\"onoffflowping\">\r\n                            <span class=\"onoffswitch-inner onoffswitch-inner-kilda-flow-ping\"></span>\r\n                            <span class=\"onoffswitch-switch onoffswitch-flow-ping\"></span>\r\n                          </label>\r\n                        </div>\r\n                      </div>\r\n                    </div>                     \r\n              </div>\r\n              <div class=\"col-sm-12\">\r\n                  <div *ngIf=\"Rawview\">\r\n                      <div *ngIf=\"loadingPing\" class=\"ping-component-loader\"></div>\r\n                      <pre  *ngIf=\"!pingedFlow\" class=\"code\"  style=\"height: 250px;\"></pre>\r\n                      <pre  [contextMenu]=\"copyPingFlow\" *ngIf=\"pingedFlow\" class=\"code\"  style=\"height: 250px;\">{{pingedFlow | json}}</pre>\r\n                  </div>\r\n                 \r\n                  <div  [hidden]=\"!GraphicalView\" id=\"pingGraphwrapper\" class=\"topology-container\">\r\n                      <svg id=\"pingGraph\" width=\"1000\" height=\"250\"></svg>\r\n                  </div>\r\n              </div>          \r\n       </div>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'history'}\">\r\n          <div class=\"row\">\r\n            <div class=\"form-group  col-md-3 offset-4\">\r\n              <label>From: </label> &nbsp;\r\n              <input datetime-picker [value]=\"fromDate\" placeholder=\"Date Time:\" (change)=\"changeDate('fromDate',$event)\">\r\n            </div>\r\n            <div class=\"form-group  col-md-3\">\r\n              <label>To: </label> &nbsp;\r\n              <input datetime-picker [value]=\"toDate\" (change)=\"changeDate('toDate',$event)\" placeholder=\"Date Time:\">\r\n            </div>\r\n            <div class=\"text-right col-md-2 mb-2\">\r\n              <button  class=\"btn btn-dark btn-sm\" (click)=\"getFlowHistory()\">Refresh</button>\r\n            </div>\r\n          </div>\r\n        \r\n          <div *ngIf=\"loading\" class=\"component-loader\"></div>\r\n          <div *ngIf=\"flowIs =='history' && !loading\" class=\"clip-board-wrapper\">\r\n            <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <label class=\"response_flow_label\">Flow History</label>\r\n              <button class=\"btn btn-secondary btn-no-radius pull-right btn-custom-margin\" (click)=\"clearFlowHistory()\">Clear</button>\r\n              <div class=\"clear clearfix\"></div>\r\n            </div>\r\n          </div>        \r\n          <pre [contextMenu]=\"copyflowHistory\" class=\"code validateFlow\" *ngIf=\"flowHistory\">{{flowHistory | json}}</pre>\r\n        </div>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'connected'}\">\r\n        <app-connected-devices *ngIf=\"openedTab == 'connected'\" [flowDetail]=\"flowDetail\" [connectedDevices]=\"hasConnectedDevices\" [flowId]=\"flowDetail.flowid\" ></app-connected-devices>\r\n     </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End : Switch Tab Section -->\r\n</div>\r\n\r\n<div id=\"ping-hover-txt\" style=\"display: none; top: 339.089px; left: 596.811px;\" class=\"\">\r\n   <div class=\"form-wrapper\" id=\"forward_ping_errors\" style=\"display: none;\"></div>\r\n   <div class=\"form-wrapper\" id=\"reverse_ping_errors\" style=\"display: none;\"></div>\r\n    <div class=\"form-wrapper\" id=\"switch_hover\" style=\"display: none;\">\r\n\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Name:</label>\r\n          <p class=\"col-sm-9 switchdetails_div_switch_name\"></p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">SwitchId:</label>\r\n          <p class=\"col-sm-9 switchdetails_div_switchid\"></p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Port:</label>\r\n          <p class=\"col-sm-9 switchdetails_div_port\"></p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">VLAN:</label>\r\n          <p class=\"col-sm-9 switchdetails_div_vlan\"></p>\r\n        </div>\r\n       </div>\r\n\r\n</div>\r\n\r\n<div id=\"diversepath-hover-txt\" style=\"display: none; top: 339.089px; left: 596.811px;width:auto;\" class=\"\">\r\n  <div class=\"form-wrapper\" id=\"forward_flow_value\" style=\"display: none;\"></div>\r\n  <div class=\"form-wrapper\" id=\"reverse_flow_value\" style=\"display: none;\"></div>\r\n</div>\r\n\r\n<context-menu #copySrcSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyPingFlow>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'pingedFlow');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyTrgSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'targetSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copySrcSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyTrgSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'targetSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyFLow>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'flowName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyValidateFlow>\r\n  <ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'validateFlow');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyResyncFlow>\r\n  <ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'resyncFlow');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyPingedFlow>\r\n    <ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'pingedFlow');\">\r\n      Copy to Clipboard\r\n    </ng-template>\r\n  </context-menu>\r\n\r\n  <context-menu #copyflowHistory>\r\n    <ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'flowHistory');\">\r\n      Copy to Clipboard\r\n    </ng-template>\r\n  </context-menu>"

/***/ }),

/***/ "./src/app/modules/flows/flow-detail/flow-detail.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/flows/flow-detail/flow-detail.component.ts ***!
  \********************************************************************/
/*! exports provided: FlowDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDetailComponent", function() { return FlowDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/enums/isl.enum */ "./src/app/common/enums/isl.enum.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
















let FlowDetailComponent = class FlowDetailComponent {
    constructor(flowService, router, route, toaster, maskPipe, loaderService, clipboardService, titleService, commonService, _location, _render, storeLinkService) {
        this.flowService = flowService;
        this.router = router;
        this.route = route;
        this.toaster = toaster;
        this.maskPipe = maskPipe;
        this.loaderService = loaderService;
        this.clipboardService = clipboardService;
        this.titleService = titleService;
        this.commonService = commonService;
        this._location = _location;
        this._render = _render;
        this.storeLinkService = storeLinkService;
        this.openedTab = "graph";
        this.hasConnectedDevices = false;
        this.controllerFilter = false;
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.min_zoom = 0.15;
        this.max_zoom = 3;
        this.zoomLevel = 0.15;
        this.zoomStep = 0.15;
        this.translateX = 0;
        this.translateY = 0;
        this.validatedFlow = [];
        this.resyncedFlow = [];
        this.pingedFlow = [];
        this.flowHistory = [];
        this.flowIs = '';
        this.contracts = [];
        this.loading = false;
        this.isLoadedcontract = false;
        this.clipBoardItems = {
            flowName: "",
            sourceSwitchName: "",
            sourceSwitch: "",
            targetSwitchName: "",
            targetSwitch: "",
            validateFlow: "",
            resyncFlow: "",
            pingedFlow: "",
            flowHistory: ""
        };
        this.storeLinkSetting = false;
        this.statusDescrepancy = false;
        this.bandWidthDescrepancy = false;
        this.loadStatsGraph = false;
        this.sourceCheckedValue = false;
        this.targetCheckedValue = false;
        this.descrepancyData = {
            status: {
                controller: "-",
                inventory: "-"
            },
            bandwidth: {
                controller: "-",
                inventory: "-"
            }
        };
        this.fromDate = moment().subtract(1, "day").format("YYYY/MM/DD HH:mm:ss");
        this.toDate = moment().format("YYYY/MM/DD HH:mm:ss");
        this.property = 'GraphicalView';
        this.Rawview = false;
        this.GraphicalView = true;
        this.loadingPing = false;
        this.reRoutingInProgress = false;
        this.dragStart = () => {
            if (!d3__WEBPACK_IMPORTED_MODULE_12__["event"].active)
                this.forceSimulation.alphaTarget(1).stop();
        };
        this.dragging = (d, i) => {
            this.isDragMove = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_12__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_12__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_12__["event"].dy;
            this.tick();
        };
        this.dragEnd = (d, i) => {
            if (!d3__WEBPACK_IMPORTED_MODULE_12__["event"].active)
                this.forceSimulation.alphaTarget(0);
        };
        this.horizontallyBound = (parentDiv, childDiv) => {
            let parentRect = parentDiv.getBoundingClientRect();
            let childRect = childDiv.getBoundingClientRect();
            return (parentRect.left <= childRect.left && parentRect.right >= childRect.right);
        };
        let storeSetting = localStorage.getItem("haslinkStoreSetting") || false;
        this.storeLinkSetting = storeSetting && storeSetting == "1" ? true : false;
    }
    ngOnInit() {
        this.titleService.setTitle("OPEN KILDA - View Flow");
        this.route.params.subscribe(params => {
            this.loadStatsGraph = false;
            var filterFlag = localStorage.getItem("filterFlag") || 'controller';
            this.controllerFilter = filterFlag == 'controller';
            if (!localStorage.getItem("haslinkStoreSetting")) {
                let query = { _: new Date().getTime() };
                this.storeLinkService.getLinkStoreDetails(query).subscribe((settings) => {
                    if (settings && settings['urls'] && typeof (settings['urls']['get-link']) != 'undefined' && typeof (settings['urls']['get-link']['url']) != 'undefined') {
                        localStorage.setItem('linkStoreSetting', JSON.stringify(settings));
                        localStorage.setItem('haslinkStoreSetting', "1");
                        this.storeLinkSetting = true;
                        this.getFlowDetail(params['id'], filterFlag);
                    }
                    else {
                        this.getFlowDetail(params['id'], filterFlag);
                    }
                }, (err) => {
                    this.getFlowDetail(params['id'], filterFlag);
                });
            }
            else {
                this.getFlowDetail(params['id'], filterFlag);
            }
            this.sourceCheckedValue = false;
            this.targetCheckedValue = false;
        });
    }
    openTab(tab) {
        this.openedTab = tab;
        $('#pingGraph').html("");
        if (tab == 'contracts') {
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].load_contract);
            this.flowService.getcontract(this.flowDetail.flowid).subscribe(data => {
                this.contracts = data || [];
                this.isLoadedcontract = true;
                this.loaderService.hide();
            }, (err) => {
                this.isLoadedcontract = true;
                this.loaderService.hide();
                var Err = err.error;
                var msg = (Err && typeof (Err['error-auxiliary-message']) != 'undefined') ? Err['error-auxiliary-message'] : '';
                this.toaster.error(msg, "Error");
            });
        }
        else if (tab == 'ping') {
            this.pingedFlow = null;
            this.GraphicalView = true;
            this.Rawview = false;
            this.property = 'GraphicalView';
            this.initPingSimulation();
        }
        else if (tab == 'history') {
            this.flowHistory = null;
            this.getFlowHistory();
        }
    }
    initPingSimulation() {
        this.nodes = [{ "x": -208.992345, "y": -6556.9998, switch_id_value: this.flowDetail.source_switch, switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name, port: this.flowDetail.src_port, vlan: this.flowDetail.src_vlan },
            { "x": 595.98896, "y": -6556.9998, switch_id_value: this.flowDetail.target_switch, switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name, port: this.flowDetail.dst_port, vlan: this.flowDetail.dst_vlan }
        ];
        this.links = [{
                source: { switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name },
                target: { switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name }
            },
            {
                source: { switch_id: this.flowDetail.target_switch + "_" + this.flowDetail.dst_port, name: this.flowDetail.target_switch_name },
                target: { switch_id: this.flowDetail.source_switch + "_" + this.flowDetail.src_port, name: this.flowDetail.source_switch_name }
            }
        ];
        this.processLinks();
        this.svgElement = d3__WEBPACK_IMPORTED_MODULE_12__["select"]("svg#pingGraph");
        this.width = this.svgElement.attr('width');
        this.height = this.svgElement.attr('height');
        this.svgElement.style('cursor', 'move');
        this.svgElement.attr("width", this.width);
        this.svgElement.attr("height", this.height);
        this.g = this.svgElement.append("g");
        this.graphLinkGroup = this.g.append("g").attr("id", `links`).attr("class", "links");
        this.graphNodeGroup = this.g.append('g').attr("class", ".nodes").attr("id", "nodes");
        this.size = d3__WEBPACK_IMPORTED_MODULE_12__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_12__["range"](1));
        this.forceSimulation = d3__WEBPACK_IMPORTED_MODULE_12__["forceSimulation"]()
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_12__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_12__["forceManyBody"]().strength(-50000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_12__["forceX"](this.width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_12__["forceY"](this.height / 2));
        this.forceSimulation.nodes(this.nodes);
        this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_12__["forceLink"]().links(this.links).distance((d) => {
            let distance = 150;
            return distance;
        }).strength(0.1));
        this.forceSimulation.on("tick", () => {
            this.tick();
        });
        this.insertNodes();
        this.insertLinks();
        this.svgElement.on("dblclick.zoom", null);
        this.forceSimulation.restart();
    }
    processLinks() {
        var nodelength = this.nodes.length;
        var linklength = this.links.length;
        for (var i = 0; i < nodelength; i++) {
            for (var j = 0; j < linklength; j++) {
                if (this.nodes[i].switch_id == this.links[j]["source"]["switch_id"] &&
                    this.nodes[i].switch_id == this.links[j]["target"]["switch_id"]) {
                    this.links[j].source = i;
                    this.links[j].target = i;
                }
                else {
                    if (this.nodes[i].switch_id == this.links[j]["source"]["switch_id"]) {
                        this.links[j].source = i;
                    }
                    else if (this.nodes[i].switch_id == this.links[j]["target"]["switch_id"]) {
                        this.links[j].target = i;
                    }
                }
            }
        }
    }
    insertLinks() {
        var ref = this;
        let graphLinksData = this.graphLinkGroup.selectAll("path.link").data(this.links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            return "link physical";
        })
            .attr("id", (d, index) => {
            return "link" + index;
        }).attr('stroke-width', (d) => { return 2.5; }).attr("stroke", function (d, index) {
            return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].DISCOVERED;
        }).attr("cursor", "pointer")
            .on('mouseover', function (d, index) {
            var element = document.getElementById("link" + index);
            var classes = element.getAttribute("class");
            classes = classes + " overlay";
            element.setAttribute('class', classes);
            var rec = element.getBoundingClientRect();
            if (classes.includes("failed_ping_flowline") || classes.includes("ping_success_flow")) {
                if (index == 0) {
                    $("#ping-hover-txt").css("display", "block");
                    $('#forward_ping_errors').css('display', 'block');
                    $('#reverse_ping_errors').css('display', 'none');
                }
                else {
                    $("#ping-hover-txt").css("display", "block");
                    $('#forward_ping_errors').css('display', 'none');
                    $('#reverse_ping_errors').css('display', 'block');
                }
                $(element).on("mousemove", function (e) {
                    $("#ping-hover-txt").css("top", (e.pageY - 50) + "px");
                    $("#ping-hover-txt").css("left", (e.pageX) + "px");
                    var bound = ref.horizontallyBound(document.getElementById("pingGraphwrapper"), document.getElementById("ping-hover-txt"));
                    if (bound) {
                        $("#ping-hover-txt").removeClass("left");
                    }
                    else {
                        var left = e.pageX; // subtract width of tooltip box + circle radius
                        $("#ping-hover-txt").css("left", left + "px");
                        $("#ping-hover-txt").addClass("left");
                    }
                });
            }
        }).on('mouseout', function (d, index) {
            var element = document.getElementById("link" + index);
            $('#link' + index).removeClass('overlay');
            $("#ping-hover-txt").css("display", "none");
            $('#forward_ping_errors').css('display', 'none');
            $('#reverse_ping_errors').css('display', 'none');
        });
        graphLinksData.exit().remove();
        this.graphLink = graphNewLink.merge(graphLinksData);
    }
    insertNodes() {
        let ref = this;
        let graphNodesData = this.graphNodeGroup.selectAll("g.node").data(this.nodes);
        let graphNodeElement = graphNodesData.enter().append("g").attr("class", "node");
        graphNodesData.exit().remove();
        graphNodeElement.append("circle").attr("r", this.graphOptions.radius)
            .attr("class", function (d, index) {
            var classes = "circle blue hover";
            return classes;
        })
            .attr("id", function (d, index) {
            return "circle_" + d.index;
        }).style("cursor", "pointer");
        let text = graphNodeElement
            .append("text")
            .attr("dy", ".35em")
            .style("font-size", this.graphOptions.nominal_text_size + "px")
            .attr("class", "switchname");
        if (this.graphOptions.text_center) {
            text
                .text(function (d) {
                return d.name;
            })
                .style("text-anchor", "middle");
        }
        else {
            text
                .attr("dx", function (d) {
                return ref.size(d.size) || ref.graphOptions.nominal_base_node_size;
            })
                .text(function (d) {
                return d.name;
            });
        }
        let images = graphNodeElement.append("svg:image")
            .attr("xlink:href", function (d) {
            return _environments_environment__WEBPACK_IMPORTED_MODULE_13__["environment"].assetsPath + "/images/switch.png";
        })
            .attr("x", function (d) {
            return -29;
        })
            .attr("y", function (d) {
            return -29;
        })
            .attr("height", 58)
            .attr("width", 58)
            .attr("id", function (d, index) {
            return "image_" + index;
        }).attr("cursor", "pointer").on('mouseover', function (d, index) {
            var element = document.getElementById("circle_" + index);
            var rec = element.getBoundingClientRect();
            $("#ping-hover-txt,#switch_hover").css("display", "block");
            $("#ping-hover-txt").css("top", rec.y + "px");
            $("#ping-hover-txt").css("left", (rec.x) + "px");
            d3__WEBPACK_IMPORTED_MODULE_12__["select"](".switchdetails_div_switch_name").html("<span>" + d.name + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_12__["select"](".switchdetails_div_switchid").html("<span>" + d.switch_id_value + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_12__["select"](".switchdetails_div_port").html("<span>" + d.port + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_12__["select"](".switchdetails_div_vlan").html("<span>" + d.vlan + "</span>");
            var bound = ref.horizontallyBound(document.getElementById("pingGraphwrapper"), document.getElementById("ping-hover-txt"));
            if (bound) {
                $("#ping-hover-txt").removeClass("left");
            }
            else {
                var left = rec.x - (300 + 100);
                $("#ping-hover-txt").css("left", left + "px");
                $("#ping-hover-txt").addClass("left");
            }
        }).on('mouseout', function (d, index) {
            $("#ping-hover-txt,#switch_hover").css("display", "none");
        });
        this.graphNode = graphNodeElement.merge(graphNodesData);
    }
    tick() {
        this.graphLink.attr("d", d => {
            var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy), drx = dr, dry = dr - 100, xRotation = 0, // degrees
            largeArc = 0, // 1 or 0
            sweep = 1; // 1 or 0
            var lTotalLinkNum = 2;
            if (lTotalLinkNum > 1) {
                dr = dr / (1 + (1 / lTotalLinkNum) * (d.index));
            }
            if (x1 === x2 && y1 === y2) {
                xRotation = -45;
                largeArc = 1;
                drx = 50;
                dry = 20;
                x2 = x2 + 1;
                y2 = y2 + 1;
            }
            return ("M" +
                x1 +
                "," +
                y1 +
                "A" +
                drx +
                "," +
                dry +
                " " +
                xRotation +
                "," +
                largeArc +
                "," +
                sweep +
                " " +
                x2 +
                "," +
                y2);
        });
        this.graphNode.attr("transform", function (d) {
            if (d.x && d.y) {
                return "translate(" + d.x + "," + d.y + ")";
            }
        });
    }
    getFlowStatus(status) {
        this.flowService.getFlowStatus(this.flowDetail.flowid).subscribe(flowStatus => {
            if (flowStatus.status == 'IN PROGRESS' || flowStatus.status == "IN_PROGRESS") {
                this.getFlowStatus(flowStatus.status);
            }
            else {
                this.flowDetail.status = (flowStatus && flowStatus.status) ? flowStatus.status : this.flowDetail.status;
            }
        }, error => {
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'No Flow found';
            //this.toaster.error(errorMsg, "Error");
        });
    }
    /**fetching flow detail via API call */
    getFlowDetail(flowId, filterFlag) {
        var self = this;
        this.openedTab = 'graph';
        this.loadStatsGraph = true;
        this.clearResyncedFlow();
        this.clearValidatedFlow();
        this.clearFlowHistory();
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].flow_detail);
        this.bandWidthDescrepancy = false;
        this.statusDescrepancy = false;
        var flowDetail = null;
        if (filterFlag == 'controller') {
            let flowData = JSON.parse(localStorage.getItem('flows')) || {};
            let flowList = typeof (flowData.list_data) != 'undefined' ? flowData.list_data : [];
            if (flowList && flowList.length) {
                flowList.forEach(element => {
                    if (element.flowid == flowId) {
                        flowDetail = element;
                        return;
                    }
                });
            }
        }
        else {
            var flowData = JSON.parse(localStorage.getItem('flowsinventory')) || {};
            let flowList = typeof (flowData.list_data) != 'undefined' ? flowData.list_data : [];
            if (flowList && flowList.length) {
                flowList.forEach(element => {
                    if (element.flowid == flowId) {
                        flowDetail = element;
                        return;
                    }
                });
            }
        }
        if (flowDetail && flowDetail.flowid) {
            flowDetail["source_switch"] = this.convertSwitchPattern(flowDetail["source_switch"]);
            flowDetail["target_switch"] = this.convertSwitchPattern(flowDetail["target_switch"]);
            this.flowDetail = flowDetail;
            this.hasConnectedDevices = (flowDetail.src_lldp || flowDetail.src_arp) || (flowDetail.dst_lldp || flowDetail.dst_arp);
            this.clipBoardItems = Object.assign(this.clipBoardItems, {
                flowName: flowDetail.flowid,
                sourceSwitchName: flowDetail["source_switch_name"],
                sourceSwitch: flowDetail["source_switch"],
                targetSwitchName: flowDetail["target_switch_name"],
                targetSwitch: flowDetail["target_switch"]
            });
            if (flowDetail['discrepancy'] && (flowDetail['discrepancy']['status'] || flowDetail['discrepancy']['bandwidth'])) {
                if (flowDetail['discrepancy']['status']) {
                    this.statusDescrepancy = true;
                    this.descrepancyData.status.controller = (typeof (flowDetail['discrepancy']['status-value']['controller-status']) != 'undefined') ? flowDetail['discrepancy']['status-value']['controller-status'] : "-";
                    this.descrepancyData.status.inventory = (typeof (flowDetail['discrepancy']['status-value']['inventory-status']) != 'undefined') ? flowDetail['discrepancy']['status-value']['inventory-status'] : "-";
                }
                if (flowDetail['discrepancy']['bandwidth']) {
                    this.bandWidthDescrepancy = true;
                    this.descrepancyData.bandwidth.controller = (typeof (flowDetail['discrepancy']['bandwidth-value']['controller-bandwidth']) != 'undefined') ? flowDetail['discrepancy']['bandwidth-value']['controller-bandwidth'] : "-";
                    this.descrepancyData.bandwidth.inventory = (typeof (flowDetail['discrepancy']['bandwidth-value']['inventory-bandwidth']) != 'undefined') ? flowDetail['discrepancy']['bandwidth-value']['inventory-bandwidth'] : "-";
                }
            }
            setTimeout(function () {
                if (flowDetail && (flowDetail.status == 'IN PROGRESS' || flowDetail.status == "IN_PROGRESS")) {
                    self.getFlowStatus(flowDetail.status);
                }
            }, 100);
            this.loaderService.hide();
        }
        else {
            this.flowService.getFlowDetailById(flowId, filterFlag).subscribe(flow => {
                flow["source_switch"] = this.convertSwitchPattern(flow["source_switch"]);
                flow["target_switch"] = this.convertSwitchPattern(flow["target_switch"]);
                this.flowDetail = flow;
                this.hasConnectedDevices = this.flowDetail.src_lldp || this.flowDetail.dst_lldp;
                this.clipBoardItems = Object.assign(this.clipBoardItems, {
                    flowName: flow.flowid,
                    sourceSwitchName: flow["source_switch_name"],
                    sourceSwitch: flow["source_switch"],
                    targetSwitchName: flow["target_switch_name"],
                    targetSwitch: flow["target_switch"]
                });
                if (flow['discrepancy'] && (flow['discrepancy']['status'] || flow['discrepancy']['bandwidth'])) {
                    if (flow['discrepancy']['status']) {
                        this.statusDescrepancy = true;
                        this.descrepancyData.status.controller = (typeof (flow['discrepancy']['status-value']['controller-status']) != 'undefined') ? flow['discrepancy']['status-value']['controller-status'] : "-";
                        this.descrepancyData.status.inventory = (typeof (flow['discrepancy']['status-value']['inventory-status']) != 'undefined') ? flow['discrepancy']['status-value']['inventory-status'] : "-";
                    }
                    if (flow['discrepancy']['bandwidth']) {
                        this.bandWidthDescrepancy = true;
                        this.descrepancyData.bandwidth.controller = (typeof (flow['discrepancy']['bandwidth-value']['controller-bandwidth']) != 'undefined') ? flow['discrepancy']['bandwidth-value']['controller-bandwidth'] : "-";
                        this.descrepancyData.bandwidth.inventory = (typeof (flow['discrepancy']['bandwidth-value']['inventory-bandwidth']) != 'undefined') ? flow['discrepancy']['bandwidth-value']['inventory-bandwidth'] : "-";
                    }
                }
                this.loaderService.hide();
                setTimeout(function () {
                    if (flow && (self.flowDetail.status == 'IN PROGRESS' || self.flowDetail.status == "IN_PROGRESS")) {
                        self.getFlowStatus(flow.status);
                    }
                }, 100);
            }, error => {
                var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'No Flow found';
                this.toaster.error(errorMsg, "Error");
                this._location.back();
                this.loaderService.hide();
            });
        }
    }
    convertSwitchPattern(switchId) {
        if (switchId) {
            if (switchId.startsWith("SW") || switchId.startsWith("sw")) {
                switchId = switchId.substring(2);
                if (!switchId.includes(":")) {
                    return this.maskPipe.addCharacter(switchId, 2).join(":").toLowerCase();
                }
                else {
                    return switchId;
                }
            }
            else {
                return switchId;
            }
        }
    }
    /** Switch Id masking using toggle button */
    maskSwitchId(switchType, e) {
        if (e.target.checked) {
            this.flowDetail[switchType + "_switch"] = this.maskPipe.transform(this.flowDetail[switchType + "_switch"], "legacy");
        }
        else {
            this.flowDetail[switchType + "_switch"] = this.maskPipe.transform(this.flowDetail[switchType + "_switch"], "kilda");
        }
        if (switchType == 'source') {
            this.clipBoardItems.sourceSwitch = this.flowDetail[switchType + "_switch"];
            this.sourceCheckedValue = e.target.checked ? true : false;
        }
        else {
            this.clipBoardItems.targetSwitch = this.flowDetail[switchType + "_switch"];
            this.targetCheckedValue = e.target.checked ? true : false;
        }
    }
    toggleGraphView(e) {
        if (e.target.checked) {
            this.property = 'Rawview';
            this.GraphicalView = false;
        }
        else {
            this.property = 'GraphicalView';
            this.Rawview = false;
        }
        this[this.property] = true;
    }
    /** clear flow histiry */
    clearFlowHistory() {
        this.flowHistory = [];
        this.flowIs = "";
    }
    /**get flow history */
    changeDate(input, event) {
        this[input] = moment(new Date(event.target.value)).format("YYYY/MM/DD HH:mm:ss");
        if (moment(new Date(this.fromDate)).isAfter(moment(new Date(this.toDate)))) {
            this.toaster.error('From Date can not be greater than To Date..', 'Error');
            return;
        }
        setTimeout(() => {
            this.getFlowHistory();
        }, 0);
    }
    getFlowHistory() {
        this.flowHistory = null;
        this.flowIs = 'history';
        this.loading = true;
        let startDate = moment(new Date(this.fromDate)).unix();
        let endDate = moment(new Date(this.toDate)).unix();
        this.flowService.getFlowHistory(this.flowDetail.flowid, startDate, endDate).subscribe(data => {
            this.flowHistory = data;
            this.clipBoardItems.flowHistory = data;
            this.loading = false;
        }, error => {
            this.flowIs = '';
            this.flowHistory = [];
            this.loading = false;
            this.toaster.error(error["error-auxiliary-message"], "Error!");
        });
    }
    /** Validate flow */
    validateFlow() {
        this.validatedFlow = null;
        this.flowIs = 'validate';
        this.loading = true;
        this.flowService.validateFlow(this.flowDetail.flowid).subscribe(data => {
            this.validatedFlow = data;
            this.clipBoardItems.validateFlow = data;
            this.loading = false;
        }, error => {
            this.flowIs = '';
            this.loading = false;
            this.toaster.error(error["error-auxiliary-message"], "Error!");
        });
    }
    /** Validate flow */
    resyncFlow() {
        this.resyncedFlow = null;
        this.flowIs = 'resync';
        this.loading = true;
        this.flowService.resynchFlow(this.flowDetail.flowid).subscribe(data => {
            this.resyncedFlow = data;
            this.clipBoardItems.resyncFlow = data;
            this.loading = false;
            /** Re-load flow status after resync */
            setTimeout(() => {
                this.flowService.getFlowStatus(this.flowDetail.flowid).subscribe(flowStatus => {
                    this.flowDetail.status = (flowStatus && flowStatus.status) ? flowStatus.status : this.flowDetail.status;
                }, error => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'No Flow found';
                    //this.toaster.error(errorMsg, "Error");
                });
            }, 10000);
        }, error => {
            this.flowIs = '';
            this.loading = false;
            this.toaster.error(error["error-auxiliary-message"], "Error!");
        });
    }
    /** Re-route flow path for best route  */
    reRouteFlow() {
        this.reRoutingInProgress = true;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].re_routing);
        this.flowService.getReRoutedPath(this.flowDetail.flowid).subscribe(data => {
            this.loaderService.hide();
            if (data && typeof (data.rerouted) !== 'undefined' && data.rerouted) {
                this.toaster.success('Flow : ' + this.flowDetail.flowid + " successfully re-routed!", "success");
            }
            else {
                this.toaster.info('Flow : ' + this.flowDetail.flowid + " already on best route!");
            }
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].reloading_status_and_flow_path);
            /** Re-load flow path components */
            setTimeout(() => {
                this.reRoutingInProgress = false;
                this.loaderService.hide();
                this.flowService.getFlowStatus(this.flowDetail.flowid).subscribe(flowStatus => {
                    this.flowDetail.status = (flowStatus && flowStatus.status) ? flowStatus.status : this.flowDetail.status;
                }, error => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'No Flow found';
                    //this.toaster.error(errorMsg, "Error");
                });
            }, 10000);
        }, error => {
            this.loaderService.hide();
            this.toaster.error(error["error-auxiliary-message"], "Error!");
        });
    }
    addPingToLinks() {
        this.links.forEach(function (d, index) {
            $('#link' + index).addClass('flowline');
        });
    }
    removePingFromLinks(forward_ping, reverse_ping) {
        this.links.forEach(function (d, index) {
            if (index == 0) {
                if (!forward_ping) {
                    $('#link' + index).removeClass('flowline').addClass('failed_ping_flowline');
                }
                else {
                    $('#link' + index).removeClass('flowline').removeClass('failed_ping_flowline').addClass('ping_success_flow');
                }
            }
            else if (index != 0) {
                if (!reverse_ping) {
                    $('#link' + index).removeClass('flowline').addClass('failed_ping_flowline');
                }
                else {
                    $('#link' + index).removeClass('flowline').removeClass('failed_ping_flowline').addClass('ping_success_flow');
                }
            }
        });
    }
    /** Ping flow */
    pingFlow() {
        this.addPingToLinks();
        this.pingedFlow = null;
        this.flowIs = 'ping';
        this.loadingPing = true;
        this.flowService.pingFlow(this.flowDetail.flowid).subscribe(data => {
            var forward_ping = (data && data['forward'] && data['forward']['ping_success']) ? data['forward']['ping_success'] : false;
            var reverse_ping = (data && data['reverse'] && data['reverse']['ping_success']) ? data['reverse']['ping_success'] : false;
            if (!forward_ping) {
                $('#forward_ping_errors').html('<p>' + data['forward']['error'] + '</p>');
            }
            else {
                $('#forward_ping_errors').html('<p> Latency: ' + data['forward']['latency'] + '</p>');
            }
            if (!reverse_ping) {
                $('#reverse_ping_errors').html('<p>' + data['reverse']['error'] + '</p>');
            }
            else {
                $('#reverse_ping_errors').html('<p> Latency: ' + data['reverse']['latency'] + '</p>');
            }
            this.removePingFromLinks(forward_ping, reverse_ping);
            this.pingedFlow = data;
            this.clipBoardItems.pingedFlow = JSON.stringify(data);
            this.loadingPing = false;
            if (this.property == "Rawview") {
                setTimeout(function () { $('#onoffflowping').trigger('click'); });
            }
        }, error => {
            var forward_ping = false, reverse_ping = false;
            this.removePingFromLinks(forward_ping, reverse_ping);
            this.flowIs = '';
            this.loadingPing = false;
            this.toaster.error(error["error-auxiliary-message"], "Error!");
        });
    }
    showMenu(e) {
        e.preventDefault();
        $(".clip-board-button").hide();
        $(".clip-board-button")
            .css({
            top: e.pageY + "px",
            left: e.pageX - 220 + "px",
            "z-index": 2
        })
            .toggle();
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    copyToClipHtml(event, copyHtmlItem) {
        this.clipboardService.copyFromContent(jQuery('.code').text());
    }
    clearResyncedFlow() {
        this.resyncedFlow = [];
        this.flowIs = "";
    }
    clearValidatedFlow() {
        this.validatedFlow = [];
        this.flowIs = "";
    }
    clearPingedFlow() {
        this.pingedFlow = [];
        this.flowIs = "";
    }
};
FlowDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-detail",
        template: __webpack_require__(/*! ./flow-detail.component.html */ "./src/app/modules/flows/flow-detail/flow-detail.component.html"),
        styles: [__webpack_require__(/*! ./flow-detail.component.css */ "./src/app/modules/flows/flow-detail/flow-detail.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__["SwitchidmaskPipe"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__["ClipboardService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["Title"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_10__["CommonService"],
        _angular_common__WEBPACK_IMPORTED_MODULE_11__["Location"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_14__["StoreSettingtService"]])
], FlowDetailComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-edit/flow-edit.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/modules/flows/flow-edit/flow-edit.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy1lZGl0L2Zsb3ctZWRpdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/flows/flow-edit/flow-edit.component.html":
/*!******************************************************************!*\
  !*** ./src/app/modules/flows/flow-edit/flow-edit.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div>\r\n<form class=\"flow-card\" id=\"flowEditForm\" novalidate (ngSubmit)=\"updateFlow()\" [formGroup]=\"flowEditForm\">\r\n  <div class=\"row mb-4\">\r\n        <div class=\"col-sm-12\">\r\n    <h6 class=\"card-title card-custom-title\">FLOW DETAILS\r\n\r\n      <span *ngIf=\"commonService.hasPermission('fw_flow_delete') && (!storeLinkSetting || (flowDetailData.hasOwnProperty('controller-flow')  && flowDetailData['controller-flow'] ) || (storeLinkSetting && flowDetailData.hasOwnProperty('discrepancy') && flowDetailData['discrepancy'].hasOwnProperty('controller-discrepancy') && !flowDetailData['discrepancy']['controller-discrepancy']))\" class=\"btn btn-dark btn-sm pull-right\" (click)=\"deleteFlow()\">Delete</span> \r\n      <div class=\"clear clearfix\"></div>     \r\n    </h6>\r\n    <div class=\"card\">\r\n      <div class=\"card-body\">\r\n        <div class=\"isl-source-details-div\">\r\n          <div class='form-group row flow_details' >\r\n            <label class='col-sm-3 col-form-label'>Flow Name:</label>\r\n            <div class='col-sm-4'>\r\n              <input formControlName=\"flowid\"   id=\"max_bandwidth\" class=\"form-control\" name=\"max_bandwidth\" type=\"text\" readonly=\"readonly\"/>\r\n            </div>\r\n          </div>\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Description:</label>\r\n            <div class=\"col-sm-4\">\r\n              <textarea formControlName=\"description\"  id=\"flow_description\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class='form-group row flow_details' [ngClass]=\"{'error': f.maximum_bandwidth.errors && submitted}\">\r\n            <label class='col-sm-3 col-form-label required'>Bandwidth:</label>\r\n            <div class=\"col-sm-4\">\r\n              <input formControlName=\"maximum_bandwidth\"  id=\"max_bandwidth\" class=\"form-control\" min=\"0\" name=\"max_bandwidth\" type=\"number\" required\r\n              />\r\n              <div *ngIf=\"submitted && f.maximum_bandwidth.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.maximum_bandwidth.errors.required\">Bandwidth is required</div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Diverse Flow:</label>\r\n            <div class='col-sm-4'>\r\n              <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select Diverse Flow\" formControlName=\"diverse_flowid\" [items]=\"diverseFlowList\" bindLabel=\"flowid\"     bindValue=\"flowid\"></ng-select>\r\n            </div>\r\n          </div>\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Protected Path:</label>\r\n            <div class='col-sm-4'>\r\n              <div class=\"pull-left\">\r\n                <div class=\"onoffswitch\">\r\n                  <input  formControlName=\"allocate_protected_path\" [checked]=\"allocate_protected_path\" type=\"checkbox\" (change)=\"setProtectedpath($event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\"\r\n                    id=\"onoffswitchsource\">\r\n                  <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                    <span class=\"onoffswitch-inner \"></span>\r\n                    <span class=\"onoffswitch-switch\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Ignore Bandwidth:</label>\r\n            <div class='col-sm-4'>\r\n              <div class=\"pull-left\">\r\n                <div class=\"onoffswitch\">\r\n                  <input  formControlName=\"ignore_bandwidth\" [checked]=\"ignore_bandwidth\" type=\"checkbox\"  name=\"onoffignorebandwidth\" class=\"onoffswitch-checkbox\"\r\n                    id=\"onoffignorebandwidth\">\r\n                  <label class=\"onoffswitch-label\" for=\"onoffignorebandwidth\">\r\n                    <span class=\"onoffswitch-inner \"></span>\r\n                    <span class=\"onoffswitch-switch\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Pinned:</label>\r\n            <div class='col-sm-4'>\r\n              <div class=\"pull-left\">\r\n                <div class=\"onoffswitch\">\r\n                  <input  formControlName=\"pinned\" [checked]=\"pinned\" type=\"checkbox\"  name=\"onoffpinned\" class=\"onoffswitch-checkbox\"\r\n                    id=\"onoffpinned\">\r\n                  <label class=\"onoffswitch-label\" for=\"onoffpinned\">\r\n                    <span class=\"onoffswitch-inner \"></span>\r\n                    <span class=\"onoffswitch-switch\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class='form-group row flow_details'>\r\n            <label class='col-sm-3 col-form-label'>Periodic Pings:</label>\r\n            <div class='col-sm-4'>\r\n              <div class=\"pull-left\">\r\n                <div class=\"onoffswitch\">\r\n                  <input  formControlName=\"periodic_pings\" [checked]=\"periodic_pings\" type=\"checkbox\"  name=\"onoffperiodicpings\" class=\"onoffswitch-checkbox\"\r\n                    id=\"onoffperiodicpings\">\r\n                  <label class=\"onoffswitch-label\" for=\"onoffperiodicpings\">\r\n                    <span class=\"onoffswitch-inner \"></span>\r\n                    <span class=\"onoffswitch-switch\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  </div>\r\n    <!-- Start : 2 Flow section-->\r\n    <div class=\"row  mb-4\">\r\n      <div class=\"col-sm-6\">\r\n        <h6 class=\"card-title card-custom-title\">SOURCE DETAILS</h6>\r\n        <div class=\"card\">\r\n\r\n          <div class=\"card-body\">\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Switch:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select source switch\" formControlName=\"source_switch\"  (change)=\"getPorts('source_switch',false)\"  [items]=\"sourceSwitches\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.source_switch.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.source_switch.errors.required\">Please select source switch</div>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Port:</label>\r\n              <div class='col-sm-6'>\r\n               <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select source port\" formControlName=\"source_port\" (change)=\"getVLAN('source_port')\" [items]=\"sourcePorts\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n               <div *ngIf=\"submitted && f.source_port.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.source_port.errors.required\">Please select source port</div>\r\n              </div>\r\n              </div>\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label'>Vlan:</label>\r\n              <div class='col-sm-6'>\r\n                  <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select source VLAN\" formControlName=\"source_vlan\" [items]=\"vlanPorts\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n                  <div *ngIf=\"submitted && f.source_vlan.errors\" class=\"invalid-feedback\">\r\n                    <div *ngIf=\"f.source_vlan.errors.required\">Please select source VLAN</div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <h6 class=\"card-title card-custom-title\">DESTINATION DETAILS</h6>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Switch:</label>\r\n              <div class='col-sm-6'>\r\n               <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select destination switch\" formControlName=\"target_switch\" (change)=\"getPorts('target_switch',false)\" [items]=\"targetSwitches\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n               <div *ngIf=\"submitted && f.target_switch.errors\" class=\"invalid-feedback\">\r\n                <div *ngIf=\"f.target_switch.errors.required\">Please select destination switch</div>\r\n              </div>\r\n              </div>\r\n\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label required'>Port:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select destination port\" formControlName=\"target_port\" (change)=\"getVLAN('target_port')\" [items]=\"targetPorts\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.target_port.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.target_port.errors.required\">Please select destination port</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class='form-group row'>\r\n              <label class='col-sm-3 col-form-label'>Vlan:</label>\r\n              <div class='col-sm-6'>\r\n                <ng-select dropdownPosition=\"bottom\" searchable=\"true\" placeholder=\"Select destination VLAN\" formControlName=\"target_vlan\" [items]=\"vlanPorts\" bindLabel=\"label\"     bindValue=\"value\"></ng-select>\r\n                <div *ngIf=\"submitted && f.target_vlan.errors\" class=\"invalid-feedback\">\r\n                  <div *ngIf=\"f.target_vlan.errors.required\">Please select destination VLAN</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ENd : 2 Flow sections-->\r\n\r\n    <div class=\"col-sm-12\">\r\n      <button class=\"btn btn-sm btn-dark\">Update</button>\r\n      &nbsp;\r\n      <button type=\"button\" (click)=\"goToBack()\" class=\"btn btn-sm btn-dark\">Cancel</button>\r\n    </div>\r\n</form>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/flows/flow-edit/flow-edit.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/flows/flow-edit/flow-edit.component.ts ***!
  \****************************************************************/
/*! exports provided: FlowEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowEditComponent", function() { return FlowEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../common/components/otp/otp.component */ "./src/app/common/components/otp/otp.component.ts");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm2015/common.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../common/components/modal/modal.component */ "./src/app/common/components/modal/modal.component.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");

















let FlowEditComponent = class FlowEditComponent {
    constructor(formBuilder, flowService, router, route, toaster, switchService, switchIdMaskPipe, loaderService, modalService, _location, titleService, commonService, toastr) {
        this.formBuilder = formBuilder;
        this.flowService = flowService;
        this.router = router;
        this.route = route;
        this.toaster = toaster;
        this.switchService = switchService;
        this.switchIdMaskPipe = switchIdMaskPipe;
        this.loaderService = loaderService;
        this.modalService = modalService;
        this._location = _location;
        this.titleService = titleService;
        this.commonService = commonService;
        this.toastr = toastr;
        this.submitted = false;
        this.switches = [];
        this.enableSearch = 1;
        this.sourcePorts = [];
        this.mainSourcePorts = [];
        this.targetPorts = [];
        this.mainTargetPorts = [];
        this.flowDetailData = {};
        this.diverseFlowList = [];
        this.storeLinkSetting = false;
        this.allocate_protected_path = false;
        let storeSetting = localStorage.getItem("haslinkStoreSetting") || false;
        this.storeLinkSetting = storeSetting && storeSetting == "1" ? true : false;
        if (!this.commonService.hasPermission('fw_flow_update')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Edit Flow');
        this.flowEditForm = this.formBuilder.group({
            flowid: [""],
            description: [""],
            maximum_bandwidth: [
                "",
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]+")])
            ],
            source_switch: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            source_port: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            source_vlan: ["0"],
            target_switch: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            target_port: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            target_vlan: ["0"],
            diverse_flowid: [null],
            allocate_protected_path: [null],
            ignore_bandwidth: [null],
            pinned: [null],
            periodic_pings: [null]
        });
        this.vlanPorts = Array.from({ length: 4095 }, (v, k) => {
            return { label: (k).toString(), value: (k).toString() };
        });
        let flowId = this.route.snapshot.paramMap.get("id");
        var filterFlag = localStorage.getItem('filterFlag') || 'controller';
        this.getFlowDetail(flowId, filterFlag);
    }
    ngAfterViewInit() { }
    /** getter to get form fields */
    get f() {
        return this.flowEditForm.controls;
    }
    /**Get flow detail via api call */
    getFlowDetail(flowId, filterFlag) {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].flow_detail);
        this.flowService.getFlowDetailById(flowId, filterFlag).subscribe(flow => {
            this.flowDetailData = flow;
            this.flowDetail = {
                flowid: flow.flowid,
                description: flow.description || "",
                maximum_bandwidth: flow.maximum_bandwidth || 0,
                source_switch: flow.source_switch,
                source_port: flow.src_port.toString(),
                source_vlan: flow.src_vlan.toString(),
                target_switch: flow.target_switch,
                target_port: flow.dst_port.toString(),
                target_vlan: flow.dst_vlan.toString(),
                diverse_flowid: (typeof (flow['diverse_with']) != 'undefined' && flow['diverse_with'].length > 0) ? flow['diverse_with'][0] : null,
                allocate_protected_path: flow['allocate_protected_path'] || null,
                ignore_bandwidth: flow['ignore_bandwidth'] || null,
                pinned: flow['pinned'] || null,
                periodic_pings: flow['periodic-pings'] || null,
            };
            this.flowId = flow.flowid;
            this.flowEditForm.setValue(this.flowDetail);
            this.getflowList();
            this.getSwitchList();
            this.getPorts("source_switch", true);
            this.getPorts("target_switch", true);
        }, error => {
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'No flow found';
            this.toaster.error(errorMsg, "Error");
            this.goToBack();
            this.loaderService.hide();
        });
    }
    /** Get switches list via api call */
    getSwitchList() {
        let ref = this;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].flow_detail);
        this.switchService.getSwitchList().subscribe(response => {
            response.forEach(function (s) {
                ref.switches.push({ label: s.name + ' (' + (s.state.toLowerCase()) + ')', value: s.switch_id });
            });
            ref.targetSwitches = ref.switches;
            ref.sourceSwitches = ref.switches;
        }, error => {
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to fetch switch list';
            this.toaster.error(errorMsg, "Error");
        });
    }
    /** Fetch ports by switch id via api call */
    getPorts(switchType, flag) {
        if (this.flowEditForm.controls[switchType].value) {
            let switchId = this.switchIdMaskPipe.transform(this.flowEditForm.controls[switchType].value, "legacy");
            if (!flag) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].load_ports);
            }
            this.switchService.getSwitchPortsStats(switchId).subscribe(ports => {
                var filteredPorts = ports.filter(function (d) {
                    return d.assignmenttype != 'ISL';
                });
                let sortedPorts = filteredPorts.sort(function (a, b) {
                    return a.port_number - b.port_number;
                });
                sortedPorts = sortedPorts.map(portInfo => {
                    if (portInfo.port_number == this.flowDetail.source_port) {
                        return {
                            label: portInfo.port_number,
                            value: portInfo.port_number
                        };
                    }
                    return { label: portInfo.port_number, value: portInfo.port_number };
                });
                if (switchType == "source_switch") {
                    this.sourcePorts = sortedPorts;
                    this.mainSourcePorts = sortedPorts;
                    if (!flag) {
                        this.flowEditForm.controls["source_port"].setValue(null);
                        this.flowEditForm.controls["source_vlan"].setValue("0");
                    }
                }
                else {
                    this.targetPorts = sortedPorts;
                    this.mainTargetPorts = sortedPorts;
                    if (!flag) {
                        this.flowEditForm.controls["target_port"].setValue(null);
                        this.flowEditForm.controls["target_vlan"].setValue("0");
                    }
                }
                if (sortedPorts.length == 0) {
                    this.toaster.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].no_ports, "Info");
                    if (switchType == "source_switch") {
                        this.flowEditForm.controls["source_port"].setValue(null);
                        this.flowEditForm.controls["source_vlan"].setValue("0");
                    }
                    else {
                        this.flowEditForm.controls["target_port"].setValue(null);
                        this.flowEditForm.controls["target_vlan"].setValue("0");
                    }
                }
                this.loaderService.hide();
            }, error => {
                var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to get port information';
                this.toaster.error(errorMsg, "Error");
                this.loaderService.hide();
            });
        }
        else {
            if (switchType == "source_switch") {
                this.flowEditForm.controls["source_port"].setValue(null);
                this.flowEditForm.controls["source_vlan"].setValue("0");
            }
            else {
                this.flowEditForm.controls["target_port"].setValue(null);
                this.flowEditForm.controls["target_vlan"].setValue("0");
            }
        }
    }
    /**Update Flow  */
    updateFlow() {
        this.submitted = true;
        if (this.flowEditForm.invalid) {
            return;
        }
        var flowData = {
            source: {
                "switch-id": this.flowEditForm.controls["source_switch"].value,
                "port-id": this.flowEditForm.controls["source_port"].value,
                "vlan-id": this.flowEditForm.controls["source_vlan"].value
            },
            destination: {
                "switch-id": this.flowEditForm.controls["target_switch"].value,
                "port-id": this.flowEditForm.controls["target_port"].value,
                "vlan-id": this.flowEditForm.controls["target_vlan"].value
            },
            flowid: this.flowEditForm.controls["flowid"].value,
            "maximum-bandwidth": this.flowEditForm.controls["maximum_bandwidth"].value,
            description: this.flowEditForm.controls["description"].value,
            "diverse-flowid": this.flowEditForm.controls["diverse_flowid"].value,
            "allocate_protected_path": this.flowEditForm.controls["allocate_protected_path"].value,
            "ignore_bandwidth": this.flowEditForm.controls['ignore_bandwidth'].value || null,
            pinned: this.flowEditForm.controls['pinned'].value || null,
            "periodic-pings": this.flowEditForm.controls['periodic_pings'].value || null,
        };
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to update flow?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].flow_updated);
                this.flowService.updateFlow(this.flowDetail.flowid, flowData).subscribe(response => {
                    this.toaster.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].flow_updated_controller, "Success!");
                    localStorage.removeItem('flows');
                    localStorage.removeItem('filterFlag');
                    localStorage.removeItem('flowsinventory');
                    this.router.navigate(["/flows/details/" + response.flowid]);
                    this.loaderService.hide();
                }, error => {
                    this.loaderService.hide();
                    var errorMsg = error && error.error && error.error['error-description'] ? error.error['error-description'] : (error && error.error && error.error['error-description']) ? error.error['error-auxiliary-message'] : "Unable to update";
                    this.toaster.error(errorMsg, "Error!");
                    this.toaster.error(errorMsg, "Error!");
                });
            }
        });
    }
    setProtectedpath(e) {
        this.flowEditForm.controls['allocate_protected_path'].setValue(e.target.checked);
        this.allocate_protected_path = e.target.checked;
    }
    /**Delete flow */
    deleteFlow() {
        let is2FaEnabled = localStorage.getItem('is2FaEnabled');
        var self = this;
        const modalReff = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Delete Flow";
        modalReff.componentInstance.content = 'Are you sure you want to perform delete action ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                if (is2FaEnabled == 'true') {
                    const modalRef = this.modalService.open(_common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_10__["OtpComponent"]);
                    modalRef.componentInstance.emitService.subscribe(otp => {
                        if (otp) {
                            this.loaderService.show("Deleting Flow");
                            this.flowService.deleteFlow(this.flowDetail.flowid, { code: otp }, response => {
                                modalRef.close();
                                this.toaster.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].flow_deleted, "Success!");
                                this.loaderService.hide();
                                localStorage.removeItem('flows');
                                this.router.navigate(["/flows"]);
                            }, error => {
                                this.loaderService.hide();
                                this.toaster.error(error["error-auxiliary-message"], "Error!");
                            });
                        }
                        else {
                            this.toaster.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].otp_not_detected, "Error!");
                        }
                    }, error => {
                    });
                }
                else {
                    const modalRef2 = this.modalService.open(_common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_14__["ModalComponent"]);
                    modalRef2.componentInstance.title = "Warning";
                    modalRef2.componentInstance.content = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_16__["MessageObj"].delete_flow_not_authorised;
                }
            }
        });
    }
    getflowList() {
        var ref = this;
        let filtersOptions = { controller: true, _: new Date().getTime() };
        this.flowService.getFlowsList(filtersOptions).subscribe((data) => {
            this.diverseFlowList = data || [];
            if (this.diverseFlowList && this.diverseFlowList.length) {
                this.diverseFlowList = this.diverseFlowList.filter(function (d) {
                    return d.flowid != ref.flowDetail.flowid && d.status != 'DOWN';
                });
            }
        }, error => {
            this.diverseFlowList = [];
        });
    }
    goToBack() {
        this._location.back();
    }
    getVLAN(type) {
        if (type == "source_port") {
            this.flowEditForm.controls["source_vlan"].setValue("0");
        }
        else {
            this.flowEditForm.controls["target_vlan"].setValue("0");
        }
    }
};
FlowEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-edit",
        template: __webpack_require__(/*! ./flow-edit.component.html */ "./src/app/modules/flows/flow-edit/flow-edit.component.html"),
        styles: [__webpack_require__(/*! ./flow-edit.component.css */ "./src/app/modules/flows/flow-edit/flow-edit.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_3__["FlowsService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_4__["ActivatedRoute"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _common_services_switch_service__WEBPACK_IMPORTED_MODULE_6__["SwitchService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_7__["SwitchidmaskPipe"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__["NgbModal"],
        _angular_common__WEBPACK_IMPORTED_MODULE_11__["Location"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["Title"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_15__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
], FlowEditComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-graph/flow-graph.component.css":
/*!*******************************************************************!*\
  !*** ./src/app/modules/flows/flow-graph/flow-graph.component.css ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".topology-graph ul.line-legend li {\r\n    position: relative;\r\n    display: inline-block;\r\n    padding-left: 20px;\r\n    padding-right: 15px;\r\n    height: auto;\r\n}\r\n\r\n.line-legend li:first-child:before {\r\n    height: 14px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 3px;\r\n    width: 14px;\r\n    content: \"\";\r\n    background: #182488;\r\n}\r\n\r\n.line-legend li:before {\r\n    height: 14px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 3px;\r\n    width: 14px;\r\n    content: \"\";\r\n    background: #aad200;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWdyYXBoL2Zsb3ctZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLE9BQU87SUFDUCxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFdBQVc7SUFDWCxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLE9BQU87SUFDUCxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFdBQVc7SUFDWCxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWdyYXBoL2Zsb3ctZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi50b3BvbG9neS1ncmFwaCB1bC5saW5lLWxlZ2VuZCBsaSB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcblxyXG4ubGluZS1sZWdlbmQgbGk6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIGhlaWdodDogMTRweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDNweDtcclxuICAgIHdpZHRoOiAxNHB4O1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJhY2tncm91bmQ6ICMxODI0ODg7XHJcbn1cclxuXHJcbi5saW5lLWxlZ2VuZCBsaTpiZWZvcmUge1xyXG4gICAgaGVpZ2h0OiAxNHB4O1xyXG4gICAgbGVmdDogMDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogM3B4O1xyXG4gICAgd2lkdGg6IDE0cHg7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgYmFja2dyb3VuZDogI2FhZDIwMDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/flows/flow-graph/flow-graph.component.html":
/*!********************************************************************!*\
  !*** ./src/app/modules/flows/flow-graph/flow-graph.component.html ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row topology-graph\" >\r\n  <div class=\"col-md-8\">\r\n    <app-dygraph (zoomChange)=\"zoom($event)\"></app-dygraph>\r\n  </div>\r\n  <div class=\"col-md-4 flow-path-filters filter\">\r\n    <div class=\"stats-graph  row\">\r\n      <ul id=\"flow_graph_directions\" class=\"line-legend col-lg-12\">\r\n        <li>Forward</li>\r\n        <li>Reverse</li>\r\n      </ul>\r\n      <form [formGroup]=\"filterForm\" class=\"col-md-12\">\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Timezone : </label>\r\n          <div class=\"col-sm-8\">\r\n              <select formControlName=\"timezone\" class=\"form-control\" name=\"timezone\" (change)=\"changeTimeZone()\">\r\n              <option value=\"UTC\">UTC</option>\r\n              <option value=\"LOCAL\">My Timezone</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">From: </label>\r\n          <div class=\"col-sm-8\">\r\n            <input formControlName=\"fromDate\" type=\"text\"  (change)=\"changeDate('fromDate',$event)\" datetime-picker  placeholder=\"From\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\" *ngIf=\"!f.auto_reload.value\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">To : </label>\r\n          <div class=\"col-sm-8\">\r\n            <input type=\"text\" formControlName=\"toDate\"    (change)=\"changeDate('toDate',$event)\" datetime-picker  placeholder=\"From\" class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Downsample : </label>\r\n          <div class=\"col-sm-8\">\r\n              <select formControlName=\"download_sample\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n              <option value=\"30s\">30s</option>\r\n              <option value=\"1m\">1m</option>\r\n              <option value=\"5m\">5m</option>\r\n              <option value=\"10m\">10m</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Graph : </label>\r\n          <div class=\"col-sm-8\">\r\n            <select formControlName=\"graph\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n              <option value=\"flow\">Flow</option>\r\n              <option value=\"flowpacket\">Loss packets</option>\r\n              <option value=\"flowmeter\">Meter</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\" *ngIf=\"f.graph.value=='flow' || f.graph.value=='flowmeter'\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Metric: </label>\r\n          <div class=\"col-sm-8\">\r\n             <select formControlName=\"metric\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n              <option *ngFor=\"let option of flowMetrics\" value=\"{{option.value}}\">{{option.label}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\" *ngIf=\"f.graph.value=='flowpacket'\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Direction: </label>\r\n          <div class=\"col-sm-8\">\r\n             <select formControlName=\"direction\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n              <option *ngFor=\"let option of packetMetrics\" value=\"{{option.value}}\">{{option.label}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\" *ngIf=\"f.graph.value=='flowmeter'\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Direction: </label>\r\n          <div class=\"col-sm-8\">\r\n              <select formControlName=\"meterdirection\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n              <option *ngFor=\"let option of metersDirection\" value=\"{{option.value}}\">{{option.label}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"inputEmail3\" class=\"col-sm-4 col-form-label\">Autoreload(sec): </label>\r\n          <div class=\"col-sm-1\">\r\n            <input formControlName=\"auto_reload\" value=\"1\" type=\"checkbox\">\r\n          </div>\r\n          <div class=\"col-sm-7\" *ngIf=\"f.auto_reload.value\">\r\n              <select formControlName=\"auto_reload_time\" name=\"auto_reload_time\" (change)=\"startAutoReload()\" class=\"form-control\">\r\n                <option value=\"\">Please select a value</option>\r\n                <option *ngFor=\"let option of getautoReloadValues\" value=\"{{option.value}}\">{{option.text}}</option>\r\n             </select>\r\n              <div class=\"invalid-feedback\" *ngIf=\"!f.auto_reload_time.valid && f.auto_reload_time.dirty\">\r\n              <div *ngIf=\"f.auto_reload_time.errors.pattern\">Auto reload time should be number</div>\r\n              <div *ngIf=\"f.auto_reload_time.errors.required\">Auto reload time required</div>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"col-xs-12 submit-btn\">\r\n        <div id=\"errorMesg\" class=\"error\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/flows/flow-graph/flow-graph.component.ts":
/*!******************************************************************!*\
  !*** ./src/app/modules/flows/flow-graph/flow-graph.component.ts ***!
  \******************************************************************/
/*! exports provided: FlowGraphComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowGraphComponent", function() { return FlowGraphComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");







let FlowGraphComponent = class FlowGraphComponent {
    constructor(dygraphService, formBuiler, flowService, toaster, commonService) {
        this.dygraphService = dygraphService;
        this.formBuiler = formBuiler;
        this.flowService = flowService;
        this.toaster = toaster;
        this.commonService = commonService;
        this.autoReloadTimerId = null;
        this.flowMetrics = [];
        this.packetMetrics = [];
        this.metersDirection = [];
        this.getautoReloadValues = this.commonService.getAutoreloadValues();
        this.zoom = (event) => {
            let formdata = this.filterForm.value;
            if (formdata.timezone == 'UTC') {
                var startDate = moment(new Date(event.minX)).utc().format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(event.maxX)).utc().format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['fromDate'].setValue(startDate);
                this.filterForm.controls['toDate'].setValue(endDate);
            }
            else {
                var startDate = moment(new Date(event.minX)).format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(event.maxX)).format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['fromDate'].setValue(startDate);
                this.filterForm.controls['toDate'].setValue(endDate);
            }
        };
    }
    ngOnChanges(change) {
        if (change.flowId && change.flowId.currentValue) {
            this.flowId = change.flowId.currentValue;
            this.ngOnInit();
            this.loadGraphData();
        }
    }
    ngOnInit() {
        let dateRange = this.getDateRange();
        this.filterForm = this.formBuiler.group({
            timezone: ["LOCAL"],
            fromDate: [dateRange.from],
            toDate: [dateRange.to],
            download_sample: ["30s"],
            graph: ["flow"],
            metric: ["packets"],
            direction: ["forward"],
            meterdirection: ["both"],
            auto_reload: [""],
            auto_reload_time: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("[0-9]*")])]
        });
        this.flowMetrics = this.dygraphService.getFlowMetricData();
        this.packetMetrics = this.dygraphService.getPacketsMetricData();
        this.metersDirection = this.dygraphService.getMetricDirections();
    }
    getDateRange() {
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        var fromStartDate = moment(yesterday).format("YYYY/MM/DD HH:mm:ss");
        var toEndDate = moment(date).format("YYYY/MM/DD HH:mm:ss");
        var utcStartDate = moment(yesterday).utc().format("YYYY/MM/DD HH:mm:ss");
        var utcToEndDate = moment(date).utc().format("YYYY/MM/DD HH:mm:ss");
        return { from: fromStartDate, to: toEndDate, utcStartDate: utcStartDate, utcToEndDate: utcToEndDate };
    }
    changeDate(input, event) {
        this.filterForm.controls[input].setValue(event.target.value);
        setTimeout(() => {
            this.loadGraphData();
        }, 0);
    }
    ngAfterViewInit() {
        //this.loadGraphData();
        this.filterForm.get("auto_reload").valueChanges.subscribe(value => {
            if (value) {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("^[0-9]*")]);
            }
            else {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].pattern("^[0-9]*")]);
                if (this.autoReloadTimerId) {
                    clearInterval(this.autoReloadTimerId);
                }
            }
            this.filterForm.get("auto_reload_time").setValue("");
            this.filterForm.get("auto_reload_time").updateValueAndValidity();
        });
        this.filterForm.get("auto_reload_time").valueChanges.subscribe(value => { });
    }
    startAutoReload() {
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        if (this.filterForm.controls["auto_reload"]) {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
            if (autoReloadTime) {
                this.autoReloadTimerId = setInterval(() => {
                    this.loadGraphData();
                }, 1000 * autoReloadTime);
            }
        }
        else {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
        }
    }
    changeTimeZone() {
        let formdata = this.filterForm.value;
        let timezone = formdata.timezone;
        let dateaRange = this.getDateRange();
        if (timezone == "UTC") {
            this.filterForm.controls['fromDate'].setValue(dateaRange.utcStartDate);
            this.filterForm.controls['toDate'].setValue(dateaRange.utcToEndDate);
        }
        else {
            this.filterForm.controls['fromDate'].setValue(dateaRange.from);
            this.filterForm.controls['toDate'].setValue(dateaRange.to);
        }
        this.loadGraphData();
    }
    loadGraphData() {
        let formdata = this.filterForm.value;
        let flowid = this.flowId;
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        let direction = (formdata.graph == 'flowmeter') ? formdata.meterdirection : formdata.direction;
        let downsampling = formdata.download_sample;
        let metric = formdata.metric;
        let timezone = formdata.timezone;
        if (this.filterForm.controls["auto_reload"]) {
            formdata.toDate = new Date(new Date(formdata.toDate).getTime() + (autoReloadTime * 1000));
        }
        let convertedStartDate = moment(new Date(formdata.fromDate)).utc().format("YYYY-MM-DD-HH:mm:ss");
        let convertedEndDate = moment(new Date(formdata.toDate)).utc().format("YYYY-MM-DD-HH:mm:ss");
        let startDate = moment(new Date(formdata.fromDate));
        let endDate = moment(new Date(formdata.toDate));
        if (moment(new Date(formdata.fromDate)).isAfter(new Date(formdata.toDate))) {
            this.toaster.error("Start date can not be after End date", "Error");
            return;
        }
        if (formdata.timezone == "UTC") {
            convertedStartDate = moment(new Date(formdata.fromDate)).format("YYYY-MM-DD-HH:mm:ss");
            convertedEndDate = moment(new Date(formdata.toDate)).format("YYYY-MM-DD-HH:mm:ss");
        }
        if (formdata.graph == "flow") {
            this.flowService
                .getFlowGraphData(flowid, convertedStartDate, convertedEndDate, downsampling, metric)
                .subscribe(res => {
                this.dygraphService.changeFlowGraphData({
                    data: res,
                    startDate: startDate,
                    endDate: endDate,
                    timezone: timezone
                });
            }, error => {
                this.dygraphService.changeFlowGraphData({
                    data: [],
                    startDate: startDate,
                    endDate: endDate,
                    timezone: timezone
                });
            });
        }
        else if (formdata.graph == "flowmeter") {
            this.flowService
                .getMeterGraphData("f75a6d6ee59744a8", convertedStartDate, convertedEndDate, downsampling, metric, direction)
                .subscribe(res => {
                this.dygraphService.changeMeterGraphData({
                    data: res,
                    startDate: startDate,
                    endDate: endDate,
                    type: null,
                    timezone: timezone,
                    loadfromcookie: null
                });
            }, error => {
                this.dygraphService.changeMeterGraphData({
                    data: [],
                    startDate: startDate,
                    endDate: endDate,
                    timezone: timezone
                });
            });
        }
        else {
            this.flowService
                .getFlowPacketGraphData(flowid, convertedStartDate, convertedEndDate, downsampling, direction)
                .subscribe(res => {
                this.dygraphService.changeFlowGraphData({
                    data: res,
                    startDate: startDate,
                    endDate: endDate,
                    timezone: timezone
                });
            }, error => {
                this.dygraphService.changeFlowGraphData({
                    data: [],
                    startDate: startDate,
                    endDate: endDate,
                    timezone: timezone
                });
            });
        }
    }
    get f() {
        return this.filterForm.controls;
    }
    ngOnDestroy() {
        if (this.autoReloadTimerId) {
            clearInterval(this.autoReloadTimerId);
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowGraphComponent.prototype, "flowId", void 0);
FlowGraphComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-graph",
        template: __webpack_require__(/*! ./flow-graph.component.html */ "./src/app/modules/flows/flow-graph/flow-graph.component.html"),
        styles: [__webpack_require__(/*! ./flow-graph.component.css */ "./src/app/modules/flows/flow-graph/flow-graph.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_2__["DygraphService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_4__["FlowsService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
], FlowGraphComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-layout/flow-layout.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/flows/flow-layout/flow-layout.component.ts ***!
  \********************************************************************/
/*! exports provided: FlowLayoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowLayoutComponent", function() { return FlowLayoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let FlowLayoutComponent = class FlowLayoutComponent {
    constructor() { }
    ngOnInit() {
    }
};
FlowLayoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow-layout',
        template: '<router-outlet></router-outlet>'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], FlowLayoutComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-list/flow-list.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/modules/flows/flow-list/flow-list.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LWxpc3QvZmxvdy1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zsb3dzL2Zsb3ctbGlzdC9mbG93LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhVGFibGUgdGZvb3Qge1xyXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgaS5mYXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZToxMnB4O1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy51cC1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTliMzY1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2I2NDU0NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0aCBzcGFuIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0ZCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIFxyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdHIgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/flows/flow-list/flow-list.component.html":
/*!******************************************************************!*\
  !*** ./src/app/modules/flows/flow-list/flow-list.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group input-group-sm\">\r\n                     <input type=\"text\" id=\"search-input\" class=\"form-control\"  (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                 </div>\r\n            </div>\r\n              <div  class=\"col-sm-8 text-right text-filters mb-3\">\r\n                <a *ngIf=\"enableFlowreRouteFlag\" class=\"cursor-pointer\" (click)=\"re_route_flows()\"><i class=\"fa fa-random\"></i>  Re-Route Flows | </a>\r\n                  <div *ngIf=\"storeLinkSetting && commonService.hasPermission('fw_flow_inventory')\" class=\"btn-group btn-group-sm btn-group-toggle\" data-toggle=\"buttons\">\r\n                    <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : filterFlag == 'all','btn-dark': filterFlag != 'all'}\">\r\n                      <input type=\"radio\" (click)=\"getFlowList(statusParams,'all')\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked> All\r\n                    </label>\r\n                    <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : filterFlag == 'controller','btn-dark': filterFlag != 'controller'}\">\r\n                      <input type=\"radio\" (click)=\"getFlowList(statusParams,'controller')\" name=\"options\" id=\"option2\" autocomplete=\"off\"> Controller\r\n                    </label>\r\n                    <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : filterFlag == 'inventory','btn-dark': filterFlag != 'inventory'}\">\r\n                      <input type=\"radio\" (click)=\"getFlowList(statusParams,'inventory')\" name=\"options\" id=\"option3\" autocomplete=\"off\"> Inventory\r\n                    </label>\r\n                    \r\n                  </div>\r\n                  &nbsp;\r\n                  <div class=\"btn-group\" *ngIf=\"storeLinkSetting && commonService.hasPermission('fw_flow_inventory') && filterFlag !='controller'\">\r\n                      <div ngbDropdown class=\"d-inline-block\">\r\n                        | <a class=\"cursor-pointer\" ngbDropdownToggle  ><i class=\"fa fa-cog\"></i> Filters | </a>\r\n                       <div ngbDropdownMenu style=\"padding:10px;\">\r\n                         <label  class=\"mb-1\"><b>Status</b></label>\r\n                         <div class=\"filterMenues\">\r\n                            <ng-template ngFor let-status [ngForOf]=\"statusList\">\r\n                                <button  class=\"dropdown-item cursor-pointer\" (click)=\"refreshFlowList(status)\">{{status}}<i class=\"fa fa-check\" *ngIf=\"status.toLowerCase() == activeStatus.toLowerCase()\"></i></button>\r\n                             </ng-template>\r\n                         </div>\r\n                         \r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <a *ngIf=\"storeLinkSetting && commonService.hasPermission('fw_flow_inventory')\" class=\"cursor-pointer\" (click)=\"refreshFlowList(activeStatus.toLowerCase())\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n                    <a *ngIf=\"!storeLinkSetting\" class=\"cursor-pointer\" (click)=\"refreshFlowList('')\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n              </div>\r\n         </div>\r\n         \r\n     </div>\r\n    <div class=\"clear clearfix\"></div>\r\n    <div class=\"col-sm-12\" *ngIf=\"storeLinkSetting\"> Status:{{statusParams.join(\",\")}}</div>\r\n</div>\r\n<app-flow-datatables [srcSwitch]=\"srcSwitch\" [textSearch]=\"textSearch\" (enableReroute)=\"enableFlowreRoute($event)\" (refresh)=\"refreshFlowList('')\" [filterFlag]=\"filterFlag\" [dstSwitch]=\"dstSwitch\" [data]=\"dataSet\" *ngIf=\"!loadingData\"></app-flow-datatables>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/flows/flow-list/flow-list.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/flows/flow-list/flow-list.component.ts ***!
  \****************************************************************/
/*! exports provided: FlowListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowListComponent", function() { return FlowListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_modules_flows_flow_datatables_flow_datatables_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/flows/flow-datatables/flow-datatables.component */ "./src/app/modules/flows/flow-datatables/flow-datatables.component.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");









let FlowListComponent = class FlowListComponent {
    constructor(router, flowService, toastr, loaderService, renderer, commonService) {
        this.router = router;
        this.flowService = flowService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.commonService = commonService;
        this.hide = true;
        this.storedData = [];
        this.statusParams = [];
        this.loadCount = 0;
        this.loadingData = true;
        this.storeLinkSetting = false;
        this.enableFlowreRouteFlag = false;
        this.statusList = [];
        this.filterFlag = localStorage.getItem('filterFlag') || 'controller';
        this.activeStatus = '';
        this.checkFlowData();
        let storeSetting = localStorage.getItem("haslinkStoreSetting") || false;
        this.storeLinkSetting = storeSetting && storeSetting == "1" ? true : false;
        this.statusList = JSON.parse(localStorage.getItem("linkStoreStatusList"));
        if (!this.storeLinkSetting) {
            localStorage.removeItem('filterFlag');
            this.filterFlag = 'controller';
        }
    }
    checkFlowData() {
        var flowListData = {};
        if (this.filterFlag == 'controller') {
            flowListData = JSON.parse(localStorage.getItem("flows"));
        }
        else {
            flowListData = JSON.parse(localStorage.getItem("flowsinventory"));
        }
        if (flowListData) {
            var storageTime = flowListData.timeStamp;
            var startTime = new Date(storageTime).getTime();
            var lastTime = new Date().getTime();
            let timeminDiff = lastTime - startTime;
            var diffMins = Math.round(((timeminDiff % 86400000) % 3600000) / 60000);
            if (diffMins < 30) {
                this.storedData = flowListData.list_data || [];
                this.dataSet = this.storedData;
                if (this.filterFlag == 'inventory') {
                    this.dataSet = this.dataSet.filter(function (d) {
                        return d['inventory-flow'];
                    });
                }
            }
            else {
                this.storedData = [];
                this.dataSet = this.storedData;
            }
        }
        else {
            this.storedData = [];
            this.dataSet = this.storedData;
        }
    }
    ngOnInit() {
        if (this.storeLinkSetting) {
            var cachedStatus = localStorage.getItem("activeFlowStatusFilter") || null;
            if (cachedStatus) {
                this.statusParams = [cachedStatus];
            }
            if (this.statusParams.length <= 0) {
                this.statusParams = ['Active'];
                localStorage.setItem("activeFlowStatusFilter", this.statusParams.join(","));
            }
        }
        this.activeStatus = this.statusParams.join(',');
        this.getFlowList(this.statusParams, this.filterFlag);
    }
    ngAfterViewInit() {
    }
    ngOnDestroy() {
    }
    fulltextSearch(e) {
        this.textSearch = e.target.value || ' ';
    }
    enableFlowreRoute(flag) {
        this.enableFlowreRouteFlag = flag.flag;
    }
    re_route_flows() {
        this.childFlowComponent.reRouteFlows();
    }
    getFlowList(statusParam, filter) {
        this.loadingData = true;
        this.dataSet = [];
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].loading_flows);
        localStorage.removeItem('flowDetail');
        if (filter != null) {
            this.filterFlag = filter;
            this.checkFlowData();
        }
        if (this.storedData && this.storedData.length <= 0) {
            var statusParam = statusParam.filter(function (el) {
                return el != null && el != "";
            });
            let filtersOptions = statusParam.length > 0 ? { status: statusParam.join(","), controller: this.filterFlag == 'controller', _: new Date().getTime() } : { controller: this.filterFlag == 'controller', _: new Date().getTime() };
            this.flowService.getFlowsList(filtersOptions).subscribe((data) => {
                this.dataSet = data || [];
                if (this.dataSet.length == 0) {
                    this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].no_flow_available, 'Information');
                }
                else {
                    var flowListData = JSON.stringify({ 'timeStamp': new Date().getTime(), "list_data": data });
                    localStorage.setItem('filterFlag', this.filterFlag);
                    if (this.filterFlag == 'controller') {
                        localStorage.setItem('flows', flowListData);
                    }
                    else {
                        localStorage.setItem('flowsinventory', flowListData);
                    }
                }
                if (this.filterFlag == 'inventory') {
                    this.dataSet = this.dataSet.filter(function (d) {
                        return d['inventory-flow'];
                    });
                }
                this.loadingData = false;
            }, error => {
                this.toastr.info("No Flows Available", 'Information');
                this.loaderService.hide();
                this.loadingData = false;
                this.dataSet = [];
            });
        }
        else {
            setTimeout(() => {
                this.loadingData = false;
                this.loaderService.hide();
            }, 100);
        }
    }
    refreshFlowList(statusParam) {
        this.srcSwitch = null;
        this.dstSwitch = null;
        this.textSearch = '';
        this.enableFlowreRouteFlag = false;
        this.statusParams = [];
        jQuery('#search-input').val('');
        this.statusParams.push(statusParam);
        if (this.filterFlag == 'controller') {
            localStorage.removeItem('flows');
        }
        else {
            localStorage.removeItem('flowsinventory');
        }
        this.storedData = [];
        this.getFlowList(this.statusParams, this.filterFlag);
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    triggerSearch() {
        setTimeout(() => {
            jQuery('#expandedSrcSwitchName').trigger('change');
            jQuery('#expandedTargetSwitchName').trigger('change');
        }, 1000);
    }
    ngOnChanges(change) {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowListComponent.prototype, "srcSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowListComponent.prototype, "dstSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(src_app_modules_flows_flow_datatables_flow_datatables_component__WEBPACK_IMPORTED_MODULE_7__["FlowDatatablesComponent"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", src_app_modules_flows_flow_datatables_flow_datatables_component__WEBPACK_IMPORTED_MODULE_7__["FlowDatatablesComponent"])
], FlowListComponent.prototype, "childFlowComponent", void 0);
FlowListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow-list',
        template: __webpack_require__(/*! ./flow-list.component.html */ "./src/app/modules/flows/flow-list/flow-list.component.html"),
        styles: [__webpack_require__(/*! ./flow-list.component.css */ "./src/app/modules/flows/flow-list/flow-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
], FlowListComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.css":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/flows/flow-path-graph/flow-path-graph.component.css ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy1wYXRoLWdyYXBoL2Zsb3ctcGF0aC1ncmFwaC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.html":
/*!******************************************************************************!*\
  !*** ./src/app/modules/flows/flow-path-graph/flow-path-graph.component.html ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row flow-path-graph\">\r\n  <div class=\"col-sm-12 col-md-12 col-lg-12\" style=\"margin-top:10px;\">\r\n    <div class=\"form-container mb-3\">\r\n      <form class=\"form-inline\"  [formGroup]=\"filterForm\">\r\n        <div class=\"form-group  col-md-3\">\r\n          <label>Timezone: </label> &nbsp;\r\n          <select formControlName=\"timezone\" class=\"form-control\" (change)=\"changeTimeZone()\">\r\n            <option value=\"UTC\">UTC</option>\r\n            <option value=\"My\">My Timezone</option>\r\n          </select>\r\n        </div>\r\n        <div class=\"form-group  col-md-3\">\r\n          <label>From: </label> &nbsp;\r\n          <input datetime-picker formControlName=\"startDate\" placeholder=\"Date Time:\" (change)=\"changeDate('startDate',$event)\">\r\n        </div>\r\n        <div class=\"form-group  col-md-3\">\r\n          <label>To: </label> &nbsp;\r\n          <input datetime-picker formControlName=\"endDate\" (change)=\"changeDate('endDate',$event)\" placeholder=\"Date Time:\">\r\n        </div>\r\n        <div class=\"form-group  col-md-3\">\r\n            <label>Metric: </label> &nbsp;\r\n            <select formControlName=\"metric\" class=\"form-control\" (change)=\"changeMetric()\">\r\n                <option value=\"{{metric.value}}\" *ngFor=\"let metric of flowMetrics\">{{metric.label}}</option>\r\n              </select>\r\n          </div>\r\n      </form>\r\n   </div>\r\n   <div class=\"col-md-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-1\">\r\n            <label class=\"text-label text-right\">Cookie:</label>\r\n        </div>\r\n        <div class=\"col-md-11 margin-zero\">\r\n        <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\" id=\"cookieforwardId\" *ngIf=\"type=='forward'\">\r\n            <label *ngFor=\"let cookie of cookieData\"  class=\"btn kilda_btn \"><span class=\"copy_to_clipBoard\" (click)=\"copyToClipCookie(cookie)\" [contextMenu]=\"cookieMenu\" [contextMenuSubject]=\"cookie\">{{cookie}}</span> </label>\r\n        </div>\r\n      <div class=\"btn-group btn-group-toggle\" data-toggle=\"buttons\" id=\"cookiereverseId\" *ngIf=\"type=='reverse'\">\r\n          <label *ngFor=\"let cookie of cookieData\" class=\"btn kilda_btn \"><span class=\"copy_to_clipBoard\" (click)=\"copyToClipCookie(cookie)\" [contextMenu]=\"cookieMenu\" [contextMenuSubject]=\"cookie\">{{cookie}}</span> </label>\r\n     </div>\r\n  </div>\r\n      </div>\r\n    </div>\r\n   \r\n    <div  class=\"chart-container flow-path-graph-container\" style=\"width:95% !important\">\r\n      <!-- <app-dygraph  (zoomChange)=\"zoom($event)\" ></app-dygraph> -->\r\n      <ng-dygraphs [data]=\"graph_data\" [noDataLabel]=\"'    '\" [options]=\"options\"></ng-dygraphs>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<context-menu #cookieMenu>\r\n    <ng-template contextMenuItem (execute)=\"copyToClipCookie($event.item);\">\r\n      Copy to Clipboard\r\n    </ng-template>\r\n  </context-menu>"

/***/ }),

/***/ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.ts":
/*!****************************************************************************!*\
  !*** ./src/app/modules/flows/flow-path-graph/flow-path-graph.component.ts ***!
  \****************************************************************************/
/*! exports provided: FlowPathGraphComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowPathGraphComponent", function() { return FlowPathGraphComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let FlowPathGraphComponent = class FlowPathGraphComponent {
    constructor(flowService, dygraphService, formBuilder, toaster, switchMask, clipBoardService) {
        this.flowService = flowService;
        this.dygraphService = dygraphService;
        this.formBuilder = formBuilder;
        this.toaster = toaster;
        this.switchMask = switchMask;
        this.clipBoardService = clipBoardService;
        this.flowMetrics = [];
        this.timezoneData = [{ label: 'UTC', value: 'UTC' }, { label: 'My Timezone', value: 'My' }];
        this.highestYaXis = null;
        this.graph_data = [];
        this.options = Object.assign({}, {
            width: "auto",
            chartHeight: "380",
            legend: "onmouseover",
            noDataLabel: "Please wait",
        });
        this.zoom = (minX, maxX, yRanges) => {
            let formdata = this.filterForm.value;
            if (formdata.timezone == 'UTC') {
                var startDate = moment(new Date(minX)).utc().format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(maxX)).utc().format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['startDate'].setValue(startDate);
                this.filterForm.controls['endDate'].setValue(endDate);
            }
            else {
                var startDate = moment(new Date(minX)).format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(maxX)).format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['startDate'].setValue(startDate);
                this.filterForm.controls['endDate'].setValue(endDate);
            }
        };
    }
    ngOnInit() {
        this.flowMetrics = this.dygraphService.getFlowMetricData();
        let dateRange = this.getDateRange();
        this.filterForm = this.formBuilder.group({
            timezone: ["My"],
            startDate: [dateRange.from],
            endDate: [dateRange.to],
            metric: ["bits"]
        });
        this.changeFilter();
    }
    getDateRange() {
        let fromStartDate = moment()
            .subtract(4, "hour")
            .format("YYYY/MM/DD HH:mm:ss");
        let toEndDate = moment().format("YYYY/MM/DD HH:mm:ss");
        var utcStartDate = moment().subtract(4, "hour").utc().format("YYYY/MM/DD HH:mm:ss");
        var utcToEndDate = moment().utc().format("YYYY/MM/DD HH:mm:ss");
        return { from: fromStartDate, to: toEndDate, utcStartDate: utcStartDate, utcToEndDate: utcToEndDate };
    }
    ngAfterViewInit() { }
    changeDate(input, event) {
        this.filterForm.controls[input].setValue(event.target.value);
        setTimeout(() => {
            this.changeFilter();
        }, 0);
    }
    changeTimeZone() {
        let formdata = this.filterForm.value;
        let timezone = formdata.timezone;
        let dateaRange = this.getDateRange();
        if (timezone == "UTC") {
            this.filterForm.controls['startDate'].setValue(dateaRange.utcStartDate);
            this.filterForm.controls['endDate'].setValue(dateaRange.utcToEndDate);
        }
        else {
            this.filterForm.controls['startDate'].setValue(dateaRange.from);
            this.filterForm.controls['endDate'].setValue(dateaRange.to);
        }
        this.changeFilter();
    }
    changeFilter() {
        this.getFlowPathStatsData();
    }
    getFlowPathStatsData() {
        let formData = this.filterForm.value;
        var fromDate = new Date(formData.startDate);
        var toDate = new Date(formData.endDate);
        if (moment(fromDate).isAfter(toDate)) {
            this.toaster.error("Start date can not be after End date", "error");
            return;
        }
        let fromStartDate, toEndDate, startDate, endDate;
        if (typeof fromDate !== "undefined" && typeof toDate !== "undefined") {
            if (formData.timezone == "UTC") {
                startDate = moment(fromDate).format("YYYY-MM-DD-HH:mm:ss");
                endDate = moment(toDate).format("YYYY-MM-DD-HH:mm:ss");
                fromStartDate = moment(fromDate).format("YYYY/MM/DD HH:mm:ss");
                toEndDate = moment(toDate).format("YYYY/MM/DD HH:mm:ss");
            }
            else {
                startDate = moment(fromDate)
                    .utc()
                    .format("YYYY-MM-DD-HH:mm:ss");
                endDate = moment(toDate)
                    .utc()
                    .format("YYYY-MM-DD-HH:mm:ss");
                fromStartDate = moment(fromDate).format("YYYY/MM/DD HH:mm:ss");
                toEndDate = moment(toDate).format("YYYY/MM/DD HH:mm:ss");
            }
        }
        else {
            if (formData.timezone == "UTC") {
                startDate = moment()
                    .subtract(4, "hour")
                    .format("YYYY-MM-DD-HH:mm:ss");
                endDate = moment().format("YYYY-MM-DD-HH:mm:ss");
                fromStartDate = moment()
                    .subtract(4, "hour")
                    .format("YYYY/MM/DD HH:mm:ss");
                toEndDate = moment().format("YYYY/MM/DD HH:mm:ss");
            }
            else {
                startDate = moment()
                    .subtract(4, "hour")
                    .utc()
                    .format("YYYY-MM-DD-HH:mm:ss");
                endDate = moment()
                    .utc()
                    .format("YYYY-MM-DD-HH:mm:ss");
                fromStartDate = moment()
                    .subtract(4, "hour")
                    .format("YYYY/MM/DD HH:mm:ss");
                toEndDate = moment().format("YYYY/MM/DD HH:mm:ss");
            }
        }
        let switches = [];
        if (this.type == "forward") {
            this.data.flowpath_forward.forEach(element => {
                switches.push(this.switchMask.transform(element.switch_id, "legacy"));
            });
        }
        else {
            this.data.flowpath_reverse.forEach(element => {
                switches.push(this.switchMask.transform(element.switch_id, "legacy"));
            });
        }
        let metric = formData.metric;
        let requestPayload = {
            flowid: this.data.flowid,
            // switches: switches,
            startdate: startDate,
            enddate: endDate,
            downsample: "30s",
            direction: this.type,
            metric: metric
        };
        this.flowService.getFlowPathStats(requestPayload).subscribe(response => {
            let dataforgraph = this.dygraphService.getCookieDataforFlowStats(response, this.type);
            let cookieBasedData = this.dygraphService.getCookieBasedData(response, this.type);
            this.cookieData = Object.keys(cookieBasedData);
            let data = (dataforgraph && dataforgraph.length) ? dataforgraph : [];
            this.plotFlowPathGraph(data, fromDate, toDate, this.type, formData.timezone, this.selectedCookie);
        }, error => {
            let dataforgraph = this.dygraphService.getCookieDataforFlowStats([], this.type);
            let cookieBasedData = this.dygraphService.getCookieBasedData([], this.type);
            this.cookieData = Object(cookieBasedData).keys;
            var data = (dataforgraph && dataforgraph.length) ? dataforgraph : [];
            this.plotFlowPathGraph(data, fromDate, toDate, this.type, formData.timezone, this.selectedCookie);
        });
    }
    plotFlowPathGraph(data, startDate, endDate, type, timezone, loadfromCookie) {
        var graph_data = this.dygraphService.computeFlowPathGraphData(data, startDate, endDate, type, timezone, loadfromCookie);
        var graphData = graph_data["data"];
        var labels = graph_data["labels"];
        var series = {};
        var colors = graph_data["color"];
        if (labels && labels.length) {
            for (var k = 0; k < labels.length; k++) {
                if (k != 0) {
                    series[labels[k]] = { color: colors[k - 1] };
                }
            }
        }
        this.graph_data = graphData;
        if (timezone == "UTC") {
            if (type == "forward") {
                this.options = Object.assign(this.options, {
                    labels: labels,
                    labelsUTC: true,
                    series: series,
                    legend: "onmouseover",
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoom
                });
            }
            else if (type == "reverse") {
                this.options = Object.assign(this.options, {
                    labels: labels,
                    series: series,
                    labelsUTC: true,
                    legend: "onmouseover",
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoom
                });
            }
        }
        else {
            if (type == "forward") {
                this.options = Object.assign(this.options, {
                    labels: labels,
                    series: series,
                    labelsUTC: false,
                    legend: "onmouseover",
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoom
                });
            }
            else if (type == "reverse") {
                this.options = Object.assign(this.options, {
                    labels: labels,
                    series: series,
                    labelsUTC: false,
                    legend: "onmouseover",
                    connectSeparatedPoints: true,
                    legendFormatter: this.dygraphService.legendFormatter,
                    zoomCallback: this.zoom
                });
            }
        }
    }
    ngOnDestroy() {
    }
    copyToClipCookie(data) {
        this.clipBoardService.copyFromContent(data);
        this.toaster.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].copied_to_clipboard);
    }
    changeMetric() {
        this.changeFilter();
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowPathGraphComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])("path-type"),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], FlowPathGraphComponent.prototype, "type", void 0);
FlowPathGraphComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-path-graph",
        template: __webpack_require__(/*! ./flow-path-graph.component.html */ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.html"),
        styles: [__webpack_require__(/*! ./flow-path-graph.component.css */ "./src/app/modules/flows/flow-path-graph/flow-path-graph.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_3__["DygraphService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_6__["SwitchidmaskPipe"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__["ClipboardService"]])
], FlowPathGraphComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-path/flow-path.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/modules/flows/flow-path/flow-path.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* Dropdown Button */\r\n  .dropdown {\r\n    position: relative;\r\n    display: inline-block;\r\n  }\r\n  .dropdown-content {\r\n    display: none;\r\n    position: absolute;\r\n    background-color: #f1f1f1;\r\n    min-width: 160px;\r\n    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n    z-index: 1;\r\n  }\r\n  /* Links inside the dropdown */\r\n  .dropdown-content a {\r\n    color: black;\r\n    padding: 12px 16px;\r\n    text-decoration: none;\r\n    display: block;\r\n  }\r\n  .dropdown-content a:hover {background-color: #ddd;}\r\n  .dropdown:hover .dropdown-content {display: block;}\r\n  \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9mbG93cy9mbG93LXBhdGgvZmxvdy1wYXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0JBQW9CO0VBQ2xCO0lBQ0Usa0JBQWtCO0lBQ2xCLHFCQUFxQjtFQUN2QjtFQUVBO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsZ0JBQWdCO0lBQ2hCLDRDQUE0QztJQUM1QyxVQUFVO0VBQ1o7RUFFQSw4QkFBOEI7RUFDOUI7SUFDRSxZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHFCQUFxQjtJQUNyQixjQUFjO0VBQ2hCO0VBR0EsMkJBQTJCLHNCQUFzQixDQUFDO0VBRWxELG1DQUFtQyxjQUFjLENBQUMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2Zsb3dzL2Zsb3ctcGF0aC9mbG93LXBhdGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIERyb3Bkb3duIEJ1dHRvbiAqL1xyXG4gIC5kcm9wZG93biB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIC5kcm9wZG93bi1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjFmMWYxO1xyXG4gICAgbWluLXdpZHRoOiAxNjBweDtcclxuICAgIGJveC1zaGFkb3c6IDBweCA4cHggMTZweCAwcHggcmdiYSgwLDAsMCwwLjIpO1xyXG4gICAgei1pbmRleDogMTtcclxuICB9XHJcbiAgXHJcbiAgLyogTGlua3MgaW5zaWRlIHRoZSBkcm9wZG93biAqL1xyXG4gIC5kcm9wZG93bi1jb250ZW50IGEge1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgcGFkZGluZzogMTJweCAxNnB4O1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgfVxyXG4gIFxyXG4gIFxyXG4gIC5kcm9wZG93bi1jb250ZW50IGE6aG92ZXIge2JhY2tncm91bmQtY29sb3I6ICNkZGQ7fVxyXG4gIFxyXG4gIC5kcm9wZG93bjpob3ZlciAuZHJvcGRvd24tY29udGVudCB7ZGlzcGxheTogYmxvY2s7fVxyXG4gICJdfQ== */"

/***/ }),

/***/ "./src/app/modules/flows/flow-path/flow-path.component.html":
/*!******************************************************************!*\
  !*** ./src/app/modules/flows/flow-path/flow-path.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n   <div id=\"ForwardRow\" class=\"col-xs-12 col-md-12 col-lg-12\"  style=\"border-top:1px solid #ccc; margin:0;\">\r\n      <div class=\"row mt-3 mb-3\">\r\n           <h3 class=\"text-center col-md-9\">FORWARD PATH</h3>\r\n           <div class=\"col-md-3\">\r\n              <a class=\"custom-button  flow-path-icons cursor-pointer\" [ngClass]= \"{'active':forwardPathGraph}\" (click)=\"viewPathGraph('forward')\" title=\"Forward Path Graph\">\r\n                  <i class=\"fa fa-bar-chart\"> </i>\r\n                </a>\r\n                <a *ngIf=\"!hasDiverseGroup && hasProtectedPath\" [ngClass]= \"{'active':showForwardProtectedPath}\" class=\"custom-button isl_switch_icon flow-path-icons cursor-pointer\" [ngStyle]= \"{'opacity':showForwardProtectedPath}\" (click)=\"showProtectedPath('forward',$event)\" title=\"Protected Path Forward\">\r\n                  <i class=\" fa fa-road\"> </i>\r\n                </a>\r\n                <a *ngIf=\"hasDiverseGroup\" class=\"custom-button isl_switch_icon flow-path-icons cursor-pointer\" [ngStyle]= \"{'opacity':forwardDiverse}\" (click)=\"toggleDiversePath('forward',$event)\" title=\"Diverse Group Forward\">\r\n                  <i class=\"icon-flows\"> </i>\r\n                </a>\r\n             </div>\r\n           \r\n     </div> \r\n   \r\n      <div class=\"row\">\r\n         <div class=\"col-md-12\">\r\n            <div  *ngFor=\"let path of forwardPathData; let i = index;\" class=\"path\">\r\n                <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.input_port}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"text cursor-pointer\" id=\"switch-name\" (click)=\"loadSwitchDetail(path.switch_id)\">{{path.switch_name}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.output_port}}</div>\r\n                <div *ngIf=\"i < (forwardPathData.length -1)\" class=\"line islPath\"  (click)=\"loadIslDetail(i,'forward')\"></div>\r\n                <div *ngIf=\"forwardPathData.length > 5 && index % 5 == 0\" class=\"vertical-line\"></div>\r\n                <div *ngIf=\"forwardPathData.length > 5 && index % 5 == 0\" class=\"horizontal-line\"></div>\r\n                <div *ngIf=\"forwardPathData.length > 5 && index % 5 == 0\" class=\"vertical-line-2\"></div>\r\n              </div>\r\n        </div>          \r\n      </div>\r\n       <div class=\"row diverse_protected_div\">\r\n            <div class=\"rightbar_overlay rightbar_overlay_diverse\"  *ngIf=\"showDiverseGroupForward \">\r\n                <div class=\"main-list\">\r\n                           <a *ngIf=\"showDiverseGroupForward\" class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn('forwardDiverse','out')\"><i class=\"fa fa-search-minus\"></i></a>\r\n                            <a *ngIf=\"showDiverseGroupForward\" class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn('forwardDiverse','in')\"><i class=\"fa fa-search-plus\"></i></a>\r\n                            <a  *ngIf=\"showDiverseGroupForward\" class= \"custom-icon-path cursor-pointer\" (click)=\"showFlowList('forward')\" ><i class=\"fa fa-list\" aria-hidden=\"true\"></i></a>\r\n                 </div>\r\n                  <ul *ngIf=\"showFlowsForward\">\r\n                      <li [ngClass]=\"{'active':commonSwitchFlagForward}\" (click)=\"showCommonSwitch('forward')\"> <span class=\"switch-circle\"><i class=\"switch-image\"></i></span>common switch</li>\r\n                      <li *ngIf=\"hasProtectedPath\" [ngClass]=\"{'selectedFLow': flowPathFlagForward['protected_path_'+flowId]}\" (click)=\"showFlowPath('protected_path_'+flowId,'forward')\"><span style=\"margin-right:5px;\" class=\"isl_switch_icon\"><i class=\"icon-flows\"></i></span><span>Protected Path</span></li>\r\n                      <li [ngClass]=\"{'selectedFLow': flowPathFlagForward[flow]}\" (click)=\"showFlowPath(flow,'forward')\" class=\"\" title=\"{{flow}}\"  *ngFor=\"let flow of pathFlows; let i=index;\">\r\n                        <span  [ngStyle]=\"{'background': colourCodes[i]}\"  class=\"color-pointer\">&nbsp;&nbsp;&nbsp;&nbsp;</span>  \r\n                        {{flow}}      \r\n                      </li>\r\n                    </ul>   \r\n            </div>\r\n            <div   [hidden]=\"!showDiverseGroupForward\" id=\"forwardPathWrapper\" style=\"width:100%;background:#d2d2d224;\" class=\"topology-container\" >\r\n              <label class=\"response_flow_label\">{{forwardLabelText}}</label>  \r\n              <div *ngIf=\"forwardPathLoader\" class=\"path-graph-component-loader\"></div>\r\n                <div class=\"path-graph-wrapper\" [hidden]=\"!loadforwardPath\"></div>\r\n                <svg id=\"svgForwardPath\" width=\"1000\" height=\"450\"></svg>\r\n            </div>\r\n            <div class=\"col-md-12\" *ngIf=\"showForwardProtectedPath\">\r\n              <div class=\"row\">\r\n                <h3 class=\"text-center col-md-9\">FORWARD PROTECTED PATH</h3>\r\n               </div>\r\n              <div  *ngFor=\"let path of flowPathData['protected_path']['flowpath_forward']; let i = index;\" class=\"path\">\r\n                  <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.input_port}}</div>\r\n                  <div class=\"line\"></div>\r\n                  <div class=\"text cursor-pointer\" id=\"switch-name\" (click)=\"loadSwitchDetail(path.switch_id)\">{{path.switch_name}}</div>\r\n                  <div class=\"line\"></div>\r\n                  <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.output_port}}</div>\r\n                  <div *ngIf=\"i < (flowPathData['protected_path']['flowpath_forward'].length -1)\" class=\"line islPath\"  (click)=\"loadIslDetail(i,'forward')\"></div>\r\n                  <div *ngIf=\"flowPathData['protected_path']['flowpath_forward'].length > 5 && index % 5 == 0\" class=\"vertical-line\"></div>\r\n                  <div *ngIf=\"flowPathData['protected_path']['flowpath_forward'].length > 5 && index % 5 == 0\" class=\"horizontal-line\"></div>\r\n                  <div *ngIf=\"flowPathData['protected_path']['flowpath_forward'].length > 5 && index % 5 == 0\" class=\"vertical-line-2\"></div>\r\n                </div>\r\n          </div> \r\n      </div>\r\n          \r\n      <app-flow-path-graph [data]=\"flowPathData\" path-type=\"forward\"  *ngIf=\"forwardPathGraph\"></app-flow-path-graph>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div id=\"ReversePath\" class=\"col-xs-12 col-md-12 col-lg-12\" style=\"border-top:1px solid #ccc; margin-top:10px;\">\r\n      <div class=\"row mt-3 mb-3\">\r\n        <h3 class=\"text-center col-md-9\">REVERSE PATH</h3>\r\n        <div class=\"col-md-3\">\r\n            <a class=\"custom-button  flow-path-icons cursor-pointer\" [ngClass]= \"{'active':reversePathGraph}\" (click)=\"viewPathGraph('reverse')\" title=\"Reverse Path Graph\">\r\n                <i class=\"fa fa-bar-chart\"> </i>\r\n              </a>\r\n              <a *ngIf=\"!hasDiverseGroup && hasProtectedPath\" [ngClass]= \"{'active':showReverseProtectedPath}\" class=\"custom-button isl_switch_icon flow-path-icons cursor-pointer\" [ngStyle]= \"{'opacity':showReverseProtectedPath}\" (click)=\"showProtectedPath('reverse',$event)\" title=\"Protected Path Reverse\">\r\n                <i class=\" fa fa-road\"> </i>\r\n              </a>\r\n              <a *ngIf=\"hasDiverseGroup\" class=\"custom-button isl_switch_icon flow-path-icons cursor-pointer\" [ngStyle]= \"{'opacity':reverseDiverse}\" (click)=\"toggleDiversePath('reverse',$event)\" title=\"Diverse Group Reverse\">\r\n                <i class=\"icon-flows\"> </i>\r\n              </a>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div  *ngFor=\"let path of reversePathData; let i = index;\" class=\"path\">\r\n                 <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.input_port}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"text cursor-pointer\" id=\"switch-name\" (click)=\"loadSwitchDetail(path.switch_id)\">{{path.switch_name}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.output_port}}</div>\r\n                <div *ngIf=\"i < (reversePathData.length -1)\" class=\"line islPath\"  (click)=\"loadIslDetail(i,'reverse')\"></div>\r\n                <div *ngIf=\"reversePathData.length > 5 && index % 5 == 0\" class=\"vertical-line\"></div>\r\n                <div *ngIf=\"reversePathData.length > 5 && index % 5 == 0\" class=\"horizontal-line\"></div>\r\n                <div *ngIf=\"reversePathData.length > 5 && index % 5 == 0\" class=\"vertical-line-2\"></div>\r\n              </div>\r\n        </div>          \r\n      </div>\r\n    \r\n    <div class=\"row reverse_diverse_protected\">\r\n        <div class=\"rightbar_overlay rightbar_overlay_diverse\" *ngIf=\"showDiverseGroupReverse\">\r\n            <div class=\"main-list\">\r\n                <a *ngIf=\"showDiverseGroupReverse\" class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn('reverseDiverse','out')\"><i class=\"fa fa-search-minus\"></i></a>\r\n                <a *ngIf=\"showDiverseGroupReverse\" class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn('reverseDiverse','in')\"><i class=\"fa fa-search-plus\"></i></a>\r\n                <a *ngIf=\"showDiverseGroupReverse\" class= \"custom-icon-path cursor-pointer\" (click)=\"showFlowList('reverse')\"><i class=\"fa fa-list\" aria-hidden=\"true\"></i></a>\r\n            </div>\r\n            <ul *ngIf=\"showFlowsReverse\">\r\n              <li [ngClass]=\"{'active':commonSwitchFlagReverse}\" (click)=\"showCommonSwitch('reverse')\"> <span class=\"switch-circle\"><i class=\"switch-image\"></i></span>common switch</li>\r\n              <li *ngIf=\"hasProtectedPath\" [ngClass]=\"{'selectedFLow': flowPathFlagReverse['protected_path_'+flowId]}\" (click)=\"showFlowPath('protected_path_'+flowId,'reverse')\"> <span style=\"margin-right:5px;\" class=\"isl_switch_icon\"><i class=\"icon-flows\"></i></span><span>Protected Path</span></li>\r\n             \r\n              <li [ngClass]=\"{'selectedFLow': flowPathFlagReverse[flow]}\" (click)=\"showFlowPath(flow,'reverse')\" class=\"\" title=\"{{flow}}\" *ngFor=\"let flow of pathFlows; let i=index;\">\r\n                <span  [ngStyle]=\"{'background': colourCodes[i]}\"  class=\"color-pointer\">&nbsp;&nbsp;&nbsp;&nbsp;</span>  \r\n                 {{flow}}      \r\n              </li>\r\n            </ul>   \r\n         </div>\r\n          <div  [hidden]=\"!showDiverseGroupReverse\" id=\"reversePathWrapper\" style=\"width:100%;background:#d2d2d224;\" class=\"topology-container\" >    \r\n           <label class=\"response_flow_label\">{{reverseLabelText}}</label>\r\n            <div *ngIf=\"reversePathLoader\" class=\"path-graph-component-loader\"></div>\r\n            <div class=\"path-graph-wrapper\" [hidden]=\"!loadreversePath\"></div>\r\n            <svg  id=\"svgReversePath\" width=\"1000\" height=\"450\"></svg>\r\n          </div> \r\n        \r\n          <div class=\"col-md-12\" *ngIf=\"showReverseProtectedPath\">\r\n           <div class=\"row\">\r\n            <h3 class=\"text-center col-md-9\">REVERSE PROTECTED PATH</h3>\r\n           </div>\r\n\r\n            <div  *ngFor=\"let path of flowPathData['protected_path']['flowpath_reverse']; let i = index;\" class=\"path\">\r\n                <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.input_port}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"text cursor-pointer\" id=\"switch-name\" (click)=\"loadSwitchDetail(path.switch_id)\">{{path.switch_name}}</div>\r\n                <div class=\"line\"></div>\r\n                <div class=\"number\" ngbTooltip=\"{{path.switch_name}}\">{{path.output_port}}</div>\r\n                <div *ngIf=\"i < (flowPathData['protected_path']['flowpath_reverse'].length -1)\" class=\"line islPath\"  (click)=\"loadIslDetail(i,'reverse')\"></div>\r\n                <div *ngIf=\"flowPathData['protected_path']['flowpath_reverse'].length > 5 && index % 5 == 0\" class=\"vertical-line\"></div>\r\n                <div *ngIf=\"flowPathData['protected_path']['flowpath_reverse'].length > 5 && index % 5 == 0\" class=\"horizontal-line\"></div>\r\n                <div *ngIf=\"flowPathData['protected_path']['flowpath_reverse'].length > 5 && index % 5 == 0\" class=\"vertical-line-2\"></div>\r\n              </div>\r\n        </div>\r\n\r\n    </div>\r\n        \r\n   <app-flow-path-graph [data]=\"flowPathData\" path-type=\"reverse\" *ngIf=\"reversePathGraph\"></app-flow-path-graph>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/flows/flow-path/flow-path.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/flows/flow-path/flow-path.component.ts ***!
  \****************************************************************/
/*! exports provided: FlowPathComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowPathComponent", function() { return FlowPathComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_services_flowpath_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/flowpath.service */ "./src/app/common/services/flowpath.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");








let FlowPathComponent = class FlowPathComponent {
    constructor(flowService, loaderService, commonService, flowpathService) {
        this.flowService = flowService;
        this.loaderService = loaderService;
        this.commonService = commonService;
        this.flowpathService = flowpathService;
        this.forwardPathGraph = false;
        this.reversePathGraph = false;
        this.reversePathLoader = false;
        this.loadreversePath = false;
        this.reverseGraphSvg = false;
        this.forwardGraphSvg = false;
        this.forwardDiverse = 0.5;
        this.reverseDiverse = 0.5;
        this.forwardPathLoader = false;
        this.forwardLoader = false;
        this.loadforward = false;
        this.loadforwardPath = false;
        this.showReversePath = true;
        this.showFlowsForward = false;
        this.showFlowsReverse = false;
        this.isDiverseForward = false;
        this.isDiverseReverse = false;
        this.flowPathFlagForward = [];
        this.flowPathFlagReverse = [];
        this.commonSwitchFlagReverse = false;
        this.commonSwitchFlagForward = false;
        this.forwardLabelText = "FORWARD PATH";
        this.reverseLabelText = "REVERSE PATH";
        this.diversePath = {};
        this.protectedPath = {};
        this.diverseGroup = [];
        this.colourCodes = [];
        this.pathFlows = [];
        this.protectedPathFlows = [];
        this.hasDiverseGroup = false;
        this.hasProtectedPath = false;
        this.forwardPathSwitches = [];
        this.reversePathSwitches = [];
        this.reversePathData = [];
        this.forwardPathData = [];
        this.showDiverseGroupReverse = false;
        this.showDiverseGroupForward = false;
        this.showProtectedGroupForward = false;
        this.showProtectedGroupReverse = false;
        this.diverseUniqueSwitches = [];
        this.diverseGroupCommonSwitch = [];
        this.toggleFilter = 'pathforward';
        this.toggleFilterReverse = 'pathreverse';
        this.showReverseProtectedPath = false;
        this.showForwardProtectedPath = false;
        this.pathData = [];
    }
    ngOnInit() {
        if (this.flowId) {
            this.getFlowPath(this.flowId);
        }
        else {
            console.error("Flow Id required");
        }
    }
    getFlowPath(flowId) {
        var self = this;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].loading_flow_path);
        this.flowService.getFlowPath(flowId).subscribe(data => {
            this.flowPathData = data;
            this.forwardPathData = data.flowpath_forward;
            this.reversePathData = data.flowpath_reverse;
            this.hasProtectedPath = this.flowPathData['protected_path'] && this.flowPathData['protected_path']['flowpath_forward'];
            this.loadDiverseGroup();
            this.loaderService.hide();
        }, error => {
            console.log('error in data');
            this.loaderService.hide();
        });
    }
    showProtectedPath(type, e) {
        this.forwardPathGraph = false;
        this.reversePathGraph = false;
        if (type == 'forward') {
            this.forwardLabelText = "FORWARD PROTECTED PATH";
            this.showForwardProtectedPath = (this.showForwardProtectedPath) ? false : true;
        }
        else if (type == 'reverse') {
            this.showReverseProtectedPath = (this.showReverseProtectedPath) ? false : true;
            this.reverseLabelText = "REVERSE PROTECTED PATH";
        }
    }
    plotForwardDiverse() {
        let self = this;
        var commonSwitches = [];
        var links = [];
        var diverseUniqueSwitches = [];
        var nodes = [];
        var diverseGroupCommonSwitch = [];
        Object.keys(this.diversePath).map(function (i, v) {
            var j = 0;
            for (let d of self.diversePath[i].forward_path) {
                var path_type = self.diversePath[i].path_type;
                if (j < self.diversePath[i].forward_path.length) {
                    j++;
                    commonSwitches.push({ switch_id: d.switch_id, switch_name: d.switch_name, flow: i });
                    if (typeof (self.diversePath[i].forward_path[j]) != 'undefined') {
                        links.push({ link_type: path_type, flow: i, source_detail: { out_port: d.output_port, in_port: d.input_port, id: d.switch_id }, target_detail: { out_port: self.diversePath[i].forward_path[j].output_port, in_port: self.diversePath[i].forward_path[j].input_port, id: self.diversePath[i].forward_path[j].switch_id }, source: { switch_id: d.switch_id, switch_name: d.switch_name }, target: { switch_id: self.diversePath[i].forward_path[j].switch_id, switch_name: self.diversePath[i].forward_path[j].switch_name }, colourCode: self.colourCodes[v], type: 'isl' });
                    }
                }
            }
        });
        // fetching unique switches in all diverse group
        if (commonSwitches && commonSwitches.length) {
            for (let switchid of commonSwitches) {
                if (!this.checkifSwitchExists(switchid, diverseUniqueSwitches)) {
                    diverseUniqueSwitches.push(switchid);
                }
                else {
                    if (!this.checkifSwitchExists(switchid, diverseGroupCommonSwitch)) {
                        diverseGroupCommonSwitch.push(switchid);
                    }
                }
            }
        }
        this.flowpathService.setCommonSwitch('forward', diverseGroupCommonSwitch);
        // creating nodes object array
        for (let d of diverseUniqueSwitches) {
            nodes.push(d);
        }
        var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgForwardPath');
        var element = $('#forwardPathWrapper');
        var positions = [];
        this.forwardPathLoader = true;
        this.loadforwardPath = true;
        this.flowpathService.initSimulation(nodes, links, svgElement, "forwardPathWrapper", 'forwardDiverse', positions, "diversepath-hover-txt", "forward_flow_value", "reverse_flow_value");
        this.flowpathService.forwardpathLoadedChange.subscribe((value) => {
            this.forwardPathLoader = value;
            this.loadforwardPath = value;
        });
    }
    checkifSwitchExists(switchval, arr) {
        var flag = false;
        if (arr && arr.length) {
            for (let val of arr) {
                if (val.switch_id == switchval.switch_id) {
                    flag = true;
                    break;
                }
            }
        }
        return flag;
    }
    plotReverseDiverse() {
        let self = this;
        var commonSwitches = [];
        var links = [];
        var nodes = [];
        var diverseUniqueSwitchesReverse = [];
        var diverseGroupCommonSwitchReverse = [];
        Object.keys(this.diversePath).map(function (i, v) {
            var j = 0;
            for (let d of self.diversePath[i].reverse_path) {
                var path_type = self.diversePath[i].path_type;
                if (j < self.diversePath[i].reverse_path.length) {
                    j++;
                    commonSwitches.push({ switch_id: d.switch_id, switch_name: d.switch_name, flow: i });
                    if (typeof (self.diversePath[i].reverse_path[j]) != 'undefined') {
                        links.push({ link_type: path_type, flow: i, source_detail: { out_port: d.output_port, in_port: d.input_port, id: d.switch_id }, target_detail: { out_port: self.diversePath[i].reverse_path[j].output_port, in_port: self.diversePath[i].reverse_path[j].input_port, id: self.diversePath[i].reverse_path[j].switch_id }, source: { switch_id: d.switch_id, switch_name: d.switch_name }, target: { switch_id: self.diversePath[i].reverse_path[j].switch_id, switch_name: self.diversePath[i].reverse_path[j].switch_name }, colourCode: self.colourCodes[v], type: 'isl' });
                    }
                }
            }
        });
        // fetching unique switches in all diverse group
        if (commonSwitches && commonSwitches.length) {
            for (let switchid of commonSwitches) {
                if (!this.checkifSwitchExists(switchid, diverseUniqueSwitchesReverse)) {
                    diverseUniqueSwitchesReverse.push(switchid);
                }
                else {
                    if (!this.checkifSwitchExists(switchid, diverseGroupCommonSwitchReverse)) {
                        diverseGroupCommonSwitchReverse.push(switchid);
                    }
                }
            }
        }
        this.flowpathService.setCommonSwitch('reverse', diverseGroupCommonSwitchReverse);
        // creating nodes object array
        for (let d of diverseUniqueSwitchesReverse) {
            nodes.push(d);
        }
        var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgReversePath');
        var element = $('#reversePathWrapper');
        this.reversePathLoader = true;
        this.loadreversePath = true;
        var positions = [];
        this.flowpathService.initSimulation(nodes, links, svgElement, "reversePathWrapper", 'reverseDiverse', positions, "diversepath-hover-txt", "reverse_flow_value", "forward_flow_value");
        this.flowpathService.reversepathLoadedChange.subscribe((value) => {
            this.reversePathLoader = value;
            this.loadreversePath = value;
        });
    }
    loadIslDetail(index, type) {
        if (type == 'forward') {
            var src_switch = this.forwardPathData[index].switch_id;
            var src_port = this.forwardPathData[index].output_port;
            var dst_switch = this.forwardPathData[index + 1].switch_id;
            var dst_port = this.forwardPathData[index + 1].input_port;
        }
        else {
            var src_switch = this.reversePathData[index].switch_id;
            var src_port = this.reversePathData[index].output_port;
            var dst_switch = this.reversePathData[index + 1].switch_id;
            var dst_port = this.reversePathData[index + 1].input_port;
        }
        this.flowpathService.loadIslDetail(src_switch, src_port, dst_switch, dst_port);
    }
    zoomFn(type, dir) {
        if (type == 'forwardDiverse') {
            var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgForwardPath');
            this.showFlowsForward = false;
        }
        else if (type == 'reverseDiverse') {
            var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgReversePath');
            this.showFlowsReverse = false;
        }
        var direction = (dir == 'in') ? 1 : -1;
        this.flowpathService.zoomFn(direction, svgElement, type);
    }
    fetchFlowCommonSwitch(flowid, type) {
        if (type == 'forward') {
            var pathData = this.diversePath[flowid].forward_path;
            var flowSwitches = [];
            for (let d in pathData) {
                flowSwitches.push(pathData[d].switch_id);
            }
        }
        else if (type == 'reverse') {
            var pathData = this.diversePath[flowid].reverse_path;
            var flowSwitches = [];
            for (let d in pathData) {
                flowSwitches.push(pathData[d].switch_id);
            }
        }
        var commonSwitchinFlow = [];
        var dataCommon = this.flowpathService.getcommonSwitches(type);
        for (let d in dataCommon) {
            if (flowSwitches.indexOf(dataCommon[d].switch_id) != -1) {
                commonSwitchinFlow.push(dataCommon[d].switch_id);
            }
        }
        return commonSwitchinFlow;
    }
    showFlowPath(flowid, type) {
        if (type == 'forward') {
            var getCommonSwitchForFlow = this.fetchFlowCommonSwitch(flowid, type);
            var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgForwardPath');
            var flows = Object.keys(this.flowPathFlagForward);
            if (typeof (this.flowPathFlagForward[flowid]) != 'undefined' && this.flowPathFlagForward[flowid]) {
                var allSwitches = svgElement.selectAll(".forwardDiverse_circle");
                var allSwitchImages = svgElement.selectAll(".forwardDiverse_switch_image");
                var allText = svgElement.selectAll("text.forwardDiverse_text");
                var allPortCircles = svgElement.selectAll(".forwardDiverse_port_circle");
                var allPortText = svgElement.selectAll(".forwardDiverse_port_text");
                var allLinks = svgElement.selectAll(".link_forwardDiverse");
                d3__WEBPACK_IMPORTED_MODULE_4__["selectAll"](".forwardDiverse_link_" + flowid)
                    .transition()
                    .style("stroke-width", "2.5");
                allLinks.style("opacity", "1");
                allSwitches.style("opacity", "1");
                allSwitchImages.style("opacity", "1");
                allText.style("opacity", "1");
                allPortCircles.style("opacity", "1");
                allPortText.style("opacity", "1");
                this.flowPathFlagForward[flowid] = false;
            }
            else {
                if (flows && flows.length) {
                    flows.map((i, v) => {
                        if (this.flowPathFlagForward[i]) {
                            d3__WEBPACK_IMPORTED_MODULE_4__["selectAll"](".forwardDiverse_link_" + i)
                                .transition()
                                .style("stroke-width", "2.5");
                            this.flowPathFlagForward[i] = false;
                        }
                    });
                }
                var allSwitches = svgElement.selectAll(".forwardDiverse_circle");
                var allSwitchImages = svgElement.selectAll(".forwardDiverse_switch_image");
                var allText = svgElement.selectAll("text.forwardDiverse_text");
                var allPortCircles = svgElement.selectAll(".forwardDiverse_port_circle");
                var allPortText = svgElement.selectAll(".forwardDiverse_port_text");
                var flowportText = svgElement.selectAll(".forwardDiverse_port_text_" + flowid);
                var flowportCircles = svgElement.selectAll(".forwardDiverse_port_circle_" + flowid);
                var flowText = svgElement.selectAll("text.forwardDiverse_textcircle_" + flowid);
                var flowSwitches = svgElement.selectAll(".forwardDiverse_circle_" + flowid);
                var flowSwitchImages = svgElement.selectAll(".forwardDiverse_switch_image_" + flowid);
                var allLinks = svgElement.selectAll(".link_forwardDiverse");
                var links = svgElement.selectAll(".forwardDiverse_link_" + flowid);
                allSwitches.style('opacity', 0);
                allText.style('opacity', '0');
                allSwitchImages.style('opacity', 0);
                allPortCircles.style('opacity', 0);
                allPortText.style("opacity", "0");
                allLinks.style("opacity", "0");
                flowportCircles.style('opacity', 1);
                flowportText.style("opacity", "1");
                flowText.style('opacity', 1);
                flowSwitches.style('opacity', 1);
                flowSwitchImages.style('opacity', 1);
                links.style("opacity", "1");
                links.style("stroke-width", "5");
                for (let d in getCommonSwitchForFlow) {
                    var switchid = getCommonSwitchForFlow[d];
                    var switchcls = switchid.split(":").join("_");
                    var commonswitchinflow = svgElement.selectAll('.forwardDiverse_circle.sw_' + switchcls);
                    var commonswitchinflowtxt = svgElement.selectAll('.forwardDIverse_text.swtxt_' + switchcls);
                    var commonswitchimages = svgElement.selectAll('.forwardDiverse_switch_image.sw_img_' + switchcls);
                    commonswitchinflow.style('opacity', "1");
                    commonswitchinflowtxt.style('opacity', "1");
                    commonswitchimages.style('opacity', "1");
                }
                this.flowPathFlagForward[flowid] = true;
            }
        }
        else {
            var getCommonSwitchForFlow = this.fetchFlowCommonSwitch(flowid, type);
            var flows = Object.keys(this.flowPathFlagReverse);
            var svgElement = d3__WEBPACK_IMPORTED_MODULE_4__["select"]('#svgReversePath');
            if (typeof (this.flowPathFlagReverse[flowid]) != 'undefined' && this.flowPathFlagReverse[flowid]) {
                var allSwitches = svgElement.selectAll(".reverseDiverse_circle");
                var allSwitchImages = svgElement.selectAll(".reverseDiverse_switch_image");
                var allText = svgElement.selectAll("text.reverseDiverse_text");
                var allPortCircles = svgElement.selectAll(".reverseDiverse_port_circle");
                var allPortText = svgElement.selectAll(".reverseDiverse_port_text");
                var allLinks = svgElement.selectAll(".link_reverseDiverse");
                d3__WEBPACK_IMPORTED_MODULE_4__["selectAll"](".reverseDiverse_link_" + flowid)
                    .transition()
                    .style("stroke-width", "2.5");
                allLinks.style("opacity", "1");
                allSwitches.style("opacity", "1");
                allSwitchImages.style("opacity", "1");
                allText.style("opacity", "1");
                allPortCircles.style("opacity", "1");
                allPortText.style("opacity", "1");
                this.flowPathFlagReverse[flowid] = false;
            }
            else {
                if (flows && flows.length) {
                    flows.map((i, v) => {
                        if (this.flowPathFlagReverse[i]) {
                            d3__WEBPACK_IMPORTED_MODULE_4__["selectAll"](".reverseDiverse_link_" + i)
                                .transition()
                                .style("stroke-width", "2.5");
                            this.flowPathFlagReverse[i] = false;
                        }
                    });
                }
                var allSwitches = svgElement.selectAll(".reverseDiverse_circle");
                var allSwitchImages = svgElement.selectAll(".reverseDiverse_switch_image");
                var allText = svgElement.selectAll("text.reverseDiverse_text");
                var allPortCircles = svgElement.selectAll(".reverseDiverse_port_circle");
                var allPortText = svgElement.selectAll(".reverseDiverse_port_text");
                var flowportText = svgElement.selectAll(".reverseDiverse_port_text_" + flowid);
                var flowportCircles = svgElement.selectAll(".reverseDiverse_port_circle_" + flowid);
                var flowText = svgElement.selectAll("text.reverseDiverse_textcircle_" + flowid);
                var flowSwitches = svgElement.selectAll(".reverseDiverse_circle_" + flowid);
                var flowSwitchImages = svgElement.selectAll(".reverseDiverse_switch_image_" + flowid);
                var allLinks = svgElement.selectAll(".link_reverseDiverse");
                var links = svgElement.selectAll(".reverseDiverse_link_" + flowid);
                allSwitches.style('opacity', 0);
                allText.style('opacity', '0');
                allSwitchImages.style('opacity', 0);
                allPortCircles.style('opacity', 0);
                allPortText.style("opacity", "0");
                allLinks.style("opacity", "0");
                flowportCircles.style('opacity', 1);
                flowportText.style("opacity", "1");
                flowText.style('opacity', 1);
                flowSwitches.style('opacity', 1);
                flowSwitchImages.style('opacity', 1);
                links.style("opacity", "1");
                links.style("stroke-width", "5");
                for (let d in getCommonSwitchForFlow) {
                    var switchid = getCommonSwitchForFlow[d];
                    var switchcls = switchid.split(":").join("_");
                    var commonswitchinflow = svgElement.selectAll('.reverseDiverse_circle.sw_' + switchcls);
                    var commonswitchinflowtxt = svgElement.selectAll('.reverseDiverse_text.swtxt_' + switchcls);
                    var commonswitchimages = svgElement.selectAll('.reverseDiverse_switch_image.sw_img_' + switchcls);
                    commonswitchinflow.style('opacity', "1");
                    commonswitchinflowtxt.style('opacity', "1");
                    commonswitchimages.style('opacity', "1");
                }
                this.flowPathFlagReverse[flowid] = true;
            }
        }
    }
    showCommonSwitch(type) {
        if (type == 'forward') {
            var commmonSwitch = this.flowpathService.getcommonSwitches('forward');
            if (this.commonSwitchFlagForward) {
                this.commonSwitchFlagForward = false;
            }
            else {
                this.commonSwitchFlagForward = true;
            }
            for (var i = 0; i < commmonSwitch.length; i++) {
                var switch_id = commmonSwitch[i].switch_id;
                var element = document.getElementById("forwardDiverse_circle_" + switch_id);
                var switchcls = switch_id.split(":").join("_");
                var classes = "circle forwardDiverse_circle blue forwardDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                if (!this.commonSwitchFlagForward) {
                    classes = "circle forwardDiverse_circle blue forwardDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                }
                else {
                    classes = "circle forwardDiverse_circle common_switch blue hover forwardDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                }
                element.setAttribute("class", classes);
            }
        }
        else {
            var commmonSwitch = this.flowpathService.getcommonSwitches('reverse');
            if (this.commonSwitchFlagReverse) {
                this.commonSwitchFlagReverse = false;
            }
            else {
                this.commonSwitchFlagReverse = true;
            }
            for (var i = 0; i < commmonSwitch.length; i++) {
                var switch_id = commmonSwitch[i].switch_id;
                var element = document.getElementById("reverseDiverse_circle_" + switch_id);
                var switchcls = switch_id.split(":").join("_");
                var classes = "circle reverseDiverse_circle blue reverseDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                if (!this.commonSwitchFlagReverse) {
                    classes = "circle reverseDiverse_circle blue reverseDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                }
                else {
                    classes = "circle reverseDiverse_circle common_switch blue hover reverseDiverse_circle_" + commmonSwitch[i].flow + " sw_" + switchcls;
                }
                element.setAttribute("class", classes);
            }
        }
    }
    showFlowList(type) {
        if (type == 'forward') {
            this.showFlowsForward = this.showFlowsForward ? false : true;
        }
        else {
            this.showFlowsReverse = this.showFlowsReverse ? false : true;
        }
    }
    loadDiverseGroup() {
        var self = this;
        var protectedPath = null;
        var currentFlow = { type: "current_Flow", flowid: this.flowPathData.flowid, flowpath_forward: this.flowPathData['flowpath_forward'], flowpath_reverse: this.flowPathData['flowpath_reverse'] };
        if (this.flowPathData && this.flowPathData['protected_path'] && this.flowPathData['protected_path']['flowpath_forward']) {
            protectedPath = { type: "protected", flowid: "protected_path_" + this.flowPathData.flowid, flowpath_forward: this.flowPathData['protected_path']['flowpath_forward'], flowpath_reverse: this.flowPathData['protected_path']['flowpath_reverse'] };
        }
        var otherFLows = this.flowPathData && this.flowPathData['diverse_group'] && this.flowPathData['diverse_group']['other_flows'] ? this.flowPathData['diverse_group']['other_flows'] : null;
        this.hasDiverseGroup = this.flowPathData && this.flowPathData['diverse_group'] && this.flowPathData['diverse_group']['other_flows'];
        if (otherFLows && otherFLows.length) {
            if (currentFlow) {
                otherFLows.push(currentFlow);
            }
            if (protectedPath) {
                otherFLows.push(protectedPath);
            }
            for (let flow in otherFLows) {
                var coloCode = this.commonService.getCommonColorCode(flow, self.colourCodes);
                this.colourCodes.push(coloCode);
                if (otherFLows[flow] && otherFLows[flow]['flowpath_forward']) {
                    var flowid = otherFLows[flow]['flowid'];
                    var path_type = typeof (otherFLows[flow]['type']) != 'undefined' ? otherFLows[flow]['type'] : 'diverse';
                    if (this.diversePath && this.diversePath[flowid]) {
                        this.diversePath[flowid]['forward_path'] = otherFLows[flow]['flowpath_forward'];
                        this.diversePath[flowid]['path_type'] = path_type;
                    }
                    else {
                        this.diversePath[flowid] = {};
                        this.diversePath[flowid]['path_type'] = path_type;
                        this.diversePath[flowid]['forward_path'] = otherFLows[flow]['flowpath_forward'];
                    }
                }
                if (otherFLows[flow] && otherFLows[flow]['flowpath_reverse']) {
                    var flowid = otherFLows[flow]['flowid'];
                    var path_type = typeof (otherFLows[flow]['type']) != 'undefined' ? otherFLows[flow]['type'] : 'diverse';
                    if (this.diversePath && this.diversePath[flowid]) {
                        this.diversePath[flowid]['reverse_path'] = otherFLows[flow]['flowpath_reverse'];
                        this.diversePath[flowid]['path_type'] = path_type;
                    }
                    else {
                        this.diversePath[flowid] = {};
                        this.diversePath[flowid]['path_type'] = path_type;
                        this.diversePath[flowid]['reverse_path'] = otherFLows[flow]['flowpath_reverse'];
                    }
                }
            }
            // add flows to diverse group
            Object.keys(this.diversePath).map(function (i, v) {
                self.diverseGroup.push(i);
            });
        }
        this.pathFlows = Object.keys(this.diversePath);
        this.pathFlows = Object.keys(this.diversePath).filter(function (f, k) {
            return f != 'protected_path_' + self.flowId;
        });
    }
    viewDiverseGroup(type) {
        if (type == 'forward') {
            this.forwardLabelText = 'FORWARD DIVERSITY';
            this.showDiverseGroupForward = this.showDiverseGroupForward ? false : true;
            this.forwardDiverse = (this.showDiverseGroupForward) ? 1 : 0.5;
            this.forwardPathGraph = false;
            setTimeout(() => {
                this.plotForwardDiverse();
            });
        }
        else {
            this.reverseLabelText = "REVERSE DIVERSITY";
            this.showDiverseGroupReverse = this.showDiverseGroupReverse ? false : true;
            this.reverseDiverse = (this.showDiverseGroupReverse) ? 1 : 0.5;
            this.reversePathGraph = false;
            setTimeout(() => {
                this.plotReverseDiverse();
            });
        }
    }
    toggleDiversePath(type) {
        this.showForwardProtectedPath = false;
        this.showReverseProtectedPath = false;
        switch (type) {
            case 'forward':
                this.showFlowsForward = false;
                this.forwardGraphSvg = false;
                this.isDiverseForward = true;
                this.viewDiverseGroup(type);
                break;
            case 'reverse':
                this.toggleFilterReverse = 'reverseDiverse';
                this.showFlowsReverse = false;
                this.reverseGraphSvg = false;
                this.isDiverseReverse = true;
                this.viewDiverseGroup(type);
                break;
        }
    }
    viewPathGraph(type) {
        if (type == "forward") {
            this.showForwardProtectedPath = false;
            this.isDiverseForward = false;
            this.forwardDiverse = 0.5;
            this.forwardLabelText = "FORWARD PATH GRAPH";
            this.forwardPathGraph = this.forwardPathGraph ? false : true;
            this.showDiverseGroupForward = this.isDiverseForward;
            this.forwardGraphSvg = this.forwardGraphSvg ? false : true;
            if (!this.forwardPathGraph && this.isDiverseForward) {
                this.forwardLabelText = "FORWARD DIVERSITY";
            }
        }
        else {
            this.isDiverseReverse = false;
            this.showReverseProtectedPath = false;
            this.reverseDiverse = 0.5;
            this.reverseLabelText = "REVERSE PATH GRAPH";
            this.reversePathGraph = this.reversePathGraph ? false : true;
            this.showReversePath = this.reversePathGraph ? false : true;
            this.showDiverseGroupReverse = this.isDiverseReverse;
            this.reverseGraphSvg = this.reverseGraphSvg ? false : true;
            if (!this.reversePathGraph && this.isDiverseReverse) {
                this.reverseLabelText = "REVERSE DIVERSITY";
            }
        }
    }
    ngOnDestroy() {
        this.reversePathGraph = false;
        this.forwardPathGraph = false;
        this.showDiverseGroupForward = false;
        this.showDiverseGroupReverse = false;
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowPathComponent.prototype, "flowId", void 0);
FlowPathComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-path",
        template: __webpack_require__(/*! ./flow-path.component.html */ "./src/app/modules/flows/flow-path/flow-path.component.html"),
        styles: [__webpack_require__(/*! ./flow-path.component.css */ "./src/app/modules/flows/flow-path/flow-path.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"],
        src_app_common_services_flowpath_service__WEBPACK_IMPORTED_MODULE_6__["FlowpathService"]])
], FlowPathComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow-search/flow-search.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/modules/flows/flow-search/flow-search.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy1zZWFyY2gvZmxvdy1zZWFyY2guY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/flows/flow-search/flow-search.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/modules/flows/flow-search/flow-search.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <form [formGroup]=\"flowSearchForm\" class=\"form-inline col-sm-12\" (ngSubmit)=\"searchFlow()\">\r\n      <div class=\"input-group input-group-sm w-100\" >\r\n          <input formControlName=\"flowID\"  type=\"text\" class=\"form-control\" placeholder=\"Enter Flow ID\" aria-label=\"Enter Flow ID\" aria-describedby=\"basic-addon2\" [ngClass]=\"{ 'is-invalid': submitted && f.flowID.errors }\" required>\r\n          <div class=\"input-group-append\">\r\n            <button class=\"btn btn-dark\">Search</button>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"submitted && f.flowID.errors\" class=\"invalid-feedback\">\r\n          <div *ngIf=\"f.flowID.errors.required\">Please enter flow ID</div>\r\n      </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/flows/flow-search/flow-search.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/flows/flow-search/flow-search.component.ts ***!
  \********************************************************************/
/*! exports provided: FlowSearchComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowSearchComponent", function() { return FlowSearchComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");




let FlowSearchComponent = class FlowSearchComponent {
    constructor(router, formBuilder) {
        this.router = router;
        this.formBuilder = formBuilder;
        this.submitted = false;
    }
    ngOnInit() {
        this.flowSearchForm = this.formBuilder.group({
            flowID: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    }
    /** getter to get form fields */
    get f() {
        return this.flowSearchForm.controls;
    }
    searchFlow() {
        this.submitted = true;
        if (this.flowSearchForm.invalid) {
            return;
        }
        localStorage.setItem("filterFlag", 'controller');
        this.router.navigate([
            "/flows/details/" + this.flowSearchForm.controls.flowID.value
        ]);
    }
};
FlowSearchComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-flow-search",
        template: __webpack_require__(/*! ./flow-search.component.html */ "./src/app/modules/flows/flow-search/flow-search.component.html"),
        styles: [__webpack_require__(/*! ./flow-search.component.css */ "./src/app/modules/flows/flow-search/flow-search.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_2__["Router"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
], FlowSearchComponent);



/***/ }),

/***/ "./src/app/modules/flows/flow/flow.component.css":
/*!*******************************************************!*\
  !*** ./src/app/modules/flows/flow/flow.component.css ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvZmxvd3MvZmxvdy9mbG93LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/flows/flow/flow.component.html":
/*!********************************************************!*\
  !*** ./src/app/modules/flows/flow/flow.component.html ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"switchdetails_div\">\r\n  <div class=\"row\">\r\n    <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n    <a routerLink=\"add-new\" class=\"btn btn-sm btn-dark pull-right\" *ngIf=\"commonService.hasPermission('fw_flow_create')\">Add New Flow</a>\r\n    <ul class=\"nav nav-pills\">\r\n        <li [ngClass]=\"{'active': openedTab == 'search'}\"><a href=\"javascript:void(0);\" (click)=\"openTab('search');\">Search</a></li>\r\n        <li [ngClass]=\"{'active': openedTab == 'list'}\"><a href=\"javascript:void(0);\" (click)=\"openTab('list');\">List</a></li>\r\n      </ul>\r\n      <div class=\"tab-content clearfix\">\r\n        <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'search'}\">\r\n          <div class=\"row\">\r\n              <div class=\"col-md-4\"><app-flow-search  *ngIf=\"openedTab == 'search'\"></app-flow-search></div>\r\n          </div>\r\n        </div>\r\n        <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'list'}\">\r\n            <app-flow-list *ngIf=\"openedTab == 'list' && loadFlows\"  [srcSwitch]=\"src\" [dstSwitch]=\"dst\" ></app-flow-list>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/flows/flow/flow.component.ts":
/*!******************************************************!*\
  !*** ./src/app/modules/flows/flow/flow.component.ts ***!
  \******************************************************/
/*! exports provided: FlowComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowComponent", function() { return FlowComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let FlowComponent = class FlowComponent {
    constructor(titleService, route, commonService, storeLinkService, flowService, loaderService, toastr, router) {
        this.titleService = titleService;
        this.route = route;
        this.commonService = commonService;
        this.storeLinkService = storeLinkService;
        this.flowService = flowService;
        this.loaderService = loaderService;
        this.toastr = toastr;
        this.router = router;
        this.openedTab = 'search';
        this.src = null;
        this.dst = null;
        this.loadFlows = false;
        if (!this.commonService.hasPermission('menu_flows')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Flows');
        this.src = this.route.snapshot.queryParamMap.get('src');
        this.dst = this.route.snapshot.queryParamMap.get('dst');
        if (this.src || this.dst) {
            this.openedTab = 'list';
            this.loadFlows = true;
        }
        this.getStoreLinkSettings();
    }
    openTab(tab) {
        this.openedTab = tab;
        if (tab == 'list') {
            this.loadFlows = true;
        }
        else {
            this.src = null;
            this.dst = null;
        }
    }
    copyToClip(event, item) {
        //console.log('event', event,item, this[item]);
    }
    getStatusList() {
        if (!localStorage.getItem('linkStoreStatusList')) {
            this.flowService.getStatusList().subscribe((statuses) => {
                localStorage.setItem('linkStoreStatusList', JSON.stringify(statuses));
                this.loaderService.hide();
            }, (error) => {
                localStorage.setItem('linkStoreStatusList', JSON.stringify([]));
                this.loaderService.hide();
            });
        }
        else {
            this.loaderService.hide();
        }
    }
    getStoreLinkSettings() {
        if (!localStorage.getItem('linkStoreSetting')) {
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].link_storage_config);
            let query = { _: new Date().getTime() };
            this.storeLinkService.getLinkStoreDetails(query).subscribe((settings) => {
                if (settings && settings['urls'] && typeof (settings['urls']['get-link']) != 'undefined' && typeof (settings['urls']['get-link']['url']) != 'undefined') {
                    localStorage.setItem('linkStoreSetting', JSON.stringify(settings));
                    localStorage.setItem('haslinkStoreSetting', "1");
                    this.getStatusList();
                }
                else {
                    localStorage.removeItem('linkStoreSetting');
                    localStorage.removeItem('haslinkStoreSetting');
                    this.loaderService.hide();
                }
            }, (err) => {
                this.loaderService.hide();
            });
        }
        else {
            this.getStatusList();
        }
    }
};
FlowComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flow',
        template: __webpack_require__(/*! ./flow.component.html */ "./src/app/modules/flows/flow/flow.component.html"),
        styles: [__webpack_require__(/*! ./flow.component.css */ "./src/app/modules/flows/flow/flow.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"],
        src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_5__["StoreSettingtService"],
        src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_6__["FlowsService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_8__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"]])
], FlowComponent);



/***/ }),

/***/ "./src/app/modules/flows/index.ts":
/*!****************************************!*\
  !*** ./src/app/modules/flows/index.ts ***!
  \****************************************/
/*! exports provided: FlowLayoutComponent, FlowComponent, FlowSearchComponent, FlowListComponent, FlowAddComponent, FlowEditComponent, FlowDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _flow_layout_flow_layout_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flow-layout/flow-layout.component */ "./src/app/modules/flows/flow-layout/flow-layout.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowLayoutComponent", function() { return _flow_layout_flow_layout_component__WEBPACK_IMPORTED_MODULE_0__["FlowLayoutComponent"]; });

/* harmony import */ var _flow_flow_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./flow/flow.component */ "./src/app/modules/flows/flow/flow.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowComponent", function() { return _flow_flow_component__WEBPACK_IMPORTED_MODULE_1__["FlowComponent"]; });

/* harmony import */ var _flow_search_flow_search_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./flow-search/flow-search.component */ "./src/app/modules/flows/flow-search/flow-search.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowSearchComponent", function() { return _flow_search_flow_search_component__WEBPACK_IMPORTED_MODULE_2__["FlowSearchComponent"]; });

/* harmony import */ var _flow_list_flow_list_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./flow-list/flow-list.component */ "./src/app/modules/flows/flow-list/flow-list.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowListComponent", function() { return _flow_list_flow_list_component__WEBPACK_IMPORTED_MODULE_3__["FlowListComponent"]; });

/* harmony import */ var _flow_add_flow_add_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./flow-add/flow-add.component */ "./src/app/modules/flows/flow-add/flow-add.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowAddComponent", function() { return _flow_add_flow_add_component__WEBPACK_IMPORTED_MODULE_4__["FlowAddComponent"]; });

/* harmony import */ var _flow_edit_flow_edit_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./flow-edit/flow-edit.component */ "./src/app/modules/flows/flow-edit/flow-edit.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowEditComponent", function() { return _flow_edit_flow_edit_component__WEBPACK_IMPORTED_MODULE_5__["FlowEditComponent"]; });

/* harmony import */ var _flow_detail_flow_detail_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./flow-detail/flow-detail.component */ "./src/app/modules/flows/flow-detail/flow-detail.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowDetailComponent", function() { return _flow_detail_flow_detail_component__WEBPACK_IMPORTED_MODULE_6__["FlowDetailComponent"]; });










/***/ }),

/***/ "./src/app/modules/home/home.component.css":
/*!*************************************************!*\
  !*** ./src/app/modules/home/home.component.css ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/home/home.component.html":
/*!**************************************************!*\
  !*** ./src/app/modules/home/home.component.html ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<h1 class=\"text-center\">WELCOME TO OPEN KILDA</h1>"

/***/ }),

/***/ "./src/app/modules/home/home.component.ts":
/*!************************************************!*\
  !*** ./src/app/modules/home/home.component.ts ***!
  \************************************************/
/*! exports provided: HomeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HomeComponent", function() { return HomeComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");



let HomeComponent = class HomeComponent {
    constructor(titleService) {
        this.titleService = titleService;
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Home');
    }
};
HomeComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-home',
        template: __webpack_require__(/*! ./home.component.html */ "./src/app/modules/home/home.component.html"),
        styles: [__webpack_require__(/*! ./home.component.css */ "./src/app/modules/home/home.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"]])
], HomeComponent);



/***/ }),

/***/ "./src/app/modules/isl/datatable/datatable.component.css":
/*!***************************************************************!*\
  !*** ./src/app/modules/isl/datatable/datatable.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n.dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 20px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state, #portdetails_div .rep_div.down-state {  \r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state:before, #portdetails_div .rep_div.down-state:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 4px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n}\r\n\r\n.divTableBody.up-state .divTableCell:first-child {\r\n    border-left: 3px solid #19b365;\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    background: #f00;   \r\n}\r\n\r\n.tab-content table.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    display: none;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state, #portdetails_div .rep_div.down-state {  \r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n#portdetails_div .rep_div.down-state:before {\r\n    background: #f00;\r\n}\r\n\r\n.divTableBody.down-state .divTableCell:first-child {\r\n    border-left: 3px solid #f00;\r\n}\r\n\r\n#refresh_list {margin-bottom: 15px;}\r\n\r\n.flow-table-wrapper{\r\n    height: 100%;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pc2wvZGF0YXRhYmxlL2RhdGF0YWJsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixjQUFjO0FBQ2xCOztBQUdBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsTUFBTTtJQUNOLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsTUFBTTtJQUNOLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUdBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsc0JBQXNCO0FBQzFCOztBQUdBO1FBQ1Esa0JBQWtCO1FBQ2xCLHVCQUF1QjtRQUN2QixtQkFBbUI7UUFDbkIsK0JBQStCO1FBQy9CLDRCQUE0QjtRQUM1QixnQkFBZ0I7UUFDaEIsc0JBQXNCOztBQUU5Qjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGlDQUFpQztJQUNqQyx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtHQUNHLDZCQUE2QjtBQUNoQzs7QUFFQTtRQUNRLDZCQUE2QjtBQUNyQzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsTUFBTTtJQUNOLFNBQVM7SUFDVCxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksMkJBQTJCO0FBQy9COztBQUVBLGVBQWUsbUJBQW1CLENBQUM7O0FBRW5DO0lBQ0ksWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaXNsL2RhdGF0YWJsZS9kYXRhdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4uZGF0YVRhYmxlIHRmb290IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIGkuZmF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6MTJweDtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSAuZmxvd0RhdGFSb3cudXAtc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogIzE5YjM2NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy5kb3duLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICNiNjQ1NDU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMTBweDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGhlYWQgdGggc3BhbiB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDIwcHgpO1xyXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGQge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4IDEwcHggMThweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRib2R5IHRyIHRkOmZpcnN0LWNoaWxkIHtcclxuICAgIHBhZGRpbmctbGVmdDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZGF0YVRhYmxlc193cmFwcGVyIC5kYXRhVGFibGVzX2ZpbHRlciBpbnB1dCB7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYWFhICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDMwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAyNDBweCAhaW1wb3J0YW50O1xyXG4gICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRib2R5IHRyOm50aC1jaGlsZChvZGQpe1xyXG4gICBiYWNrZ3JvdW5kOiNmMWYxZjEgIWltcG9ydGFudDtcclxufVxyXG5cclxudGJvZHkgdHI6bnRoLWNoaWxkKGV2ZW4pe1xyXG4gICAgICAgIGJhY2tncm91bmQ6I2ZmZmZmZiAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4jcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LnVwLXN0YXRlLCAjcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LmRvd24tc3RhdGUgeyAgXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbiNwb3J0ZGV0YWlsc19kaXYgLnJlcF9kaXYudXAtc3RhdGU6YmVmb3JlLCAjcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LmRvd24tc3RhdGU6YmVmb3JlIHtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICMxOWIzNjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogNHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4uZGl2VGFibGVCb2R5LnVwLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjMTliMzY1O1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogI2YwMDsgICBcclxufVxyXG5cclxuLnRhYi1jb250ZW50IHRhYmxlLmRhdGFUYWJsZSAuZmxvd0RhdGFSb3cuZG93bi1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4jcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LnVwLXN0YXRlLCAjcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LmRvd24tc3RhdGUgeyAgXHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbiNwb3J0ZGV0YWlsc19kaXYgLnJlcF9kaXYuZG93bi1zdGF0ZTpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogI2YwMDtcclxufVxyXG5cclxuLmRpdlRhYmxlQm9keS5kb3duLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQge1xyXG4gICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjZjAwO1xyXG59XHJcblxyXG4jcmVmcmVzaF9saXN0IHttYXJnaW4tYm90dG9tOiAxNXB4O31cclxuXHJcbi5mbG93LXRhYmxlLXdyYXBwZXJ7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/isl/datatable/datatable.component.html":
/*!****************************************************************!*\
  !*** ./src/app/modules/isl/datatable/datatable.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n              <div class=\"form-group input-group-sm\">\r\n                   <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n               </div>\r\n          </div>\r\n            <div class=\"col-sm-8 text-right text-filters mb-3\">\r\n               <a class=\"cursor-pointer\" (click)=\"refreshList()\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n            </div>\r\n       </div>\r\n       \r\n   </div>\r\n  <div class=\"clear clearfix\"></div>\r\n</div>\r\n<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table datatable id=\"isl-list-table\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\" style=\"font-size:13px;\">\r\n  <thead>\r\n    <tr>\r\n      <th>\r\n        <span title=\"Source Switch Name\">\r\n        Src Switch\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedSrcSwitchName\" [hidden]=\"!expandedSrcSwitchName\" />\r\n      </th>\r\n      <th > <span title=\"Source Switch\">Src Switch</span></th>\r\n      <th ><span title=\"Source Port\">Src Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcPort')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedSrcPort\" [hidden]=\"!expandedSrcPort\"/>\r\n      </th>\r\n      <th ><span title=\"Destination Switch Name\">Dst Switch Name</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDestinationSwitchName')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedDestinationSwitchName\" [hidden]=\"!expandedDestinationSwitchName\"/>\r\n      </th>\r\n      <th > <span title=\"Dst Switch\">Dst Switch</span></th>\r\n      <th ><span title=\"Destination Port\">Dst Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDestinationPort')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedDestinationPort\" [hidden]=\"!expandedDestinationPort\"/>\r\n      </th>\r\n      <th ><span title=\"Cost\">Cost </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedCost')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedCost\" [hidden]=\"!expandedCost\"/>\r\n      </th>\r\n      <th ><span title=\"State\">State </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedState\" [hidden]=\"!expandedState\"/>\r\n      </th>\r\n       <th><span title=\"Bandwidth(Mbps)\">Bandwidth(Mbps)</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedMaxBandwidth')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedMaxBandwidth\" [hidden]=\"!expandedMaxBandwidth\"/>\r\n      </th>\r\n      <th><span title=\"Available Bandwidth(%)\">Available Bandwidth(%)</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedAvailableSpeed')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedAvailableSpeed\" [hidden]=\"!expandedAvailableSpeed\"/>\r\n      </th>\r\n      <th><span title=\"Available Bandwidth(Mbps)\">Available Bandwidth(Mbps) </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedAvailableBandwidth')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedAvailableBandwidth\" [hidden]=\"!expandedAvailableBandwidth\"/>\r\n      </th>\r\n      <th ><span title=\"BFD\">BFD</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBfd')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedBfd\" [hidden]=\"!expandedBfd\"/>\r\n      </th>\r\n      <th><span title=\"Latency\">Latency</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedLatency')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedLatency\" [hidden]=\"!expandedLatency\"/>\r\n      </th>\r\n      <th ><span title=\"Unidirectional\">Unidirectional</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedUnidirectional')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedUnidirectional\" [hidden]=\"!expandedUnidirectional\"/>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr ngbTooltip=\"{{listItem.under_maintenance ? 'Under Maintenence' :''}}\" placement=\"bottom\" container=\"body\"  *ngFor=\"let listItem of data; let i = index\" [ngClass]=\"{'down-state': listItem.state == 'FAILED' , 'up-state': listItem.state != 'FAILED' , 'maintenance_isl': listItem.under_maintenance }\" class=\"flowDataRow\">\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.source_switch_name) }}\" (click)=\"showIslDetail(listItem)\" [contextMenu]=\"copySrcSwitchName\">\r\n        {{checkValue(listItem.source_switch_name)}}\r\n        <context-menu #copySrcSwitchName>\r\n          <ng-template contextMenuItem (execute)=\"copyToClip($event,'source_switch_name',i);\">\r\n            Copy to Clipboard\r\n          </ng-template>\r\n        </context-menu>\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.source_switch) }}\">\r\n        {{checkValue(listItem.source_switch)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.src_port) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.src_port)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.target_switch_name) }}\" (click)=\"showIslDetail(listItem)\" [contextMenu]=\"copyTrgtSwitchName\">\r\n        {{checkValue(listItem.target_switch_name)}}\r\n        <context-menu #copyTrgtSwitchName>\r\n          <ng-template contextMenuItem (execute)=\"copyToClip($event,'target_switch_name',i);\">\r\n            Copy to Clipboard\r\n          </ng-template>\r\n        </context-menu>\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.target_switch) }}\">\r\n        {{checkValue(listItem.target_switch)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.dst_port) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.dst_port)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.cost) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.cost)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.state) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.state)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValueInt(listItem.max_bandwidth) }}\" (click)=\"showIslDetail(listItem)\">\r\n          {{checkValueInt(listItem.max_bandwidth)}}\r\n        </td>\r\n      <td class=\"divTableCell\" title=\"{{ getPercentage(listItem.available_bandwidth, listItem.max_bandwidth) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{getPercentage(listItem.available_bandwidth, listItem.max_bandwidth)}}\r\n      </td>\r\n     \r\n      <td class=\"divTableCell\" title=\"{{ checkValueInt(listItem.available_bandwidth) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValueInt(listItem.available_bandwidth)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.enable_bfd) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.enable_bfd)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.latency) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.latency)}}\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{ checkValue(listItem.unidirectional) }}\" (click)=\"showIslDetail(listItem)\">\r\n        {{checkValue(listItem.unidirectional)}}\r\n      </td>\r\n      \r\n    \r\n    </tr>\r\n  </tbody>\r\n</table>\r\n<br>\r\n\r\n\r\n      "

/***/ }),

/***/ "./src/app/modules/isl/datatable/datatable.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/modules/isl/datatable/datatable.component.ts ***!
  \**************************************************************/
/*! exports provided: DatatableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DatatableComponent", function() { return DatatableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/isl-list.service */ "./src/app/common/services/isl-list.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");










let DatatableComponent = class DatatableComponent {
    constructor(router, httpClient, islListService, toastr, loaderService, renderer, clipboardService) {
        this.router = router;
        this.httpClient = httpClient;
        this.islListService = islListService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.clipboardService = clipboardService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.data = [];
        this.refresh = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.listUrl = "";
        this.listDataObservable = [];
        this.loadingData = 0;
        this.wrapperHide = true;
        this.loadCount = 0;
        this.expandedSrcSwitchName = false;
        this.expandedSrcPort = false;
        this.expandedCost = false;
        this.expandedDestinationSwitchName = false;
        this.expandedDestinationPort = false;
        this.expandedState = false;
        this.expandedAvailableSpeed = false;
        this.expandedMaxBandwidth = false;
        this.expandedAvailableBandwidth = false;
        this.expandedLatency = false;
        this.expandedUnidirectional = false;
        this.expandedBfd = false;
        this.clipBoardItems = [];
        this.showIslDetail = function (data) {
            this.router.navigate(["/isl/switch/isl/" + data.source_switch + "/" + data.src_port + "/" + data.target_switch + "/" + data.dst_port]);
        };
        this.wrapperHide = false;
    }
    getPercentage(val, baseVal) {
        if (val !== "" &&
            val != undefined &&
            baseVal !== "" &&
            baseVal != undefined) {
            let percentage = (val / baseVal) * 100;
            let percentage_fixed = percentage.toFixed(2);
            let value_percentage = percentage_fixed.split(".");
            if (value_percentage[1] > 0) {
                return percentage.toFixed(2);
            }
            else {
                return value_percentage[0];
            }
        }
        else {
            return "-";
        }
    }
    checkValue(value) {
        if (value === "" || value == undefined) {
            return "-";
        }
        else {
            return value;
        }
    }
    checkValueInt(value) {
        if (value === "" || value == undefined) {
            return "-";
        }
        else {
            return value / 1000;
        }
    }
    refreshList() {
        this.refresh.emit();
    }
    fulltextSearch(e) {
        var value = e.target.value;
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    ngOnInit() {
        let ref = this;
        this.dtOptions = {
            pageLength: 10,
            retrieve: true,
            autoWidth: false,
            colResize: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            language: {
                searchPlaceholder: "Search"
            }, drawCallback: function () {
                if (jQuery('#isl-list-table tbody tr').length < 10) {
                    jQuery('#isl-list-table_next').addClass('disabled');
                }
                else {
                    jQuery('#isl-list-table_next').removeClass('disabled');
                }
            }, "aoColumns": [
                { sWidth: '14%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '14%' },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '7%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '8%' }
            ],
            "columnDefs": [
                {
                    "targets": [1],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [4],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [9],
                    "type": "num-fmt"
                }
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $("input", this.header()).on("keyup change", function () {
                    if (that.search() !== this["value"]) {
                        that.search(this["value"]).draw();
                    }
                });
            });
        });
    }
    ngOnChanges(change) {
        if (change.data) {
            if (change.data.currentValue) {
                this.data = change.data.currentValue;
                this.clipBoardItems = this.data;
            }
        }
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    copyToClip(event, copyItem, index) {
        var copyData = this.checkValue(this.clipBoardItems[index][copyItem]);
        this.clipboardService.copyFromContent(copyData);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"])
], DatatableComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], DatatableComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], DatatableComponent.prototype, "refresh", void 0);
DatatableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-datatable",
        template: __webpack_require__(/*! ./datatable.component.html */ "./src/app/modules/isl/datatable/datatable.component.html"),
        styles: [__webpack_require__(/*! ./datatable.component.css */ "./src/app/modules/isl/datatable/datatable.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
        _angular_common_http__WEBPACK_IMPORTED_MODULE_4__["HttpClient"],
        _common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_2__["IslListService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_9__["ClipboardService"]])
], DatatableComponent);



/***/ }),

/***/ "./src/app/modules/isl/isl-detail/isl-detail.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/modules/isl/isl-detail/isl-detail.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".line-legend li:before {\r\n  height: 14px;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0px !important;\r\n  width: 14px;\r\n  content: \"\";\r\n  background: #aad200;\r\n}\r\n\r\n.line-legend li:first-child:before {\r\n  height: 14px;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0px !important;\r\n  width: 14px;\r\n  content: \"\";\r\n  background: #182488;\r\n}\r\n\r\n#isl-source-details-div,\r\n#isl-destination-details-div,\r\n.isl-source-details-div,\r\n.isl-speed-latency-bandwidth-details-div,\r\n#stats_div {\r\n  font-size: 13px;\r\n  border: 1px solid #ccc;\r\n  padding: 15px;\r\n  margin: 0;\r\n}\r\n\r\n.modal-title {\r\n  width: calc(100% - 25px);\r\n  font-weight: bold;\r\n  padding: 10px 0;\r\n  font-size: 14px;\r\n  margin-top: -8px\r\n}\r\n\r\ni.fa {\r\n  font-size: 15px;\r\n  color: #262d37;\r\n  vertical-align: middle;\r\n  margin: 0 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.fa-edit:before, .fa-pencil-square-o:before {\r\n  content: \"\\f044\";\r\n}\r\n\r\n.icon-ok-sign:before {\r\n  content: \"\\f058\";\r\n}\r\n\r\n.icon-remove-sign:before {\r\n  content: \"\\f057\";\r\n}\r\n\r\ni.icon {\r\n  font-family: FontAwesome;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  text-decoration: inherit;\r\n}\r\n\r\n.isl_details_div .col-form-label {\r\n  line-height: 1;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pc2wvaXNsLWRldGFpbC9pc2wtZGV0YWlsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osT0FBTztFQUNQLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osT0FBTztFQUNQLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7Ozs7O0VBS0UsZUFBZTtFQUNmLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsU0FBUztBQUNYOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsZUFBZTtFQUNmO0FBQ0Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsY0FBYztFQUNkLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL2lzbC9pc2wtZGV0YWlsL2lzbC1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saW5lLWxlZ2VuZCBsaTpiZWZvcmUge1xyXG4gIGhlaWdodDogMTRweDtcclxuICBsZWZ0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gIHdpZHRoOiAxNHB4O1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgYmFja2dyb3VuZDogI2FhZDIwMDtcclxufVxyXG5cclxuLmxpbmUtbGVnZW5kIGxpOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgaGVpZ2h0OiAxNHB4O1xyXG4gIGxlZnQ6IDA7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDE0cHg7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBiYWNrZ3JvdW5kOiAjMTgyNDg4O1xyXG59XHJcblxyXG4jaXNsLXNvdXJjZS1kZXRhaWxzLWRpdixcclxuI2lzbC1kZXN0aW5hdGlvbi1kZXRhaWxzLWRpdixcclxuLmlzbC1zb3VyY2UtZGV0YWlscy1kaXYsXHJcbi5pc2wtc3BlZWQtbGF0ZW5jeS1iYW5kd2lkdGgtZGV0YWlscy1kaXYsXHJcbiNzdGF0c19kaXYge1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIHBhZGRpbmc6IDE1cHg7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4ubW9kYWwtdGl0bGUge1xyXG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyNXB4KTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBwYWRkaW5nOiAxMHB4IDA7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIG1hcmdpbi10b3A6IC04cHhcclxufVxyXG5cclxuaS5mYSB7XHJcbiAgZm9udC1zaXplOiAxNXB4O1xyXG4gIGNvbG9yOiAjMjYyZDM3O1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgbWFyZ2luOiAwIDVweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5mYS1lZGl0OmJlZm9yZSwgLmZhLXBlbmNpbC1zcXVhcmUtbzpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiXFxmMDQ0XCI7XHJcbn1cclxuXHJcbi5pY29uLW9rLXNpZ246YmVmb3JlIHtcclxuICBjb250ZW50OiBcIlxcZjA1OFwiO1xyXG59XHJcblxyXG4uaWNvbi1yZW1vdmUtc2lnbjpiZWZvcmUge1xyXG4gIGNvbnRlbnQ6IFwiXFxmMDU3XCI7XHJcbn1cclxuXHJcbmkuaWNvbiB7XHJcbiAgZm9udC1mYW1pbHk6IEZvbnRBd2Vzb21lO1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcclxufVxyXG5cclxuLmlzbF9kZXRhaWxzX2RpdiAuY29sLWZvcm0tbGFiZWwge1xyXG4gIGxpbmUtaGVpZ2h0OiAxO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/isl/isl-detail/isl-detail.component.html":
/*!******************************************************************!*\
  !*** ./src/app/modules/isl/isl-detail/isl-detail.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"detailDataObservable\">\r\n  <div class=\"row isl_details_div\" style=\"margin-bottom: 10px;\">\r\n    <div class=\"col-md-6 isl_details\">\r\n      <h5 class='modal-title'>SOURCE DETAILS</h5>\r\n       <div id=\"isl-source-details-div\">\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'>Port:</label>\r\n          <p class=\"col-sm-8 col-form-label\">\r\n            {{src_port}}\r\n          </p>\r\n        </div>\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'>Switch Id:</label>\r\n            <div class=\" col-sm-4 col-form-label\" >\r\n              <span [contextMenu]=\"copySrcSwitch\">{{src_switch}}</span>\r\n            </div>\r\n          <div class='col-sm-4'>\r\n            <div class=\"pull-left\">\r\n              <div class=\"onoffswitch\">\r\n                <input type=\"checkbox\" (change)=\"maskSwitchId('source',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchsource\">\r\n                <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                  <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                  <span class=\"onoffswitch-switch\" id=\"onoffswitch-switch\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'>Name:</label>\r\n          <!-- <p class='col-sm-8 copy_to_clipBoard link_div_source_switch_name'>{{src_switch_name}}</p> -->\r\n           <div class=\" col-sm-4 col-form-label\">\r\n              <span [contextMenu]=\"copySrcSwitchName\">{{src_switch_name }}</span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ISL DESTINATION Details -->\r\n    <div class=\"col-md-6 isl_details\">\r\n      <h5 class='modal-title'>DESTINATION DETAILS\r\n        <span *ngIf=\"commonService.hasPermission('isl_delete_link')\" class=\"btn btn-dark btn-sm pull-right\" style=\"margin-top:-10px;\" (click)=\"deleteISL()\">Delete</span> \r\n        <!-- <div class=\"clear clearfix\"></div> -->\r\n      </h5>\r\n      <div id=\"isl-destination-details-div\">\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'>Port:</label>\r\n          <p class='col-sm-8 col-form-label'>\r\n            {{dst_port}}\r\n          </p>\r\n        </div>\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'>Switch Id:</label>\r\n           <!--  <span class=\"link_div_destination_switch copy_to_clipBoard\">{{dst_switch}}</span> -->\r\n             <div class=\"col-form-label col-sm-4\">\r\n              <span [contextMenu]=\"copyTrgSwitch\" >{{dst_switch }}</span>\r\n            </div>\r\n          <div class='col-sm-4'>\r\n            <div class=\"pull-left\">\r\n              <div class=\"onoffswitch\">\r\n                <input type=\"checkbox\" (change)=\"maskSwitchId('destination',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchdestination\">\r\n                <label class=\"onoffswitch-label\" for=\"onoffswitchdestination\">\r\n                  <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                  <span class=\"onoffswitch-switch\" id=\"onoffswitch-switch\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='row'>\r\n          <label class='col-sm-4 col-form-label'> Name:</label>\r\n           <div class=\"col-sm-8 col-form-label\">\r\n              <span [contextMenu]=\"copyTrgSwitchName\">{{dst_switch_name}}</span>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ISL Speed Details -->\r\n    <form [formGroup]=\"islForm\" style=\"width: 100%;\">\r\n      <div class=\"col-lg-12 isl_detail_title_div\">\r\n        <h5 class='modal-title' style=\"margin-top: 0px !important\">ISL DETAILS </h5> \r\n\r\n        <div class=\"isl-speed-latency-bandwidth-details-div\">\r\n          <div class=\"row\">\r\n              <div class=\"col-sm-8\">\r\n                <div class='row isl_sbl_details'>\r\n                  <label class='col-sm-6 col-form-label'>Max Bandwidth(Mbps):</label>\r\n                  <!-- <p class='col-sm-6 isl_div_speed'>{{ convertInMB(max_bandwidth) }}</p> -->\r\n                  <div class=\"text_cost_details\" id=\"text_bandwidth_details\" [hidden]=\"showBandwidthEditing\">\r\n                    <span class=\"col-sm-3\" style=\"padding-right: 0 !important\">{{ convertInMB(max_bandwidth) }}\r\n                      &nbsp; <i title=\"Max bandwidth is different from speed\" *ngIf=\"max_bandwidth!=speed\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n                    </span>\r\n                    <span >\r\n                      <span class=\"isl_div_bandwidth\"></span><span class=\"ml-1 cursor-pointer\" id=\"edit_isl_bandwidth\" *ngIf=\"commonService.hasPermission('isl_update_bandwidth')\"  style=\"display: inline;\">\r\n                      <i title=\"Edit\" (click)=\"editMaxbandwidth()\" class=\"fa fa-pencil-square-o fa-2x cursor-pointer\" ></i>\r\n                      </span>\r\n                    </span>\r\n                  </div>\r\n                  <div class=\"update_isl_cost col-sm-6\" id=\"isl_cost_update\" [hidden]=\"!showBandwidthEditing\">\r\n                    <div class=\"row\" style=\" margin-bottom: 10px;\">\r\n                      <input formControlName=\"max_bandwidth\" type=\"text\" name=\"max_bandwidth\" style=\"height: 35px; margin-left: 15px; width: 25%; padding: 10px;\">\r\n                      <span style=\"margin-right: 5px; border: 1; padding: 7px 12px;\" class=\"btn kilda_btn ml-1\" data-toggle=\"modal\" (click)=\"saveEditedBandwidth()\"><i class=\"icon icon-ok-sign\"></i></span>\r\n                      <span style=\"margin-right: 5px; border: 1; padding: 6px 11px;\" id=\"cancel_isl_bandwidth_update\" class=\"btn kilda_btn ml-0.5\" (click)=\"cancelEditedBandwidth()\"><i class=\"icon icon-remove-sign\"></i></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                    <div class='row isl_sbl_details'>\r\n                      <label class='col-sm-6 col-form-label'>Speed(Mbps):</label>\r\n                      <p class='col-sm-6 isl_div_speed'>{{ convertInMB(speed) }}</p>\r\n                    </div>\r\n                    <!-- ISL Latency Details -->\r\n                    <div class='row isl_sbl_details'>\r\n                      <label class='col-sm-6 col-form-label'>Latency:</label>\r\n                      <p class='col-sm-6 isl_div_latency'>{{latency}} ns</p>\r\n                    </div>\r\n                    <div class='row isl_sbl_details'>\r\n                      <label id=\"isl_cost_lbl\" class='col-sm-6 col-form-label'>Cost:</label>\r\n                      <div class=\"text_cost_details\" id=\"text_cost_details\" [hidden]=\"showCostEditing\">\r\n                        <span class=\"col-sm-3\" style=\"padding-right: 0 !important\">{{detailDataObservable.props.cost}}</span>\r\n                        <span >\r\n                          <span class=\"isl_div_cost\"></span><span class=\"ml-1 cursor-pointer\" id=\"edit_isl_cost\" *ngIf=\"commonService.hasPermission('isl_permission_editcost')\" style=\"display: inline;\">\r\n                          <i title=\"Edit\" (click)=\"editCost()\" class=\"fa fa-pencil-square-o fa-2x cursor-pointer\" ></i>\r\n                          </span>\r\n                        </span>\r\n                      </div>\r\n                      <div class=\"update_isl_cost col-sm-6\" id=\"isl_cost_update\" [hidden]=\"!showCostEditing\">\r\n                        <!-- <div class=\"row col-sm-2\"> -->\r\n                        <div class=\"row\" style=\" margin-bottom: 10px;\">\r\n                          <input formControlName=\"cost\" type=\"number\" name=\"cost\" style=\"height: 35px; margin-left: 15px; width: 10%; padding: 10px;\">\r\n                          <!--  <input id=\"isl_cost_obj\" type=\"hidden\" /> -->\r\n                          <span style=\"margin-right: 5px; border: 1; padding: 7px 12px;\" class=\"btn kilda_btn ml-1\" data-toggle=\"modal\" (click)=\"saveEditedCost()\"><i class=\"icon icon-ok-sign\"></i></span>\r\n                          <span style=\"margin-right: 5px; border: 1; padding: 6px 11px;\" id=\"cancel_isl_cost_update\" class=\"btn kilda_btn ml-0.5\" (click)=\"cancelEditedCost()\"><i class=\"icon icon-remove-sign\"></i></span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <!-- ISL Avaliable Bandwidth Details -->\r\n                    <div class='row isl_sbl_details'>\r\n                      <label class='col-sm-6 col-form-label'>Available Bandwidth(Mbps):\r\n                      </label>\r\n                      <p class='col-sm-6 isl_div_avaliable_bandwidth'>{{ convertInMB(available_bandwidth) }}</p>\r\n                    </div>\r\n                    <div class='row isl_sbl_details'>\r\n                      <label class='col-sm-6 col-form-label'>State:</label>\r\n                      <p class='col-sm-6 isl_div_state'>{{state}}</p>\r\n                    </div>    \r\n              </div>    \r\n              <div class=\"col-sm-4\" >\r\n                  <div class='row isl_sbl_details' *ngIf=\"commonService.hasPermission('isl_update_maintenance')\">\r\n                      <label class='col-sm-6 col-form-label'>Maintenance Mode:\r\n                      </label>\r\n                          <div class='col-sm-6'>\r\n                              <div class=\"pull-left\">\r\n                                <div class=\"onoffswitch\">\r\n                                  <input type=\"checkbox\" (change)=\"islMaintenance($event)\" name=\"isl-manitenance\" class=\"onoffswitch-checkbox\" id=\"onoffmaintenance\" [checked]=\"under_maintenance\">\r\n                                  <label class=\"onoffswitch-label\" for=\"onoffmaintenance\">\r\n                                    <span class=\"onoffswitch-inner onoffswitch-inner-maintenance-switch\"></span>\r\n                                    <span class=\"onoffswitch-switch\" id=\"onoffswitch-switch\"></span>\r\n                                  </label>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                    </div>\r\n                    <div class='row isl_sbl_details mt-3' *ngIf=\"commonService.hasPermission('isl_update_maintenance')\">\r\n                        <label class='col-sm-6 col-form-label'>Evacuate All Flows:\r\n                        </label>\r\n                            <div class='col-sm-6'>\r\n                                <div class=\"pull-left\">\r\n                                  <div class=\"onoffswitch\">\r\n                                    <input type=\"checkbox\" (change)=\"evacuateIsl($event)\" name=\"isl-evacuate\" class=\"onoffswitch-checkbox\" id=\"onoffevacuateisl\" [checked]=\"evacuate\">\r\n                                    <label class=\"onoffswitch-label\" for=\"onoffevacuateisl\">\r\n                                      <span class=\"onoffswitch-inner onoffswitch-inner-maintenance-switch\"></span>\r\n                                      <span class=\"onoffswitch-switch\" id=\"onoffswitch-switch\"></span>\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                      </div>\r\n                      <div class='row isl_sbl_details mt-3' *ngIf=\"commonService.hasPermission('isl_update_bfd_flag')\">\r\n                        <label class='col-sm-6 col-form-label'>Enable BFD:\r\n                        </label>\r\n                            <div class='col-sm-6'>\r\n                                <div class=\"pull-left\">\r\n                                  <div class=\"onoffswitch\">\r\n                                    <input type=\"checkbox\" (change)=\"enablebfd_flag($event)\" name=\"enable_bfd\" class=\"onoffswitch-checkbox\" id=\"onoffenablebfd\" [checked]=\"enable_bfd\">\r\n                                    <label class=\"onoffswitch-label\" for=\"onoffenablebfd\">\r\n                                      <span class=\"onoffswitch-inner onoffswitch-inner-maintenance-switch\"></span>\r\n                                      <span class=\"onoffswitch-switch\" id=\"onoffswitch-switch\"></span>\r\n                                    </label>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                      </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n      <ul class=\"nav nav-pills\">\r\n        <li [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n          <a href=\"javascript:void(0);\" (click)=\"openTab('graph');\">Graph</a>\r\n        </li>\r\n        <li *ngIf=\"commonService.hasPermission('menu_flows')\" [ngClass]=\"{'active': openedTab == 'flow'}\" >\r\n          <a href=\"javascript:void(0);\" (click)=\"openTab('flow');\">Flows</a>\r\n        </li>\r\n      </ul>\r\n      <div class=\"tab-content padding-15 clearfix\">\r\n        <div class=\"tab-pane\" *ngIf=\"openedTab == 'graph'\" [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n            <form [formGroup]=\"filterForm\">\r\n              <div class=\"container-fluid graph_div topology-graph\" >\r\n                <div class=\"row\">\r\n                  <div class=\"col-xs-8 col-md-8 \" id=\"stats_div\" style=\"border: 0px white; padding-top: 15px;\r\n                        padding-bottom: 15px;\r\n                        padding-left: 0;\r\n                        padding-right: 0;\">\r\n                      \r\n                        <h2 class=\"isl-header text-center\" id=\"graphLabel\">{{currentGraphName}}</h2>\r\n                        <ngx-spinner [fullScreen]=\"false\" name=\"graphSpinner\" bdColor = \"rgba(51, 51, 51, 0.8)\" size=\"medium\" color = \"#4ec0ec\" type = \"ball-clip-rotate\">\r\n                          <p >Loading data..<span class=\"loader__dot\">.</span><span class=\"loader__dot\">.</span><span class=\"loader__dot\">.</span></p>\r\n                          </ngx-spinner>\r\n                       <app-dygraph (zoomChange)='zoomHandler($event)' style=\"width: 780px !important;  height: 400px;\"></app-dygraph>\r\n                      \r\n                  </div>\r\n                  <div class=\"col-md-4 col-xs-4 filter\">\r\n                    <div *ngIf=\"f.graph.value !='flow'\" class=\"stats-graph row\" style=\"margin-top: 30px;\">\r\n                      <ul class=\"line-legend col-lg-12\">\r\n                        <li>Forward</li>\r\n                        <li>Reverse</li>\r\n                      </ul>\r\n                    </div>\r\n                    <div>\r\n                      <div class=\"row form-group clearfix\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Timezone:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                           <select formControlName=\"timezone\" class=\"form-control\" name=\"timezone\" (change)=\"changeTimezone()\">\r\n                          <option value=\"UTC\">UTC</option>\r\n                          <option value=\"LOCAL\">My Timezone</option>\r\n                        </select>\r\n                        </div>\r\n                       </div>\r\n                      <div class=\"row form-group clearfix\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">From:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                           <input formControlName=\"fromDate\" type=\"text\"  (change)=\"changeDate('fromDate',$event)\" datetime-picker  placeholder=\"From\" class=\"form-control\">\r\n                        </div>\r\n                       </div>\r\n                       <div class=\"row form-group clearfix\" *ngIf=\"!f.auto_reload.value\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">To:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                          <input type=\"text\" formControlName=\"toDate\"    (change)=\"changeDate('toDate',$event)\" datetime-picker  placeholder=\"From\" class=\"form-control\">\r\n                        </div>\r\n                       </div>\r\n                      <div id=\"DownsampleID\" class=\"row form-group clearfix\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Downsample:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                          <select formControlName=\"download_sample\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n                            <option value=\"30s\">30s</option>\r\n                            <option value=\"1m\">1m</option>\r\n                            <option value=\"5m\">5m</option>\r\n                            <option value=\"10m\">10m</option>\r\n                          </select>\r\n                          <span class=\"downsample-error-message pull-left\"></span>\r\n                        </div>\r\n                      </div>\r\n                      <div id=\"autoreloadId\" class=\"row form-group clearfix\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Autoreload(Sec):</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                          <input formControlName=\"auto_reload\" value=\"1\" type=\"checkbox\">\r\n                          <span [hidden]=\"!f.auto_reload.value\">\r\n                            <select formControlName=\"auto_reload_time\" name=\"auto_reload_time\" (change)=\"startAutoReload()\" style=\"width: 90%; position: relative; left: 11px; border-radius: 3px; top: -7px;\">\r\n                              <option value=\"\">Please select a value</option>\r\n                              <option *ngFor=\"let option of getautoReloadValues\" value=\"{{option.value}}\">{{option.text}}</option>\r\n                              </select>\r\n                           <div class=\"invalid-feedback\" *ngIf=\"!f.auto_reload_time.valid && f.auto_reload_time.dirty\">\r\n                             <div *ngIf=\"f.auto_reload_time.errors.pattern\">Auto reload time should be number</div>\r\n                             <div *ngIf=\"f.auto_reload_time.errors.required\">Auto reload time required</div>\r\n                           </div>\r\n                          </span>\r\n                        </div>\r\n                      </div>\r\n                      <div id=\"SourceDestinationSwitchId\" class=\"row form-group clearfix\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Graph:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                          <select formControlName=\"graph\" class=\"form-control\" (change)=\"graphChanged()\">\r\n                          <option value=\"rtt\">Round Trip Latency</option>\r\n                          <option value=\"latency\">Latency</option>\r\n                          <option value=\"source\">Source</option>\r\n                          <option value=\"target\">Destination</option>\r\n                          <option value=\"isllossforward\">Loss packet forward</option>\r\n                          <option value=\"isllossreverse\">Loss packet reverse</option>\r\n                          <option value=\"flow\">Flow</option>\r\n                        </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row form-group clearfix\" id=\"GraphType\" *ngIf=\"f.graph.value =='flow'\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Graph Type:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                           <select formControlName=\"graph_type\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n                           <option value=\"linegraph\">Line Graph</option>\r\n                           <option value=\"stackedgraph\">Stacked Graph</option>\r\n                        </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row form-group clearfix\" id=\"islMetric\" *ngIf=\"f.graph.value !='latency'\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Metric:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                           <select *ngIf=\"f.graph.value !='flow'\" formControlName=\"metric\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n                          <option *ngFor=\"let option of graphMetrics\" value=\"{{option.value}}\">{{option.label}}</option>\r\n                        </select>\r\n                        <select *ngIf=\"f.graph.value =='flow' || f.graph.value =='flowstacked'\" formControlName=\"metric\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n                          <option *ngFor=\"let option of flowGraphMetrics\" value=\"{{option.value}}\">{{option.label}}</option>\r\n                        </select>\r\n                        </div>\r\n                      </div>\r\n                     \r\n                      <div class=\"row form-group clearfix\" id=\"Direction\" *ngIf=\"f.graph.value =='flow'\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">Direction:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                           <select formControlName=\"direction\" class=\"form-control\" (change)=\"loadGraphData()\">\r\n                           <option value=\"forward\">Forward</option>\r\n                           <option value=\"reverse\">Reverse</option>\r\n                        </select>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row form-group clearfix\" id=\"flow_number\" *ngIf=\"f.graph.value =='flow'\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\">No Of Flows:</label>\r\n                        <div class=\"col-xs-8 col-md-8\">\r\n                          <div class=\"row\">\r\n                            <div class=\"col-xs-8 col-md-8\">\r\n                              <select formControlName=\"flow_number\" class=\"form-control\" (change)=\"loadIslAllFlowOrTopTen()\">\r\n                                <option value=\"top\">High Throughput</option>\r\n                                <option value=\"least\">Low Throughput</option>\r\n                                <option value=\"all\">All</option>\r\n                             </select>\r\n                            </div>\r\n                            <div class=\"col-xs-4 col-md-4\" *ngIf=\"f.flow_number.value !='all'\">\r\n                              <input name=\"no_flows\" type=\"number\" min = 1 (change)=\"loadIslAllFlowOrTopTen()\" formControlName=\"no_flows\" class=\"form-control\" />\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          \r\n                        </div>\r\n                      </div>\r\n                      <!-- <div class=\"row form-group clearfix\" *ngIf=\"f.graph.value =='flow'\">\r\n                        <label class=\"col-xs-4 col-md-4 text-label\"></label>\r\n                        <button class=\"btn btn-dark ml-3\" (click)=\"copySelectedStatsFlows()\">Copy Flows</button>\r\n                      </div> -->\r\n                      <div class=\"col-xs-12 col-md-12 submit-btn\">\r\n                       <div id=\"errorMesg\" class=\"error\"></div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              </form>\r\n\r\n        </div>\r\n        <div class=\"tab-pane\" *ngIf=\"openedTab == 'flow'\" [ngClass]=\"{'active': openedTab == 'flow'}\">\r\n            <app-isl-flow-datatables [srcSwitch]=\"src_switch\" (refresh)=\"refreshIslFlows()\" [dstSwitch]=\"dst_switch\" [data]=\"dataSet\" *ngIf=\"!loadingData\"></app-isl-flow-datatables>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n</div>\r\n<context-menu #copySrcSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyTrgSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'targetSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copySrcSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyTrgSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'targetSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/isl/isl-detail/isl-detail.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/isl/isl-detail/isl-detail.component.ts ***!
  \****************************************************************/
/*! exports provided: IslDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslDetailComponent", function() { return IslDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var _common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/isl-list.service */ "./src/app/common/services/isl-list.service.ts");
/* harmony import */ var _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_isl_data_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/isl-data.service */ "./src/app/common/services/isl-data.service.ts");
/* harmony import */ var _common_services_isl_detail_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../common/services/isl-detail.service */ "./src/app/common/services/isl-detail.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../common/components/islmaintenancemodal/islmaintenancemodal.component */ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/common/components/modal/modal.component */ "./src/app/common/components/modal/modal.component.ts");
/* harmony import */ var src_app_common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! src/app/common/components/otp/otp.component */ "./src/app/common/components/otp/otp.component.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");























let IslDetailComponent = class IslDetailComponent {
    constructor(httpClient, route, maskPipe, router, islListService, toastr, dygraphService, islDataService, formBuiler, loaderService, clipboardService, islFormBuiler, titleService, modalService, commonService, islDetailService, flowService, graphLoader) {
        this.httpClient = httpClient;
        this.route = route;
        this.maskPipe = maskPipe;
        this.router = router;
        this.islListService = islListService;
        this.toastr = toastr;
        this.dygraphService = dygraphService;
        this.islDataService = islDataService;
        this.formBuiler = formBuiler;
        this.loaderService = loaderService;
        this.clipboardService = clipboardService;
        this.islFormBuiler = islFormBuiler;
        this.titleService = titleService;
        this.modalService = modalService;
        this.commonService = commonService;
        this.islDetailService = islDetailService;
        this.flowService = flowService;
        this.graphLoader = graphLoader;
        this.openedTab = "graph";
        this.loaderName = 'graphSpinner';
        this.detailUrl = '';
        this.src_switch = '';
        this.src_port = '';
        this.dst_switch = '';
        this.dst_port = '';
        this.speed = '';
        this.latency = '';
        this.state = '';
        this.enable_bfd = false;
        this.evacuate = false;
        this.under_maintenance = false;
        this.loadingData = true;
        this.available_bandwidth = '';
        this.default_max_bandwidth = '';
        this.max_bandwidth = '';
        this.responseGraph = [];
        this.dataForISLFLowGraph = [];
        this.callGraphAPIFlag = false;
        this.currentGraphData = {
            data: [],
            startDate: moment(new Date()).format("YYYY/MM/DD HH:mm:ss"),
            endDate: moment(new Date()).format("YYYY/MM/DD HH:mm:ss"),
            timezone: "LOCAL",
            labels: [],
            series: {},
            colors: [],
        };
        this.getautoReloadValues = this.commonService.getAutoreloadValues();
        this.graphMetrics = [];
        this.flowGraphMetrics = [];
        this.autoReloadTimerId = null;
        this.showCostEditing = false;
        this.showBandwidthEditing = false;
        this.currentGraphName = "Round Trip Latency Graph (In Seconds)";
        this.clipBoardItems = {
            sourceSwitchName: "",
            sourceSwitch: "",
            targetSwitchName: "",
            targetSwitch: ""
        };
        this.hideToValue = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.zoomHandler = (event, x, y, z) => {
            let formdata = this.filterForm.value;
            if (formdata.timezone == 'UTC') {
                var startDate = moment(new Date(event.minX)).utc().format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(event.maxX)).utc().format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['fromDate'].setValue(startDate);
                this.filterForm.controls['toDate'].setValue(endDate);
            }
            else {
                var startDate = moment(new Date(event.minX)).format("YYYY/MM/DD HH:mm:ss");
                var endDate = moment(new Date(event.maxX)).format("YYYY/MM/DD HH:mm:ss");
                this.filterForm.controls['fromDate'].setValue(startDate);
                this.filterForm.controls['toDate'].setValue(endDate);
            }
        };
        if (!this.commonService.hasPermission('menu_isl')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    newMessageDetail() {
        this.islDataService.changeMessage(this.currentGraphData);
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - View ISL');
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        var fromStartDate = moment(yesterday).format("YYYY/MM/DD HH:mm:ss");
        var toEndDate = moment(date).format("YYYY/MM/DD HH:mm:ss");
        let dateRange = this.getDateRange();
        this.route.params.subscribe(params => {
            this.src_switch = params['src_switch'];
            this.src_port = params['src_port'];
            this.dst_switch = params['dst_switch'];
            this.dst_port = params['dst_port'];
            this.src_switch_kilda = this.maskPipe.transform(this.src_switch, 'legacy');
            this.dst_switch_kilda = this.maskPipe.transform(this.dst_switch, 'legacy');
            this.getIslDetailData(this.src_switch, this.src_port, this.dst_switch, this.dst_port);
        });
        this.filterForm = this.formBuiler.group({
            timezone: ["LOCAL"],
            fromDate: [dateRange.from],
            toDate: [dateRange.to],
            download_sample: ["30s"],
            graph: ["rtt"],
            metric: ["bits"],
            auto_reload: [""],
            direction: 'forward',
            flow_number: 'top',
            graph_type: ['linegraph'],
            no_flows: 10,
            auto_reload_time: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].pattern("[0-9]*")])]
        });
        this.graphMetrics = this.dygraphService.getPortMetricData();
        this.flowGraphMetrics = this.dygraphService.getFlowMetricData();
    }
    getIslDetailData(src_switch, src_port, dst_switch, dst_port) {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].loading_isl);
        this.islListService.getISLDetailData(src_switch, src_port, dst_switch, dst_port).subscribe((linkData) => {
            if (linkData && linkData.length) {
                this.loaderService.hide();
                var retrievedObject = linkData[linkData.length - 1];
                this.src_switch = retrievedObject.source_switch;
                this.src_switch_name = retrievedObject.source_switch_name;
                this.src_port = retrievedObject.src_port;
                this.dst_switch = retrievedObject.target_switch;
                this.dst_switch_name = retrievedObject.target_switch_name;
                this.dst_port = retrievedObject.dst_port;
                this.speed = retrievedObject.speed;
                this.max_bandwidth = retrievedObject.max_bandwidth;
                this.default_max_bandwidth = retrievedObject.default_max_bandwidth;
                this.latency = retrievedObject.latency;
                this.state = retrievedObject.state;
                this.available_bandwidth = retrievedObject.available_bandwidth;
                this.under_maintenance = retrievedObject.under_maintenance;
                this.evacuate = retrievedObject.evacuate;
                this.enable_bfd = retrievedObject.enable_bfd;
                this.clipBoardItems = Object.assign(this.clipBoardItems, {
                    sourceSwitchName: retrievedObject.source_switch_name,
                    sourceSwitch: retrievedObject.source_switch,
                    targetSwitchName: retrievedObject.target_switch_name,
                    targetSwitch: retrievedObject.target_switch
                });
                this.islListService.getIslDetail(this.src_switch, this.src_port, this.dst_switch, this.dst_port).subscribe((data) => {
                    if (data != null) {
                        this.detailDataObservable = data;
                        this.islForm = this.islFormBuiler.group({
                            cost: [this.detailDataObservable.cost, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].min(0)],
                            max_bandwidth: [this.max_bandwidth, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].min(0)]
                        });
                    }
                    else {
                        this.detailDataObservable = {
                            "props": {
                                "cost": "-"
                            }
                        };
                        this.islForm = this.islFormBuiler.group({
                            cost: [this.detailDataObservable.cost, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].min(0)],
                            max_bandwidth: [this.max_bandwidth, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].min(0)]
                        });
                    }
                }, error => {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].no_cost_data_returned, 'Error');
                });
            }
            else {
                this.loaderService.hide();
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].no_isl, 'Error');
                this.router.navigate([
                    "/isl"
                ]);
            }
            // this.setForwardLatency();
            this.loadGraphData();
        }, error => {
            this.loaderService.hide();
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].no_isl, 'Error');
            this.router.navigate([
                "/isl"
            ]);
        });
    }
    refreshIslFlows() {
        this.getIslFlowList();
    }
    getIslFlowList() {
        this.loadingData = true;
        let query = { src_switch: this.src_switch, src_port: this.src_port, dst_switch: this.dst_switch, dst_port: this.dst_port };
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].loading_isl_flows);
        this.islDetailService.getISLFlowsList(query).subscribe((data) => {
            this.dataSet = data || [];
            if (this.dataSet.length == 0) {
                this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].no_isl_flows, 'Information');
            }
            else {
                localStorage.setItem('flows', JSON.stringify(data));
            }
            this.loadingData = false;
        }, error => {
            this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].no_isl_flows, 'Information');
            this.loaderService.hide();
            this.loadingData = false;
            this.dataSet = [];
        });
    }
    maskSwitchId(switchType, e) {
        if (switchType === 'source') {
            if (e.target.checked) {
                this.src_switch = this.maskPipe.transform(this.src_switch, 'legacy');
            }
            else {
                this.src_switch = this.maskPipe.transform(this.src_switch, 'kilda');
            }
        }
        if (switchType === 'destination') {
            if (e.target.checked) {
                this.dst_switch = this.maskPipe.transform(this.dst_switch, 'legacy');
            }
            else {
                this.dst_switch = this.maskPipe.transform(this.dst_switch, 'kilda');
            }
        }
        if (switchType == 'source') {
            this.clipBoardItems.sourceSwitch = this.src_switch;
        }
        else {
            this.clipBoardItems.targetSwitch = this.dst_switch;
        }
    }
    openTab(tab) {
        this.openedTab = tab;
        if (tab == 'graph') {
            this.loadGraphData();
        }
        else if (tab == 'flow') {
            this.getIslFlowList();
        }
    }
    showMenu(e) {
        e.preventDefault();
        $('.clip-board-button').hide();
        $('.clip-board-button').css({
            top: e.pageY + 'px',
            left: (e.pageX - 220) + 'px',
            "z-index": 2,
        }).toggle();
    }
    islMaintenance(e) {
        const modalRef = this.modalService.open(_common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_17__["IslmaintenancemodalComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.isMaintenance = !this.under_maintenance;
        modalRef.componentInstance.content = 'Are you sure ?';
        this.under_maintenance = e.target.checked;
        modalRef.result.then((response) => {
            if (!response) {
                this.under_maintenance = false;
            }
        }, error => {
            this.under_maintenance = false;
        });
        modalRef.componentInstance.emitService.subscribe(evacuate => {
            var data = { src_switch: this.src_switch, src_port: this.src_port, dst_switch: this.dst_switch, dst_port: this.dst_port, under_maintenance: e.target.checked, evacuate: evacuate };
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].applying_changes);
            this.islListService.islUnderMaintenance(data).subscribe(response => {
                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].maintenance_mode_changed, 'Success');
                this.loaderService.hide();
                this.under_maintenance = e.target.checked;
                if (evacuate) {
                    location.reload();
                }
            }, error => {
                this.loaderService.hide();
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].error_im_maintenance_mode, 'Error');
            });
        }, error => {
        });
    }
    enablebfd_flag(e) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        this.enable_bfd = e.target.checked;
        if (this.enable_bfd) {
            modalRef.componentInstance.content = 'Are you sure you want to enable BFD flag?';
        }
        else {
            modalRef.componentInstance.content = 'Are you sure you want to disable BFD flag ?';
        }
        modalRef.result.then((response) => {
            if (response && response == true) {
                var data = { src_switch: this.src_switch, src_port: this.src_port, dst_switch: this.dst_switch, dst_port: this.dst_port, enable_bfd: this.enable_bfd };
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].updating_bfd);
                this.islListService.updateBFDflag(data).subscribe(response => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].bfd_flag_updated, 'Success');
                    this.loaderService.hide();
                }, error => {
                    this.enable_bfd = false;
                    this.loaderService.hide();
                    var errMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Error in updating BFD flag! ';
                    this.toastr.error(errMsg, 'Error');
                });
            }
            else {
                this.enable_bfd = false;
            }
        }, error => {
            this.enable_bfd = false;
        });
    }
    evacuateIsl(e) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        this.evacuate = e.target.checked;
        if (this.evacuate) {
            modalRef.componentInstance.content = 'Are you sure you want to evacuate all flows?';
        }
        else {
            modalRef.componentInstance.content = 'Are you sure ?';
        }
        modalRef.result.then((response) => {
            if (response && response == true) {
                var data = { src_switch: this.src_switch, src_port: this.src_port, dst_switch: this.dst_switch, dst_port: this.dst_port, under_maintenance: this.under_maintenance, evacuate: e.target.checked };
                this.islListService.islUnderMaintenance(data).subscribe(response => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].flows_evacuated, 'Success');
                    location.reload();
                }, error => {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].error_flows_evacuated, 'Error');
                });
            }
            else {
                this.evacuate = false;
            }
        }, error => {
            this.evacuate = false;
        });
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    changeDate(input, event) {
        this.filterForm.controls[input].setValue(event.target.value);
        setTimeout(() => {
            this.loadGraphData();
        }, 0);
    }
    ngAfterViewInit() {
        //this.loadGraphData();
        this.filterForm.get("auto_reload").valueChanges.subscribe(value => {
            if (value) {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].pattern("^[0-9]*")]);
            }
            else {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_11__["Validators"].pattern("^[0-9]*")]);
                if (this.autoReloadTimerId) {
                    clearInterval(this.autoReloadTimerId);
                }
            }
            this.filterForm.get("auto_reload_time").setValue("");
            this.filterForm.get("auto_reload_time").updateValueAndValidity();
        });
        this.filterForm.get("auto_reload_time").valueChanges.subscribe(value => { });
    }
    startAutoReload() {
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        if (this.filterForm.controls["auto_reload"]) {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
            if (autoReloadTime) {
                this.autoReloadTimerId = setInterval(() => {
                    this.loadGraphData();
                }, 1000 * autoReloadTime);
            }
        }
        else {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
        }
    }
    get f() {
        return this.filterForm.controls;
    }
    graphChanged() {
        if (this.filterForm.controls.graph.value == "isllossforward") {
            this.currentGraphName = "ISL Loss Packets Forward Graph";
            this.filterForm.controls.metric.setValue("packets");
        }
        if (this.filterForm.controls.graph.value == "isllossreverse") {
            this.currentGraphName = "ISL Loss Packets Resverse Graph";
            this.filterForm.controls.metric.setValue("packets");
        }
        if (this.filterForm.controls.graph.value == "target") {
            this.currentGraphName = "Destination Graph";
            this.filterForm.controls.metric.setValue("bits");
        }
        if (this.filterForm.controls.graph.value == "source") {
            this.currentGraphName = "Source Graph";
            this.filterForm.controls.metric.setValue("bits");
        }
        if (this.filterForm.controls.graph.value == "latency") {
            this.currentGraphName = "ISL Latency Graph";
        }
        if (this.filterForm.controls.graph.value == "rtt") {
            this.currentGraphName = "Round Trip Latency Graph (In Seconds)";
        }
        if (this.filterForm.controls.graph.value == "flow") {
            this.currentGraphName = "ISL Flow Graph";
        }
        this.loadGraphData();
    }
    getDateRange() {
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        var fromStartDate = moment(yesterday).format("YYYY/MM/DD HH:mm:ss");
        var toEndDate = moment(date).format("YYYY/MM/DD HH:mm:ss");
        var utcStartDate = moment(yesterday).utc().format("YYYY/MM/DD HH:mm:ss");
        var utcToEndDate = moment(date).utc().format("YYYY/MM/DD HH:mm:ss");
        return { from: fromStartDate, to: toEndDate, utcStartDate: utcStartDate, utcToEndDate: utcToEndDate };
    }
    changeTimezone() {
        let formdata = this.filterForm.value;
        let timezone = formdata.timezone;
        let dateaRange = this.getDateRange();
        if (timezone == "UTC") {
            this.filterForm.controls['fromDate'].setValue(dateaRange.utcStartDate);
            this.filterForm.controls['toDate'].setValue(dateaRange.utcToEndDate);
        }
        else {
            this.filterForm.controls['fromDate'].setValue(dateaRange.from);
            this.filterForm.controls['toDate'].setValue(dateaRange.to);
        }
        this.loadGraphData();
    }
    loadGraphData() {
        if (this.filterForm.value.graph === 'latency' || this.filterForm.value.graph === 'rtt') {
            this.callGraphAPI();
        }
        else if (this.filterForm.value.graph === 'flow' || this.filterForm.value.graph === 'flowstacked') {
            this.CallFlowGraphAPI();
        }
        else {
            this.callSourceGraphAPI();
        }
    }
    callGraphAPI() {
        let formdata = this.filterForm.value;
        let downsampling = formdata.download_sample;
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        let metric = formdata.metric;
        let timezone = formdata.timezone;
        let graph = formdata.graph;
        if (this.filterForm.controls["auto_reload"]) {
            formdata.toDate = new Date(new Date(formdata.toDate).getTime() + (autoReloadTime * 1000));
        }
        let convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        let convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        let startDate = moment(new Date(formdata.fromDate));
        let endDate = moment(new Date(formdata.toDate));
        if (moment(new Date(formdata.fromDate)).isAfter(new Date(formdata.toDate))) {
            this.toastr.error("Start date can not be after End date", "Error");
            return;
        }
        if (moment(new Date(formdata.toDate)).isBefore(new Date(formdata.fromDate))) {
            this.toastr.error("To date should not be less than from date.", "Error");
            return;
        }
        if (formdata.timezone == "UTC") {
            convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
            convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
        }
        this.graphLoader.show(this.loaderName);
        this.dygraphService.getForwardGraphData(this.src_switch_kilda, this.src_port, this.dst_switch_kilda, this.dst_port, downsampling, graph, metric, convertedStartDate, convertedEndDate).subscribe((dataForward) => {
            this.responseGraph = [];
            if (dataForward[0] !== undefined) {
                dataForward[0].tags.direction = "F";
                if (graph == 'rtt') {
                    var responseData = this.commonService.convertDpsToSecond(dataForward[0]);
                    this.responseGraph.push(responseData);
                }
                else {
                    this.responseGraph.push(dataForward[0]);
                }
            }
            this.dygraphService.getBackwardGraphData(this.src_switch_kilda, this.src_port, this.dst_switch_kilda, this.dst_port, downsampling, graph, convertedStartDate, convertedEndDate).subscribe((dataBackward) => {
                if (dataBackward[0] !== undefined) {
                    dataBackward[0].tags.direction = "R";
                    if (graph == 'rtt') {
                        var responseData = this.commonService.convertDpsToSecond(dataBackward[0]);
                        this.responseGraph.push(responseData);
                    }
                    else {
                        this.responseGraph.push(dataBackward[0]);
                    }
                }
                this.currentGraphData.data = this.responseGraph;
                this.currentGraphData.timezone = timezone;
                this.currentGraphData.startDate = moment(new Date(formdata.fromDate));
                this.currentGraphData.endDate = moment(new Date(formdata.toDate));
                this.newMessageDetail();
                this.islDataService.currentMessage.subscribe(message => this.message = message);
                this.graphLoader.hide(this.loaderName);
            }, error => {
                this.graphLoader.hide(this.loaderName);
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].reverse_graph_no_data, 'Error');
            });
        }, error => {
            this.graphLoader.hide(this.loaderName);
            this.loaderService.hide();
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].forward_graph_no_data, 'Error');
        });
    }
    loadIslAllFlowOrTopTen() {
        if (this.dataForISLFLowGraph && this.dataForISLFLowGraph.length) {
            let formdata = this.filterForm.value;
            let downsampling = formdata.download_sample;
            let metric = formdata.metric;
            let timezone = formdata.timezone;
            let direction = formdata.direction;
            var data = this.dataForISLFLowGraph;
            var no_flows = formdata.no_flows;
            if (formdata.no_flows < 1) {
                this.filterForm.controls['no_flows'].setValue(1);
                this.toastr.error("No of flows to be seen must be greater than zero", "Error");
                return;
            }
            if (this.filterForm.controls['flow_number'].value == 'top' && this.dataForISLFLowGraph.length) {
                data = this.dataForISLFLowGraph.slice(0, no_flows);
            }
            else if (this.filterForm.controls['flow_number'].value == 'least' && this.dataForISLFLowGraph.length) {
                data = this.dataForISLFLowGraph.slice(this.dataForISLFLowGraph.length - no_flows, this.dataForISLFLowGraph.length);
            }
            this.loadIslFlowGraph(data, formdata, timezone, direction);
        }
        else {
            this.CallFlowGraphAPI();
        }
    }
    CallFlowGraphAPI() {
        this.dataForISLFLowGraph = [];
        let formdata = this.filterForm.value;
        let downsampling = formdata.download_sample;
        let metric = formdata.metric;
        let timezone = formdata.timezone;
        let direction = formdata.direction;
        var no_flows = formdata.no_flows;
        let convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        let convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        if (moment(new Date(formdata.fromDate)).isAfter(new Date(formdata.toDate))) {
            this.toastr.error("Start date can not be after End date", "Error");
            return;
        }
        if (moment(new Date(formdata.toDate)).isBefore(new Date(formdata.fromDate))) {
            this.toastr.error("To date should not be less than from date.", "Error");
            return;
        }
        if (formdata.timezone == "UTC") {
            convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
            convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
        }
        let requestForwardPayload = { switches: [this.src_switch_kilda], outPort: this.src_port, startdate: convertedStartDate, enddate: convertedEndDate, downsample: downsampling, direction: direction, metric: metric };
        let requestReversePayload = { switches: [this.dst_switch_kilda], inPort: this.dst_port, startdate: convertedStartDate, enddate: convertedEndDate, downsample: downsampling, direction: direction, metric: metric };
        this.graphLoader.show(this.loaderName);
        this.flowService.getFlowPathStats(requestForwardPayload).subscribe((dataForward) => {
            this.flowService.getFlowPathStats(requestReversePayload).subscribe((dataReverse) => {
                var data = dataForward.concat(dataReverse);
                var data_for_graph = this.get_data_for_Isl_Flow_Graph(data);
                no_flows = (data_for_graph.length > 10) ? no_flows : data_for_graph.length;
                this.filterForm.controls['no_flows'].setValue(no_flows);
                if (this.filterForm.controls['flow_number'].value == 'top' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(0, no_flows);
                }
                else if (this.filterForm.controls['flow_number'].value == 'least' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(data_for_graph.length - no_flows, data_for_graph.length);
                }
                this.graphLoader.hide(this.loaderName);
                this.loadIslFlowGraph(data_for_graph, formdata, timezone, direction);
            }, error => {
                this.graphLoader.hide(this.loaderName);
                var data = dataForward;
                var data_for_graph = this.get_data_for_Isl_Flow_Graph(data);
                no_flows = (data_for_graph.length > 10) ? no_flows : data_for_graph.length;
                this.filterForm.controls['no_flows'].setValue(no_flows);
                if (this.filterForm.controls['flow_number'].value == 'top' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(0, no_flows);
                }
                else if (this.filterForm.controls['flow_number'].value == 'least' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(data_for_graph.length - no_flows, data_for_graph.length);
                }
                this.loadIslFlowGraph(data_for_graph, formdata, timezone, direction);
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].reverse_graph_no_data, 'Error');
            });
        }, error => {
            this.flowService.getFlowPathStats(requestReversePayload).subscribe((dataReverse) => {
                var data = dataReverse;
                var data_for_graph = this.get_data_for_Isl_Flow_Graph(data);
                no_flows = (data_for_graph.length > 10) ? no_flows : data_for_graph.length;
                this.filterForm.controls['no_flows'].setValue(no_flows);
                if (this.filterForm.controls['flow_number'].value == 'top' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(0, no_flows);
                }
                else if (this.filterForm.controls['flow_number'].value == 'least' && data_for_graph.length) {
                    data_for_graph = data_for_graph.slice(data_for_graph.length - no_flows, data_for_graph.length);
                }
                this.graphLoader.hide(this.loaderName);
                this.loadIslFlowGraph(data_for_graph, formdata, timezone, direction);
            }, error => {
                this.graphLoader.hide(this.loaderName);
                this.loadIslFlowGraph([], formdata, timezone, direction);
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].reverse_graph_no_data, 'Error');
            });
        });
    }
    get_data_for_Isl_Flow_Graph(dataGraph) {
        if (dataGraph && dataGraph.length) {
            dataGraph.forEach(d => {
                var sum = 0;
                Object.keys(d.dps).forEach((a) => {
                    sum = sum + d.dps[a];
                });
                return d['sum'] = sum;
            });
            dataGraph.sort((a, b) => {
                return b['sum'] - a['sum'];
            });
            this.dataForISLFLowGraph = dataGraph;
            return dataGraph;
        }
        return [];
    }
    copySelectedStatsFlows() {
        var data_for_copy = [];
        var data = this.dataForISLFLowGraph;
        if (data && data.length) {
            data.forEach((d) => {
                data_for_copy.push(d.tags.flowid);
            });
        }
        var no_flows = this.filterForm.controls['no_flows'].value;
        if (this.filterForm.controls['flow_number'].value == 'top' && data_for_copy.length) {
            data_for_copy = data_for_copy.slice(0, no_flows);
        }
        else if (this.filterForm.controls['flow_number'].value == 'least' && data_for_copy.length) {
            data_for_copy = this.dataForISLFLowGraph.slice(data_for_copy.length - no_flows, data_for_copy.length);
        }
        this.clipboardService.copyFromContent(JSON.stringify(data_for_copy));
    }
    loadIslFlowGraph(data, formdata, timezone, direction) {
        var graph = this.filterForm.value.graph_type;
        var graph_data = this.dygraphService.computeFlowGraphDataForISL(data, formdata.fromDate, formdata.toDate, timezone, direction);
        var graphData = graph_data["data"];
        var labels = graph_data["labels"];
        var series = {};
        var colors = graph_data["color"];
        if (labels && labels.length) {
            for (var k = 0; k < labels.length; k++) {
                if (k != 0) {
                    series[labels[k]] = { color: colors[k - 1] };
                }
            }
        }
        this.responseGraph = [];
        this.currentGraphData.data = graphData;
        this.currentGraphData.timezone = timezone;
        this.currentGraphData.startDate = moment(new Date(formdata.fromDate));
        this.currentGraphData.endDate = moment(new Date(formdata.toDate));
        this.currentGraphData.labels = labels;
        this.currentGraphData.series = series;
        this.loaderService.hide();
        if (this.filterForm.value.graph_type === 'stackedgraph') {
            this.islDataService.changeIslFlowStackedGraph(this.currentGraphData);
            this.islDataService.IslFlowStackedGraph.subscribe(message => this.message = message);
        }
        else {
            this.islDataService.changeIslFlowGraph(this.currentGraphData);
            this.islDataService.IslFlowGraph.subscribe(message => this.message = message);
        }
    }
    callSourceGraphAPI() {
        let formdata = this.filterForm.value;
        let downsampling = formdata.download_sample;
        let metric = formdata.metric;
        let timezone = formdata.timezone;
        let graph = formdata.graph;
        let direction = formdata.direction;
        let convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        let convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').utc().format("YYYY-MM-DD-HH:mm:ss");
        let startDate = moment(new Date(formdata.fromDate));
        let endDate = moment(new Date(formdata.toDate));
        if (moment(new Date(formdata.fromDate)).isAfter(new Date(formdata.toDate))) {
            this.toastr.error("Start date can not be after End date", "Error");
            return;
        }
        if (moment(new Date(formdata.toDate)).isBefore(new Date(formdata.fromDate))) {
            this.toastr.error("To date should not be less than from date.", "Error");
            return;
        }
        if (formdata.timezone == "UTC") {
            convertedStartDate = moment(new Date(formdata.fromDate)).add(-60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
            convertedEndDate = moment(new Date(formdata.toDate)).add(60, 'seconds').format("YYYY-MM-DD-HH:mm:ss");
        }
        this.graphLoader.show(this.loaderName);
        this.dygraphService.getForwardGraphData(this.src_switch_kilda, this.src_port, this.dst_switch_kilda, this.dst_port, downsampling, graph, metric, convertedStartDate, convertedEndDate).subscribe((dataForward) => {
            this.responseGraph = [];
            if (dataForward[0] !== undefined) {
                dataForward[0].tags.direction = "F";
                this.responseGraph.push(dataForward[0]);
            }
            if (dataForward[1] !== undefined) {
                dataForward[1].tags.direction = "R";
                this.responseGraph.push(dataForward[1]);
            }
            this.currentGraphData.data = this.responseGraph;
            this.currentGraphData.timezone = timezone;
            this.currentGraphData.startDate = moment(new Date(formdata.fromDate));
            this.currentGraphData.endDate = moment(new Date(formdata.toDate));
            this.graphLoader.hide(this.loaderName);
            this.newMessageDetail();
            this.islDataService.currentMessage.subscribe(message => this.message = message);
        }, error => {
            this.graphLoader.hide(this.loaderName);
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].reverse_graph_no_data, 'Error');
        });
    }
    editCost() {
        this.showCostEditing = true;
        if (this.detailDataObservable.props.cost == "-") {
            this.detailDataObservable.props.cost = "";
        }
        this.islForm.controls["cost"].setValue(this.detailDataObservable.props.cost);
    }
    editMaxbandwidth() {
        this.showBandwidthEditing = true;
        this.islForm.controls["max_bandwidth"].setValue(this.convertInMB(this.max_bandwidth));
    }
    saveEditedBandwidth() {
        if (this.islForm.invalid) {
            this.toastr.error("Please enter valid value for Max. Bandwidth.");
            return;
        }
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to change the Max Bandwidth?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].updating_isl_bandwidth);
                let costValue = this.convertToByteFromMB(this.islForm.value.max_bandwidth);
                var data = { max_bandwidth: costValue };
                this.islListService.updateIslBandWidth(data, this.src_switch, this.src_port, this.dst_switch, this.dst_port).subscribe((response) => {
                    this.loaderService.hide();
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].isl_bandwidth_updated, 'Success');
                    this.showBandwidthEditing = false;
                    this.max_bandwidth = costValue;
                    this.islForm.controls["max_bandwidth"].setValue(costValue);
                }, error => {
                    this.showBandwidthEditing = false;
                    if (error.status == '500') {
                        this.toastr.error(error.error['error-message'], 'Error! ');
                    }
                    else {
                        this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].isl_bandwidth_update_error, 'Error');
                    }
                });
            }
        });
    }
    cancelEditedBandwidth() {
        this.showBandwidthEditing = false;
    }
    saveEditedCost() {
        if (this.islForm.invalid) {
            this.toastr.error("Please enter valid value for ISL cost.");
            return;
        }
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to change the cost?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].updating_isl_cost);
                let costValue = this.islForm.value.cost;
                this.islListService.updateCost(this.src_switch, this.src_port, this.dst_switch, this.dst_port, costValue).subscribe((status) => {
                    this.loaderService.hide();
                    if (typeof (status.successes) !== 'undefined' && status.successes > 0) {
                        this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].isl_cost_updated, 'Success');
                        this.showCostEditing = false;
                        this.detailDataObservable.props.cost = costValue;
                        this.islForm.controls["cost"].setValue(costValue);
                    }
                    else if (typeof (status.failures) !== 'undefined' && status.failures > 0) {
                        this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].error_isl_cost_updated, 'Error');
                        this.showCostEditing = false;
                    }
                    if (this.detailDataObservable.props.cost == "") {
                        this.detailDataObservable.props.cost = "-";
                    }
                }, error => {
                    this.showCostEditing = false;
                    if (error.status == '500') {
                        this.toastr.error(error.error['error-message'], 'Error! ');
                    }
                    else {
                        this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].error_isl_cost_updated, 'Error');
                    }
                });
            }
        });
    }
    deleteISL() {
        let is2FaEnabled = localStorage.getItem('is2FaEnabled');
        var self = this;
        const modalReff = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_16__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Delete ISL";
        modalReff.componentInstance.content = 'Are you sure you want to perform delete action ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                if (is2FaEnabled == 'true') {
                    const modalRef = this.modalService.open(src_app_common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_20__["OtpComponent"]);
                    modalRef.componentInstance.emitService.subscribe(otp => {
                        if (otp) {
                            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].deleting_isl);
                            var data = {
                                src_switch: this.src_switch,
                                src_port: this.src_port,
                                dst_switch: this.dst_switch,
                                dst_port: this.dst_port,
                                code: otp
                            };
                            this.modalService.dismissAll();
                            this.islListService.deleteIsl(data, response => {
                                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].isl_deleted, "Success!");
                                this.loaderService.hide();
                                localStorage.removeItem('ISL_LIST');
                                setTimeout(function () {
                                    self.router.navigate(["/isl"]);
                                }, 100);
                            }, error => {
                                this.loaderService.hide();
                                var message = (error && error['error-auxiliary-message']) ? error['error-auxiliary-message'] : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].error_isl_delete;
                                this.toastr.error(message, "Error!");
                            });
                        }
                        else {
                            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].otp_not_detected, "Error!");
                        }
                    }, error => {
                    });
                }
                else {
                    const modalRef2 = this.modalService.open(src_app_common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_19__["ModalComponent"]);
                    modalRef2.componentInstance.title = "Warning";
                    modalRef2.componentInstance.content = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_21__["MessageObj"].delete_isl_not_authorised;
                }
            }
        });
    }
    cancelEditedCost() {
        this.showCostEditing = false;
        if (this.detailDataObservable.props.cost == "") {
            this.detailDataObservable.props.cost = "-";
        }
    }
    convertInMB(value) {
        value = parseInt(value);
        if (value === "" || value == undefined) {
            return "-";
        }
        else {
            return (value / 1000);
        }
    }
    convertToByteFromMB(value) {
        value = parseInt(value);
        return (value * 1000);
    }
    ngOnDestroy() {
        if (this.autoReloadTimerId) {
            clearInterval(this.autoReloadTimerId);
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
], IslDetailComponent.prototype, "hideToValue", void 0);
IslDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isl-detail',
        template: __webpack_require__(/*! ./isl-detail.component.html */ "./src/app/modules/isl/isl-detail/isl-detail.component.html"),
        styles: [__webpack_require__(/*! ./isl-detail.component.css */ "./src/app/modules/isl/isl-detail/isl-detail.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["ActivatedRoute"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_4__["SwitchidmaskPipe"],
        _angular_router__WEBPACK_IMPORTED_MODULE_3__["Router"],
        _common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_5__["IslListService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_7__["ToastrService"],
        _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_6__["DygraphService"],
        _common_services_isl_data_service__WEBPACK_IMPORTED_MODULE_8__["IslDataService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormBuilder"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_13__["LoaderService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_12__["ClipboardService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__["FormBuilder"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_14__["Title"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_15__["NgbModal"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_18__["CommonService"],
        _common_services_isl_detail_service__WEBPACK_IMPORTED_MODULE_9__["IslDetailService"],
        src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_22__["FlowsService"],
        ngx_spinner__WEBPACK_IMPORTED_MODULE_10__["NgxSpinnerService"]])
], IslDetailComponent);



/***/ }),

/***/ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.css":
/*!***********************************************************************************!*\
  !*** ./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.css ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\nth.sorting:last-child {\r\n    background-image: none !important;\r\n}\r\n\r\n.large-checkbox{\r\n    width:18px;\r\n    height:18px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pc2wvaXNsLWZsb3ctZGF0YXRhYmxlcy9pc2wtZmxvdy1kYXRhdGFibGVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxpQ0FBaUM7QUFDckM7O0FBRUE7SUFDSSxVQUFVO0lBQ1YsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9pc2wvaXNsLWZsb3ctZGF0YXRhYmxlcy9pc2wtZmxvdy1kYXRhdGFibGVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YVRhYmxlIHRmb290IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIGkuZmF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6MTJweDtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSAuZmxvd0RhdGFSb3cudXAtc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogIzE5YjM2NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy5kb3duLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICNiNjQ1NDU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMTBweDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGhlYWQgdGggc3BhbiB7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1cHgpO1xyXG4gICAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGQge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IHJpZ2h0IDEwcHg7XHJcbiAgICAgICAgcGFkZGluZzogMTBweCAyMHB4IDEwcHggMThweDtcclxuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICBcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRib2R5IHRyIHRkOmZpcnN0LWNoaWxkIHtcclxuICAgIHBhZGRpbmctbGVmdDogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50aC5zb3J0aW5nOmxhc3QtY2hpbGQge1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubGFyZ2UtY2hlY2tib3h7XHJcbiAgICB3aWR0aDoxOHB4O1xyXG4gICAgaGVpZ2h0OjE4cHg7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.html":
/*!************************************************************************************!*\
  !*** ./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.html ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n      <div class=\"row\">\r\n          <div class=\"col-sm-4\">\r\n              <div class=\"form-group input-group-sm\">\r\n                   <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n               </div>\r\n          </div>\r\n          <div class=\"col-sm-8 text-right text-filters mb-3\">\r\n              <a class=\"cursor-pointer\" (click)=\"reRouteFlows()\"><i class=\"fa fa-refresh\"></i>  Re-Route Flows</a>\r\n           </div>\r\n       </div>\r\n       \r\n   </div>\r\n  <div class=\"clear clearfix\"></div>\r\n </div>\r\n\r\n<div class=\"isl-flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table id=\"flowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n  <thead>\r\n    <tr class=\"tableHeading\">\r\n        <th><input type=\"checkbox\" [checked]=\"selectAll\" style=\"margin-left: 7px;\" class=\"large-checkbox\" (click)=\"selectAllFlows($event)\"  />\r\n        </th>\r\n      <th class=\"\">\r\n        <span title=\"Flow ID\">\r\n        Flow ID\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedFlowId')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedFlowId\" id=\"expandedFlowId\"/>\r\n      </th>    \r\n      <th >\r\n        <span title=\"Source Port\">\r\n          Src Port\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchPort')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchPort\"id=\"expandedSrcSwitchPort\"/>\r\n        \r\n      </th>\r\n      <th>\r\n          <span title=\"Source VLAN\">\r\n        Src VLAN\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchVlan')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedSrcSwitchVlan\" id=\"expandedSrcSwitchVlan\"/>\r\n      \r\n      </th>\r\n   \r\n      <th >\r\n        <span title=\"Destination Port\">\r\n          Dst Port\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchPort')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchPort\" id=\"expandedTargetSwitchPort\"/>\r\n        \r\n      </th>\r\n      <th >\r\n          <span title=\"Destination VLAN\">\r\n        Dst VLAN\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchVlan')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchVlan\" id=\"expandedTargetSwitchVlan\"/>\r\n      \r\n      </th>\r\n      <th >\r\n          <span title=\"Bandwidth (Mbps)\">\r\n             Bandwidth (Mbps)\r\n            </span>\r\n              <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBandwidth')\"></i>\r\n              <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedBandwidth\" id=\"expandedBandwidth\"/>\r\n            \r\n      </th>\r\n      <th >\r\n          <span title=\"State\">\r\n              Status\r\n         </span>\r\n           <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n           <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedState\" id=\"expandedState\"/>\r\n         \r\n      </th>\r\n     \r\n      <th >\r\n          <span title=\"Description\">\r\n              Description\r\n             </span>\r\n               <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDescription')\"></i>\r\n               <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedDescription\" id=\"expandedDescription\"/>\r\n             \r\n      </th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <!-- [routerLink]=\"['/flows/details',row.flowid]\" --> \r\n      <tr *ngFor=\"let row of data; let i = index\"  class=\"flowDataRow\"   [class.down-state]=\"!(row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED')\" [class.up-state]=\"row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED'\" [class.down-status]=\"storeLinkSetting && row.hasOwnProperty('discrepancy') && ((row['discrepancy'].hasOwnProperty('bandwidth') && row['discrepancy']['bandwidth']) || (row['discrepancy'].hasOwnProperty('status') && row['discrepancy']['status']))\">\r\n      <td>\r\n        <input type=\"checkbox\" class=\"large-checkbox\" name=\"islFlow[row.flowid]\" [checked]=\"islFlow[row.flowid]\" (click) = \"toggleSelection(row)\" />\r\n      </td>\r\n      <td class=\"divTableCell\" title=\"{{row.flowid }}\"> {{row.flowid || \"-\"}} </td>\r\n      <td title=\"{{row.src_port}}\">{{row.src_port || \"-\"}}</td>\r\n      <td>{{row.src_vlan || \"-\"}}</td>\r\n      <td>{{row.dst_port || \"-\"}}</td>\r\n      <td>{{row.dst_vlan || \"-\"}}</td>\r\n      <td>{{row.maximum_bandwidth / 1000  || \"-\"}}</td>\r\n      <td title=\"{{row.status || row.state ||  '-'}}\">{{ row.status || row.state ||  \"-\"}}</td>\r\n      <td title=\"{{row.description}}\">{{row.description || \"-\"}}</td>\r\n    \r\n    </tr>\r\n  </tbody>\r\n</table>"

/***/ }),

/***/ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.ts":
/*!**********************************************************************************!*\
  !*** ./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.ts ***!
  \**********************************************************************************/
/*! exports provided: IslFlowDatatablesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslFlowDatatablesComponent", function() { return IslFlowDatatablesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/components/flow-re-route-modal/flow-re-route-modal.component */ "./src/app/common/components/flow-re-route-modal/flow-re-route-modal.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let IslFlowDatatablesComponent = class IslFlowDatatablesComponent {
    constructor(loaderService, renderer, flowService, toaster, modalService) {
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.flowService = flowService;
        this.toaster = toaster;
        this.modalService = modalService;
        this.data = [];
        this.refresh = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dtOptions = {};
        this.reRouteFlowIndex = {};
        this.islFlow = [];
        this.selectAll = false;
        this.reRouteList = [];
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.wrapperHide = true;
        this.expandedFlowId = false;
        this.expandedSrcSwitchPort = false;
        this.expandedSrcSwitchVlan = false;
        this.expandedTargetSwitchPort = false;
        this.expandedTargetSwitchVlan = false;
        this.expandedBandwidth = false;
        this.expandedState = false;
        this.expandedDescription = false;
    }
    ngOnInit() {
        let ref = this;
        if (this.data && this.data.length) {
            this.data.forEach(function (d) {
                ref.islFlow[d.flowid] = false;
            });
        }
        this.dtOptions = {
            pageLength: -1,
            deferRender: true,
            dom: 't',
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            order: [['1', 'desc']],
            "aoColumns": [
                { sWidth: '5%', "bSortable": false },
                { sWidth: '15%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' }
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    fulltextSearch(e) {
        var value = e.target.value;
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    refreshList() {
        this.refresh.emit();
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    selectAllFlows(e) {
        this.selectAll = !this.selectAll;
        if (this.islFlow && Object.keys(this.islFlow).length) {
            Object.keys(this.islFlow).forEach((k, i) => { this.islFlow[k] = this.selectAll; });
        }
    }
    toggleSelection(flow) {
        this.islFlow[flow.flowid] = !this.islFlow[flow.flowid];
        if (this.islFlow && Object.keys(this.islFlow).length) {
            var selectAll = true;
            Object.keys(this.islFlow).forEach((k, i) => {
                if (!this.islFlow[k]) {
                    selectAll = false;
                    return false;
                }
            });
            this.selectAll = selectAll;
        }
    }
    reRouteFlows() {
        this.reRouteFlowIndex = {};
        let selectedFlows = [];
        Object.keys(this.islFlow).forEach((k, i) => {
            if (this.islFlow[k]) {
                selectedFlows.push(k);
            }
        });
        if (selectedFlows && selectedFlows.length) {
            this.loadFlowReRouteModal();
            var flowID = selectedFlows.pop();
            this.reRouteFlowIndex[flowID] = { type: 'info' };
            this.reRouteFlow(flowID, selectedFlows);
        }
    }
    reRouteFlow(flowID, flowList) {
        var self = this;
        if (flowID) {
            this.reRouteList.push(flowID);
            this.reRouteFlowIndex[flowID]['progress'] = 10;
            this.reRouteFlowIndex[flowID]['interval'] = setInterval(() => {
                if (this.reRouteFlowIndex[flowID]['progress'] <= 90) {
                    this.reRouteFlowIndex[flowID]['progress'] = this.reRouteFlowIndex[flowID]['progress'] + 10;
                }
            }, 300);
            this.flowService.getReRoutedPath(flowID).subscribe(function (data) {
                if (data && typeof (data.rerouted) !== 'undefined' && data.rerouted) {
                    clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                    self.reRouteFlowIndex[flowID]['type'] = 'success';
                    self.reRouteFlowIndex[flowID]['progress'] = 100;
                    self.reRouteFlowIndex[flowID]['message'] = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].flow_rerouted;
                }
                else {
                    clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                    self.reRouteFlowIndex[flowID]['type'] = 'info';
                    self.reRouteFlowIndex[flowID]['progress'] = 100;
                    self.reRouteFlowIndex[flowID]['message'] = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].flow_on_best_route;
                }
                if (flowList && flowList.length) {
                    var flow_id = flowList.pop();
                    self.reRouteFlowIndex[flow_id] = { type: 'info' };
                    self.reRouteFlow(flow_id, flowList);
                }
                else {
                    return;
                }
            }, function (error) {
                clearInterval(self.reRouteFlowIndex[flowID]['interval']);
                self.reRouteFlowIndex[flowID]['type'] = 'danger';
                self.reRouteFlowIndex[flowID]['progress'] = 100;
                self.reRouteFlowIndex[flowID]['message'] = error.error["error-auxiliary-message"];
                self.reRouteFlowIndex[flowID]['description'] = error.error["error-description"];
                if (flowList && flowList.length) {
                    var flow_id = flowList.pop();
                    self.reRouteFlowIndex[flow_id] = { type: 'info' };
                    self.reRouteFlow(flow_id, flowList);
                }
                else {
                    return;
                }
            });
        }
    }
    loadFlowReRouteModal() {
        const modelRef = this.modalService.open(src_app_common_components_flow_re_route_modal_flow_re_route_modal_component__WEBPACK_IMPORTED_MODULE_7__["FlowReRouteModalComponent"], { size: 'lg', windowClass: 'modal-isl slideInUp', backdrop: 'static', keyboard: false });
        modelRef.componentInstance.title = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].re_routing_flows;
        modelRef.componentInstance.reRouteIndex = this.reRouteFlowIndex;
        modelRef.componentInstance.responseData = this.reRouteList;
        modelRef.result.then(() => {
            this.refreshList();
        });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input[type="search"]', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"])
], IslFlowDatatablesComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], IslFlowDatatablesComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], IslFlowDatatablesComponent.prototype, "srcSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], IslFlowDatatablesComponent.prototype, "dstSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], IslFlowDatatablesComponent.prototype, "refresh", void 0);
IslFlowDatatablesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isl-flow-datatables',
        template: __webpack_require__(/*! ./isl-flow-datatables.component.html */ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.html"),
        styles: [__webpack_require__(/*! ./isl-flow-datatables.component.css */ "./src/app/modules/isl/isl-flow-datatables/isl-flow-datatables.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_5__["FlowsService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__["NgbModal"]])
], IslFlowDatatablesComponent);



/***/ }),

/***/ "./src/app/modules/isl/isl-layout/isl-layout.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/isl/isl-layout/isl-layout.component.ts ***!
  \****************************************************************/
/*! exports provided: IslLayoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslLayoutComponent", function() { return IslLayoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let IslLayoutComponent = class IslLayoutComponent {
    constructor() { }
    ngOnInit() {
    }
};
IslLayoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isl-layout',
        template: '<router-outlet></router-outlet>'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], IslLayoutComponent);



/***/ }),

/***/ "./src/app/modules/isl/isl-list/isl-list.component.css":
/*!*************************************************************!*\
  !*** ./src/app/modules/isl/isl-list/isl-list.component.css ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaXNsL2lzbC1saXN0L2lzbC1saXN0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/isl/isl-list/isl-list.component.html":
/*!**************************************************************!*\
  !*** ./src/app/modules/isl/isl-list/isl-list.component.html ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-datatable [data]=\"dataSet\" (refresh)=\"getISLlistService()\"  *ngIf=\"!loadingData\"></app-datatable>\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/isl/isl-list/isl-list.component.ts":
/*!************************************************************!*\
  !*** ./src/app/modules/isl/isl-list/isl-list.component.ts ***!
  \************************************************************/
/*! exports provided: IslListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslListComponent", function() { return IslListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/isl-list.service */ "./src/app/common/services/isl-list.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");







let IslListComponent = class IslListComponent {
    constructor(titleService, loaderService, islListService, toastr) {
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.islListService = islListService;
        this.toastr = toastr;
        this.dataSet = [];
        this.loadingData = true;
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - ISL');
        var islListData = JSON.parse(localStorage.getItem("ISL_LIST"));
        if (islListData) {
            var storageTime = islListData.timeStamp;
            var startTime = new Date(storageTime).getTime();
            var lastTime = new Date().getTime();
            let timeminDiff = lastTime - startTime;
            var diffMins = Math.round(((timeminDiff % 86400000) % 3600000) / 60000);
            ;
            var islList = islListData.list_data;
            if (islList && diffMins < 5) {
                this.dataSet = islList;
                this.loadingData = false;
            }
            else {
                this.getISLlistService();
            }
        }
        else {
            this.getISLlistService();
        }
    }
    getISLlistService() {
        this.loaderService.show("Loading ISL");
        this.loadingData = true;
        let query = { _: new Date().getTime() };
        this.islListService.getIslList(query).subscribe((data) => {
            var islListData = JSON.stringify({ 'timeStamp': new Date().getTime(), "list_data": data });
            localStorage.setItem('ISL_LIST', islListData);
            if (!data || data.length == 0) {
                this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].no_isl_available, "Information");
                this.dataSet = [];
            }
            else {
                this.dataSet = data;
            }
            this.loadingData = false;
        }, error => {
            this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].no_isl_available, "Information");
            this.dataSet = [];
            this.loadingData = false;
        });
    }
    ngAfterViewInit() {
    }
};
IslListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isl-list',
        template: __webpack_require__(/*! ./isl-list.component.html */ "./src/app/modules/isl/isl-list/isl-list.component.html"),
        styles: [__webpack_require__(/*! ./isl-list.component.css */ "./src/app/modules/isl/isl-list/isl-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"],
        src_app_common_services_isl_list_service__WEBPACK_IMPORTED_MODULE_4__["IslListService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"]])
], IslListComponent);



/***/ }),

/***/ "./src/app/modules/isl/isl.component.css":
/*!***********************************************!*\
  !*** ./src/app/modules/isl/isl.component.css ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".navigation-bar {\r\n\tborder-bottom: 1px solid #adacac;\r\n\tpadding-bottom: 14px;\r\n\tmargin: 0 0 20px;\r\n}\r\n\r\n.navigation-bar li {\r\n\tdisplay: inline-block;\r\n\tfloat:left;\r\n\tmargin-right: 5px;\r\n\tcolor: #333;\r\n\tfont-size: 15px;\r\n}\r\n\r\n.navigation-bar li a {\r\n\tcolor: #333;\r\n\tfont-weight: 500;\r\n}\r\n\r\n.navigation-bar li i {\r\n\tmargin-right: 5px;\r\n}\r\n\r\ntable.dataTable.no-footer {\r\n    border: 1px solid #ccc;\r\n    font-size: 13px;\r\n    margin: 15px 0;\r\n    float: left;\r\n    width: 100%;\r\n    table-layout: fixed;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9pc2wvaXNsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQyxnQ0FBZ0M7Q0FDaEMsb0JBQW9CO0NBQ3BCLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLHFCQUFxQjtDQUNyQixVQUFVO0NBQ1YsaUJBQWlCO0NBQ2pCLFdBQVc7Q0FDWCxlQUFlO0FBQ2hCOztBQUVBO0NBQ0MsV0FBVztDQUNYLGdCQUFnQjtBQUNqQjs7QUFFQTtDQUNDLGlCQUFpQjtBQUNsQjs7QUFFQTtJQUNJLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2YsY0FBYztJQUNkLFdBQVc7SUFDWCxXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9pc2wvaXNsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubmF2aWdhdGlvbi1iYXIge1xyXG5cdGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjYWRhY2FjO1xyXG5cdHBhZGRpbmctYm90dG9tOiAxNHB4O1xyXG5cdG1hcmdpbjogMCAwIDIwcHg7XHJcbn1cclxuXHJcbi5uYXZpZ2F0aW9uLWJhciBsaSB7XHJcblx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG5cdGZsb2F0OmxlZnQ7XHJcblx0bWFyZ2luLXJpZ2h0OiA1cHg7XHJcblx0Y29sb3I6ICMzMzM7XHJcblx0Zm9udC1zaXplOiAxNXB4O1xyXG59XHJcblxyXG4ubmF2aWdhdGlvbi1iYXIgbGkgYSB7XHJcblx0Y29sb3I6ICMzMzM7XHJcblx0Zm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLm5hdmlnYXRpb24tYmFyIGxpIGkge1xyXG5cdG1hcmdpbi1yaWdodDogNXB4O1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUubm8tZm9vdGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/isl/isl.component.html":
/*!************************************************!*\
  !*** ./src/app/modules/isl/isl.component.html ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\t<!-- Loader Component -->\r\n\t<app-isl-list *ngIf=\"page == 'list'\"></app-isl-list>\r\n\t<app-isl-detail *ngIf=\"page == 'detail'\"></app-isl-detail>"

/***/ }),

/***/ "./src/app/modules/isl/isl.component.ts":
/*!**********************************************!*\
  !*** ./src/app/modules/isl/isl.component.ts ***!
  \**********************************************/
/*! exports provided: IslComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IslComponent", function() { return IslComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");







let IslComponent = class IslComponent {
    constructor(titleService, commonService, toastr, router) {
        this.titleService = titleService;
        this.commonService = commonService;
        this.toastr = toastr;
        this.router = router;
        this.page = 'list';
        if (!this.commonService.hasPermission('menu_isl')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
    }
    openPage(page) {
        this.titleService.setTitle('OPEN KILDA - ISL');
        this.page = page;
    }
};
IslComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-isl',
        template: __webpack_require__(/*! ./isl.component.html */ "./src/app/modules/isl/isl.component.html"),
        styles: [__webpack_require__(/*! ./isl.component.css */ "./src/app/modules/isl/isl.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
], IslComponent);



/***/ }),

/***/ "./src/app/modules/networkpath/networkpath.component.css":
/*!***************************************************************!*\
  !*** ./src/app/modules/networkpath/networkpath.component.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n.path {\r\n    float: left;\r\n    margin-bottom:60px;\r\n}\r\n\r\n.networkPath h3{\r\n    margin: 0 0 25px;\r\n    font-weight: 700;\r\n    font-size: 13px;\r\n}\r\n\r\n.path .number {\r\n    float: left;\r\n    width: 26px;\r\n    height: 26px;\r\n    border: 2px solid #ccc;\r\n    border-radius: 50%;\r\n    text-align: center;\r\n    line-height: 25px;\r\n    font-weight: 700;\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n}\r\n\r\n.path .line {\r\n    width: 10px;\r\n    float: left;\r\n    height: 2px;\r\n    background: #ccc;\r\n    margin-top: 12px;\r\n}\r\n\r\n.path .text {\r\n    float: left;\r\n    width: auto;\r\n    background: #262d37;\r\n    padding: 7px 5px;\r\n    color: #fff;\r\n    border-radius: 20px;\r\n    font-size: 12px;\r\n}\r\n\r\n.horizontal-line {\r\n    position: absolute;\r\n    width: calc(100% - 47px);\r\n    height: 2px;\r\n    background: #ccc;\r\n    right: 18px;\r\n    top: 96px;\r\n}\r\n\r\na.badge.badge-dark.custom-button {\r\n    padding: 5px 7px;\r\n    background: grey;\r\n    border-radius: 10px;\r\n    color: #fff;\r\n}\r\n\r\n.path:last-child .line:nth-child(6){\r\n    display: none;\r\n}\r\n\r\n.islPath{\r\n    cursor:pointer;\r\n    width:50px!important;\r\n}\r\n\r\n.islPath:hover {\r\n    background: #00baff!important;\r\n    height:4px!important;\r\n   \r\n  }\r\n \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9uZXR3b3JrcGF0aC9uZXR3b3JrcGF0aC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtJQUNJLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWixzQkFBc0I7SUFDdEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixlQUFlO0FBQ25COztBQUVBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCxXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsd0JBQXdCO0lBQ3hCLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsV0FBVztJQUNYLFNBQVM7QUFDYjs7QUFDQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsb0JBQW9CO0FBQ3hCOztBQUNBO0lBQ0ksNkJBQTZCO0lBQzdCLG9CQUFvQjs7RUFFdEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL25ldHdvcmtwYXRoL25ldHdvcmtwYXRoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnBhdGgge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOjYwcHg7XHJcbn1cclxuXHJcbi5uZXR3b3JrUGF0aCBoM3tcclxuICAgIG1hcmdpbjogMCAwIDI1cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG59XHJcblxyXG4ucGF0aCAubnVtYmVyIHtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgd2lkdGg6IDI2cHg7XHJcbiAgICBoZWlnaHQ6IDI2cHg7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDI1cHg7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4ucGF0aCAubGluZSB7XHJcbiAgICB3aWR0aDogMTBweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgaGVpZ2h0OiAycHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjY2NjO1xyXG4gICAgbWFyZ2luLXRvcDogMTJweDtcclxufVxyXG5cclxuLnBhdGggLnRleHQge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogYXV0bztcclxuICAgIGJhY2tncm91bmQ6ICMyNjJkMzc7XHJcbiAgICBwYWRkaW5nOiA3cHggNXB4O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG4uaG9yaXpvbnRhbC1saW5lIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA0N3B4KTtcclxuICAgIGhlaWdodDogMnB4O1xyXG4gICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgIHJpZ2h0OiAxOHB4O1xyXG4gICAgdG9wOiA5NnB4O1xyXG59XHJcbmEuYmFkZ2UuYmFkZ2UtZGFyay5jdXN0b20tYnV0dG9uIHtcclxuICAgIHBhZGRpbmc6IDVweCA3cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBncmV5O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4ucGF0aDpsYXN0LWNoaWxkIC5saW5lOm50aC1jaGlsZCg2KXtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuLmlzbFBhdGh7XHJcbiAgICBjdXJzb3I6cG9pbnRlcjtcclxuICAgIHdpZHRoOjUwcHghaW1wb3J0YW50O1xyXG59XHJcbi5pc2xQYXRoOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICMwMGJhZmYhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OjRweCFpbXBvcnRhbnQ7XHJcbiAgIFxyXG4gIH1cclxuICJdfQ== */"

/***/ }),

/***/ "./src/app/modules/networkpath/networkpath.component.html":
/*!****************************************************************!*\
  !*** ./src/app/modules/networkpath/networkpath.component.html ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"network_path_div\">\r\n  <form [formGroup]=\"networkpathForm\" id=\"networkpathForm\" #roleform=\"ngForm\">\r\n    <div class=\"row form-group clearfix\">\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"row\">\r\n          <label class='col-sm-3 col-form-label'>Source Switch:</label>\r\n          <div class='col-sm-6'>\r\n            <ng-select\r\n            formControlName=\"source_switch\"\r\n             [items]=\"switchList\"\r\n             bindLabel=\"name\"\r\n             bindValue=\"switch_id\"\r\n             labelForId=\"switch_id\"\r\n             placeholder=\"Select Switch\"\r\n             clearAllText=\"Clear\"\r\n             [clearable]=\"f.source_switch.value\">               \r\n             </ng-select>\r\n             <div *ngIf=\"submitted && f.source_switch.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.source_switch.errors.required\">Please select source switch</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"row\">\r\n          <label class='col-sm-3 col-form-label'>Destination Switch:</label>\r\n          <div class='col-sm-6'>\r\n            <ng-select\r\n            formControlName=\"target_switch\"\r\n             [items]=\"switchList\"\r\n             bindLabel=\"name\"\r\n             bindValue=\"switch_id\"\r\n             labelForId=\"switch_id\"\r\n             placeholder=\"Select Switch\"\r\n             clearAllText=\"Clear\"\r\n             [clearable]=\"f.target_switch.value\">\r\n             </ng-select>\r\n             <div *ngIf=\"submitted && f.target_switch.errors\" class=\"invalid-feedback\">\r\n              <div *ngIf=\"f.target_switch.errors.required\">Please select destination switch</div>\r\n            </div>\r\n  \r\n          </div>\r\n          <div class=\"col-sm-3\">\r\n            <span class=\"btn kilda_btn\" (click)=\"getNetworkPath()\" style=\"margin-right:65px;\">Go</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n<div *ngIf=\"networkPaths && networkPaths.length\" class=\"col-md-12 mt-5\" style=\"border-top:1px solid #ccc;\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-4\">\r\n        <table class=\"table network-path-tbl mt-5\" >\r\n            <thead>\r\n              <th>Bandwidth(Mbps) <i style=\"cursor:pointer;\" (click)=\"sortNetworkData('bandwidth');\" class=\"fa fa-fw fa-sort\"></i> </th>\r\n              <th>Latency(ns) <i style=\"cursor:pointer;\"  (click)=\"sortNetworkData('latency');\"  class=\"fa fa-fw fa-sort\"></i></th>\r\n              <th>Nodes <i style=\"cursor:pointer;\"  (click)=\"sortNetworkData('nodes');\"  class=\"fa fa-fw fa-sort\"></i></th>\r\n            </thead>\r\n          </table>\r\n          <table  class=\"table network-path-tbl\" style=\"margin-top:-18px;\">\r\n              <tbody>\r\n                  <tr (click)=\"viewPath(i,pathData.nodes)\" [ngClass]= \"{'activerow':activeRowIndex == i}\" *ngFor=\"let pathData of networkPaths; let i = index;\">\r\n                     <td>{{pathData.bandwidth / 1000}}</td>\r\n                    <td>{{pathData.latency}}</td>\r\n                    <td>{{pathData.nodes.length}}</td>\r\n                    </tr>\r\n          </tbody>\r\n          </table>\r\n    </div>\r\n    <div class=\"col-md-8\" style=\"border-left:1px solid #ccc; min-height:350px; \">\r\n      <div class=\"main-list\" style=\"float:right; margin-top:10px;\" *ngIf=\"loadZoomIcon\">\r\n          <a  class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn(-1)\"><i class=\"fa fa-search-minus\"></i></a>\r\n           <a  class=\"custom-icon-path cursor-pointer\" (click)=\"zoomFn(1)\"><i class=\"fa fa-search-plus\"></i></a>\r\n        </div>\r\n      <div id=\"networkpathGraphWrapper\" class=\"pathGraph\">\r\n        <div class=\"path-graph-component-loader\" [hidden] =\"!pathLoader\"></div>\r\n        <div class=\"path-graph-wrapper\" [hidden]=\"!loadpathGraph\"></div>\r\n        <svg id=\"svgForwardPath\"></svg>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/networkpath/networkpath.component.ts":
/*!**************************************************************!*\
  !*** ./src/app/modules/networkpath/networkpath.component.ts ***!
  \**************************************************************/
/*! exports provided: NetworkpathComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NetworkpathComponent", function() { return NetworkpathComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/enums/isl.enum */ "./src/app/common/enums/isl.enum.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");













let NetworkpathComponent = class NetworkpathComponent {
    constructor(titleService, toastr, formBuilder, loaderService, switchService, commonService, router) {
        this.titleService = titleService;
        this.toastr = toastr;
        this.formBuilder = formBuilder;
        this.loaderService = loaderService;
        this.switchService = switchService;
        this.commonService = commonService;
        this.router = router;
        this.switchList = [];
        this.sortFlag = { bandwidth: false, latency: false, nodes: false };
        this.activeRowIndex = null;
        this.activePathData = null;
        this.submitted = false;
        this.networkPaths = [];
        this.pathLoader = false;
        this.loadpathGraph = false;
        this.linksSourceArr = [];
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.graphShow = false;
        this.min_zoom = 0.15;
        this.max_zoom = 3;
        this.loadZoomIcon = false;
        this.zoomLevel = 0.15;
        this.zoomStep = 0.15;
        this.translateX = 0;
        this.translateY = 0;
        this.nodes = [];
        this.links = [];
        this.ports = [];
        this.mLinkNum = {};
        this.isDragMove = true;
        this.flagHover = true;
        this.dragStart = () => {
            if (!d3__WEBPACK_IMPORTED_MODULE_8__["event"].active)
                this.forceSimulation.alphaTarget(1).stop();
        };
        this.dragging = (d, i) => {
            this.isDragMove = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_8__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_8__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_8__["event"].dy;
            this.tick();
        };
        this.dragEnd = (d, i) => {
            if (!d3__WEBPACK_IMPORTED_MODULE_8__["event"].active)
                this.forceSimulation.alphaTarget(0);
            this.flagHover = false;
            d.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff
            this.tick();
        };
        this.tick = () => {
            let ref = this;
            var lookup = {};
            this.graphLink.attr("d", d => {
                var islCount = 0;
                var matchedIndex = 1;
                var key = d.source.switch_id + "_" + d.target.switch_id;
                var key1 = d.target.switch_id + "_" + d.source.switch_id;
                var processKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
                if (this.linksSourceArr &&
                    typeof this.linksSourceArr[processKey] !== "undefined") {
                    islCount = this.linksSourceArr[processKey].length;
                }
                if (islCount > 1) {
                    this.linksSourceArr[processKey].map(function (o, i) {
                        if (ref.isObjEquivalent(o, d)) {
                            matchedIndex = i + 1;
                            return;
                        }
                    });
                }
                var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy), 
                // Defaults for normal edge.
                drx = dr, dry = dr, xRotation = 0, // degrees
                largeArc = 0, // 1 or 0
                sweep = 1; // 1 or 0
                var lTotalLinkNum = this.mLinkNum[d.source.index + "," + d.target.index] ||
                    this.mLinkNum[d.target.index + "," + d.source.index];
                if (lTotalLinkNum > 1) {
                    dr = dr / (1 + (1 / lTotalLinkNum) * (d.linkindex - 1));
                }
                // generate svg path
                lookup[d.key] = d.flow_count;
                if (lookup[d.Key] == undefined) {
                    if (islCount == 1) {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "L" +
                            d.target.x +
                            "," +
                            d.target.y);
                    }
                    else {
                        if (islCount % 2 != 0 && matchedIndex == 1) {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "L" +
                                d.target.x +
                                "," +
                                d.target.y);
                        }
                        else if (matchedIndex % 2 == 0) {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 1," +
                                d.target.x +
                                "," +
                                d.target.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 0," +
                                d.source.x +
                                "," +
                                d.source.y);
                        }
                        else {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 0," +
                                d.target.x +
                                "," +
                                d.target.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 1," +
                                d.source.x +
                                "," +
                                d.source.y);
                        }
                    }
                }
                else {
                    if (d.source_switch == d.target_switch) {
                        // Self edge.
                        if (x1 === x2 && y1 === y2) {
                            // Fiddle with this angle to get loop oriented.
                            xRotation = -45;
                            // Needs to be 1.
                            largeArc = 1;
                            // Change sweep to change orientation of loop.
                            //sweep = 0;
                            // Make drx and dry different to get an ellipse
                            // instead of a circle.
                            drx = 50;
                            dry = 20;
                            // For whatever reason the arc collapses to a point if the beginning
                            // and ending points of the arc are the same, so kludge it.
                            x2 = x2 + 1;
                            y2 = y2 + 1;
                        }
                        return ("M" +
                            x1 +
                            "," +
                            y1 +
                            "A" +
                            drx +
                            "," +
                            dry +
                            " " +
                            xRotation +
                            "," +
                            largeArc +
                            "," +
                            sweep +
                            " " +
                            x2 +
                            "," +
                            y2);
                    }
                    else {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "L" +
                            d.target.x +
                            "," +
                            d.target.y);
                    }
                }
            });
            this.graphNode.attr("transform", function (d) {
                if (d.x && d.y) {
                    return "translate(" + d.x + "," + d.y + ")";
                }
            });
            this.graphPortSource.attr('transform', function (d) {
                var yvalue = (d.source.y + d.target.y) / 2;
                var xvalue = (d.source.x + d.target.x) / 2;
                var points = ref.getCornerPoint(d.source.x, d.source.y, d.target.x, d.target.y);
                if (typeof (points) != 'undefined' && points.length) {
                    xvalue = points[0];
                    yvalue = points[1];
                }
                return "translate(" + xvalue + "," + yvalue + ")";
            });
            this.graphPortTarget.attr('transform', function (d) {
                var yvalue = (d.source.y + d.target.y) / 2;
                var xvalue = (d.source.x + d.target.x) / 2;
                var points = ref.getCornerPoint(d.target.x, d.target.y, d.source.x, d.source.y);
                if (typeof (points) != 'undefined' && points.length) {
                    xvalue = points[0];
                    yvalue = points[1];
                }
                return "translate(" + xvalue + "," + yvalue + ")";
            });
        };
        this.nodeclick = (d, index) => {
            this.showSwitchDetails(d);
        };
        this.showSwitchDetails = d => {
            localStorage.setItem("switchDetailsJSON", JSON.stringify(d));
            window.location.href = "switches/details/" + d.switch_id;
        };
        this.zoomFit = () => {
            var bounds = this.g.node().getBBox();
            var parent = this.g.node().parentElement;
            var fullWidth = $(parent).width(), fullHeight = $(parent).height();
            var width = bounds.width, height = bounds.height;
            var midX = (bounds.x + width) / 2, midY = (bounds.y + height) / 2;
            if (width == 0 || height == 0)
                return;
            if (this.nodes.length >= 50) {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_8__["zoomIdentity"]
                    .scale(this.min_zoom)
                    .translate((fullWidth / 2 - this.min_zoom * midX) / this.min_zoom, (fullHeight / 2 - this.min_zoom * midY) / this.min_zoom);
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
            else {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_8__["zoomIdentity"]
                    .scale(this.zoomLevel)
                    .translate((fullWidth / 2 - this.min_zoom * midX), (fullHeight / 2 - this.min_zoom * midY) - 200);
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
        };
        if (!this.commonService.hasPermission('menu_available_path')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Network Path');
        this.loadSwitchList();
        this.networkpathForm = this.formBuilder.group({
            source_switch: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
            target_switch: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_6__["Validators"].required],
        });
    }
    loadSwitchList() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].loading_switches);
        this.switchService.getSwitchList().subscribe((data) => {
            this.switchList = data;
            this.loaderService.hide();
        }, error => {
            this.loaderService.hide();
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].no_switch_data, 'Error');
        });
    }
    get f() {
        return this.networkpathForm.controls;
    }
    sortNetworkData(type) {
        if (this.sortFlag[type]) {
            this.sortFlag[type] = !this.sortFlag[type];
            this.networkPaths = this.networkPaths.sort(function (a, b) {
                if (type == 'nodes') {
                    return a[type].length - b[type].length;
                }
                return a[type] - b[type];
            });
        }
        else {
            this.sortFlag[type] = !this.sortFlag[type];
            this.networkPaths = this.networkPaths.sort(function (a, b) {
                if (type == 'nodes') {
                    return b[type].length - a[type].length;
                }
                return b[type] - a[type];
            });
        }
    }
    viewPath(i, data) {
        if (this.activeRowIndex == i) {
            this.activeRowIndex = null;
            this.activePathData = null;
        }
        else {
            this.activeRowIndex = i;
            this.activePathData = data;
            this.loadGraph(data);
        }
    }
    getNetworkPath() {
        this.submitted = true;
        var self = this;
        if (this.networkpathForm.invalid) {
            return;
        }
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].fetching_network_paths);
        self.networkPaths = [];
        this.switchService.getNetworkPath(this.networkpathForm.controls['source_switch'].value, this.networkpathForm.controls['target_switch'].value).subscribe(function (paths) {
            self.submitted = false;
            self.networkPaths = paths.paths.filter(function (d) {
                return d.nodes.length;
            });
            if (self.networkPaths.length == 0) {
                self.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].no_data_found, 'Success');
            }
            self.loaderService.hide();
        }, error => {
            self.submitted = false;
            self.loaderService.hide();
            self.toastr.error("Error:" + error.error['error-auxiliary-message'], 'Error');
        });
    }
    loadGraph(data) {
        this.loadZoomIcon = false;
        var commonSwitches = [];
        var links = [];
        var nodes = [];
        var ports = [];
        var i = 0;
        for (let d of data) {
            commonSwitches.push({ switch_id: d.switch_id, switch_name: d.switch_name, type: "switchnode" });
            if (typeof (d.input_port) !== 'undefined') {
                ports.push({ switch_id: d.switch_id + "_" + d.input_port, switch_name: d.input_port, type: "portNode" });
            }
            if (typeof (d.output_port) !== 'undefined') {
                ports.push({ switch_id: d.switch_id + "_" + d.output_port, switch_name: d.output_port, type: "portNode" });
            }
            if (typeof (data[i + 1]) != 'undefined' && typeof (data[i + 1].switch_id) !== 'undefined') {
                links.push({
                    source_detail: { output_port: d.output_port, id: d.switch_id },
                    target_detail: { input_port: data[i + 1].input_port, id: data[i + 1].switch_id },
                    source: { switch_id: d.switch_id, switch_name: d.switch_id },
                    target: { switch_id: data[i + 1].switch_id, switch_name: data[i + 1].switch_id },
                    type: 'isl'
                });
            }
            i++;
        }
        for (let d of commonSwitches) {
            nodes.push(d);
        }
        for (let d of ports) {
            this.ports.push(d);
        }
        this.svgElement = d3__WEBPACK_IMPORTED_MODULE_8__["select"]('#svgForwardPath');
        this.pathLoader = true;
        this.loadpathGraph = true;
        this.initSimulation(nodes, links, "networkpathGraphWrapper");
    }
    /**** graph plot code ***/
    initSimulation(nodes, links, graphWrapper) {
        this.nodes = nodes;
        this.links = links;
        var self = this;
        self.linksSourceArr = [];
        if (links.length > 0) {
            try {
                var result = this.commonService.groupBy(links, function (item) {
                    return [item.source, item.target];
                });
                for (var i = 0, len = result.length; i < len; i++) {
                    var row = result[i];
                    if (row.length >= 1) {
                        for (var j = 0, len1 = row.length; j < len1; j++) {
                            var key = row[j].source.switch_id + "_" + row[j].target.switch_id;
                            var key1 = row[j].target.switch_id + "_" + row[j].source.switch_id;
                            var prcessKey = (self.linksSourceArr && typeof self.linksSourceArr[key] !== "undefined") ? key : key1;
                            if (typeof self.linksSourceArr[prcessKey] !== "undefined") {
                                self.linksSourceArr[prcessKey].push(row[j]);
                            }
                            else {
                                self.linksSourceArr[key] = [];
                                self.linksSourceArr[key].push(row[j]);
                            }
                        }
                    }
                }
            }
            catch (e) { }
        }
        var processedlinks = this.processLinks(nodes, links);
        self.zoomLevel = 0.45;
        self.svgElement.html("");
        var width = $("#" + graphWrapper)[0].clientWidth || window.innerWidth;
        var height = window.innerHeight - 100 || $("#" + graphWrapper)[0].clientHeight;
        self.svgElement.style('cursor', 'move');
        self.svgElement.attr("width", width);
        self.svgElement.attr("height", height);
        this.g = self.svgElement.append("g");
        this.graphLinkGroup = this.g.append("g").attr("id", `links`).attr("class", "links");
        this.graphNodeGroup = this.g.append('g').attr("class", "nodes").attr("id", "nodes");
        this.graphportGroupSource = this.g.append("g").attr("id", `sourcePorts`).attr("class", "sourcePorts");
        this.graphportGroupTarget = this.g.append("g").attr("id", `targetPorts`).attr("class", "targetPorts");
        this.size = d3__WEBPACK_IMPORTED_MODULE_8__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_8__["range"](1));
        this.zoom = d3__WEBPACK_IMPORTED_MODULE_8__["zoom"]()
            .scaleExtent([this.min_zoom, this.max_zoom])
            .extent([[0, 0], [width - 200, height - 50]])
            .on("zoom", () => {
            self.zoomLevel = Math.round(d3__WEBPACK_IMPORTED_MODULE_8__["event"].transform.k * 100) / 100;
            self.g.attr("transform", "translate(" +
                d3__WEBPACK_IMPORTED_MODULE_8__["event"].transform.x +
                "," +
                d3__WEBPACK_IMPORTED_MODULE_8__["event"].transform.y +
                ") scale(" +
                d3__WEBPACK_IMPORTED_MODULE_8__["event"].transform.k +
                ")");
        });
        this.mLinkNum = this.setLinkIndexAndNum(processedlinks);
        this.forceSimulation = d3__WEBPACK_IMPORTED_MODULE_8__["forceSimulation"]()
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_8__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_8__["forceManyBody"]().strength(-1000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_8__["forceX"](width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_8__["forceY"](height / 2));
        this.forceSimulation.nodes(nodes);
        this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_8__["forceLink"]().links(processedlinks).distance((d) => {
            let distance = 10;
            if (d.type == 'isl') {
                distance = 150;
            }
            return distance;
        }).strength(0.1));
        this.forceSimulation.on("tick", () => {
            self.tick();
        });
        this.drag = d3__WEBPACK_IMPORTED_MODULE_8__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd);
        this.insertLinks(this.links);
        this.insertNodes(this.nodes);
        this.graphPortSource = this.insertSourcePorts(this.links);
        this.graphPortTarget = this.insertTargetPorts(this.links);
        this.svgElement.call(this.zoom);
        this.svgElement.on("dblclick.zoom", null);
        this.forceSimulation.restart();
        this.forceSimulation.on("end", () => {
            this.zoomFit();
            this.pathLoader = false;
            this.loadpathGraph = false;
            this.loadZoomIcon = true;
        });
    }
    processLinks(nodes, links) {
        var nodelength = nodes.length;
        var linklength = links.length;
        for (var i = 0; i < nodelength; i++) {
            for (var j = 0; j < linklength; j++) {
                if (nodes[i].switch_id == links[j]["source"]["switch_id"] &&
                    nodes[i].switch_id == links[j]["target"]["switch_id"]) {
                    links[j].source = i;
                    links[j].target = i;
                }
                else {
                    if (nodes[i].switch_id == links[j]["source"]["switch_id"]) {
                        links[j].source = i;
                    }
                    else if (nodes[i].switch_id == links[j]["target"]["switch_id"]) {
                        links[j].target = i;
                    }
                }
            }
        }
        return links;
    }
    setLinkIndexAndNum(links) {
        var mLinkNum = [];
        for (var i = 0; i < links.length; i++) {
            if (i != 0 &&
                links[i].source == links[i - 1].source.switch_id &&
                links[i].target == links[i - 1].target.switch_id) {
                links[i].linkindex = links[i - 1].linkindex + 1;
            }
            else {
                links[i].linkindex = 1;
            }
            // save the total number of links between two nodes
            if (mLinkNum[links[i].target.switch_id + "," + links[i].source.switch_id] !==
                undefined) {
                mLinkNum[links[i].target.switch_id + "," + links[i].source.switch_id] = links[i].linkindex;
            }
            else {
                mLinkNum[links[i].source.switch_id + "," + links[i].target.switch_id] = links[i].linkindex;
            }
        }
        return mLinkNum;
    }
    isObjEquivalent(a, b) {
        // Create arrays of property names
        var aProps = Object.getOwnPropertyNames(a);
        var bProps = Object.getOwnPropertyNames(b);
        if (aProps.length != bProps.length) {
            return false;
        }
        for (var i = 0; i < aProps.length; i++) {
            var propName = aProps[i];
            if (a[propName] !== b[propName]) {
                return false;
            }
        }
        return true;
    }
    getCornerPoint(x1, y1, x2, y2) {
        var y = (y1 + y2) / 2;
        var x = (x1 + x2) / 2;
        if (y1 < y2 && x1 > x2) {
            if (y - y1 < this.graphOptions.radius + 5 && x1 - x < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (x1 < x2 && y1 < y2) {
            if (x - x1 < this.graphOptions.radius + 5 && y - y1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (x1 > x2) {
            if (x1 - x < this.graphOptions.radius + 5 && y1 - y < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else if (y1 > y2) {
            if (y1 - y < this.graphOptions.radius + 5 && x - x1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
        else {
            if (x - x1 < this.graphOptions.radius + 5) {
                return [x, y];
            }
            else {
                return this.getCornerPoint(x1, y1, x, y);
            }
        }
    }
    insertSourcePorts(links) {
        var ref = this;
        let linkText = this.graphportGroupSource.selectAll("circle").data(links);
        let linkCircleTextSource = linkText
            .enter()
            .append("g")
            .attr("class", "text-circle sourceEnd");
        linkText.exit().remove();
        linkCircleTextSource.append('circle')
            .attr('class', function (d) {
            var classes = "circle-text sourceEnd port_circle";
            return classes;
        }).attr('id', function (d) {
            return "textCircle_" + d.source.switch_id;
        })
            .attr('r', '8')
            .attr('stroke', '#00baff')
            .attr('stroke-width', '1px')
            .attr('fill', '#FFF').attr('style', "cursor:pointer");
        linkCircleTextSource.append('text')
            .attr('class', function (d) {
            var classes = "aEnd port_text";
            return classes;
        }).attr('dx', function (d) {
            if (d.source_detail.output_port >= 10) {
                return "-6";
            }
            return "-3";
        })
            .attr("dy", function (d) {
            if (d.source_detail.output_port >= 10) {
                return "3";
            }
            return "5";
        })
            .attr('fill', '#000').text(function (d) {
            return d.source_detail.output_port;
        });
        return linkCircleTextSource.merge(linkText);
    }
    insertTargetPorts(links) {
        var ref = this;
        let linkText = this.graphportGroupTarget.selectAll("circle").data(links);
        let linkCircleTextTarget = linkText
            .enter()
            .append("g")
            .attr("class", "text-circle targetEnd");
        linkText.exit().remove();
        linkCircleTextTarget.append('circle')
            .attr('class', function (d) {
            var classes = "circle-text targetEnd port_circle";
            return classes;
        }).attr('id', function (d) {
            return "textCircle_" + d.target.switch_id;
        })
            .attr('r', '8')
            .attr('stroke', '#00baff')
            .attr('stroke-width', '1px')
            .attr('fill', '#FFF').attr('style', "cursor:pointer");
        linkCircleTextTarget.append('text')
            .attr('class', function (d) {
            var classes = "zEnd port_text";
            return classes;
        }).attr('dx', function (d) {
            if (d.target_detail.input_port >= 10) {
                return "-6";
            }
            return "-3";
        })
            .attr("dy", function (d) {
            if (d.target_detail.input_port >= 10) {
                return "3";
            }
            return "5";
        })
            .attr('fill', '#000').text(function (d) {
            return d.target_detail.input_port;
        });
        return linkCircleTextTarget.merge(linkText);
    }
    zoomFn(direction) {
        if (direction == 1) {
            this.forceSimulation.stop();
            if (this.zoomLevel + this.zoomStep <= this.max_zoom) {
                this.svgElement
                    .transition()
                    .duration(350)
                    .call(this.zoom.scaleTo, this.zoomLevel + this.zoomStep);
            }
        }
        else if (direction == -1) {
            this.forceSimulation.stop();
            if (this.zoomLevel - this.zoomStep >= this.min_zoom) {
                this.svgElement
                    .transition()
                    .duration(350)
                    .call(this.zoom.scaleTo, this.zoomLevel - this.zoomStep);
            }
        }
    }
    ;
    insertNodes(nodes) {
        let ref = this;
        let graphNodesData = this.graphNodeGroup
            .selectAll("g.node")
            .data(nodes, d => d.switch_id);
        let graphNodeElement = graphNodesData
            .enter()
            .append("g")
            .attr("class", function (d) {
            return "node " + d.switch_id.replace(/:+/g, "_");
        })
            .on("dblclick", null)
            .on("click", this.nodeclick)
            .call(d3__WEBPACK_IMPORTED_MODULE_8__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd));
        graphNodesData.exit().remove();
        graphNodeElement
            .append("circle")
            .attr("r", function (d) {
            if (d.type == 'switchnode') {
                return ref.graphOptions.radius;
            }
            else {
                return "10px";
            }
        })
            .attr("class", function (d, index) {
            var classes = "circle blue";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red";
            }
            return classes;
        })
            .attr("id", function (d, index) {
            return "circle_" + d.switch_id;
        })
            .style("cursor", "move");
        let text = graphNodeElement
            .append("text")
            .attr("dy", ".35em")
            .style("font-size", function (d) {
            return ref.graphOptions.nominal_text_size + "px";
        })
            .attr("class", "switchname");
        if (ref.graphOptions.text_center) {
            text
                .text(function (d) {
                return d.switch_name;
            })
                .style("text-anchor", "middle");
        }
        else {
            text
                .attr("dx", function (d) {
                return ref.size(d.size) || ref.graphOptions.nominal_base_node_size;
            })
                .text(function (d) {
                return d.switch_name;
            });
        }
        let images = graphNodeElement
            .append("svg:image")
            .attr("xlink:href", function (d) {
            if (d.type == 'switchnode') {
                return _environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].assetsPath + "/images/switch.png";
            }
            return "";
        })
            .attr("x", function (d) {
            return -29;
        })
            .attr("y", function (d) {
            return -29;
        })
            .attr("height", 58)
            .attr("width", 58)
            .attr("id", function (d, index) {
            return "image_" + index;
        })
            .attr("cursor", "pointer");
        this.graphNode = graphNodeElement.merge(graphNodesData);
    }
    insertPort(port) {
        var ref = this;
        var switch_id = port.switch_id.split("_")[0].replace(/:+/g, "_");
        let graphportNodeData = this.svgElement.selectAll("g.node").data(port, d => d.switch_id);
        let portNode = graphportNodeData.append('circle')
            .attr("r", function (d) {
            return "10px";
        })
            .attr("class", function (d, index) {
            var classes = "port_circle";
            return classes;
        })
            .attr("id", function (d, index) {
            return "port_circle_" + port.switch_id;
        })
            .style("cursor", "move");
    }
    insertLinks(links) {
        let ref = this;
        let graphLinksData = this.graphLinkGroup.selectAll("path.link").data(links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            return "link physical";
        })
            .attr("id", (d, index) => {
            return "link" + index;
        })
            .attr("stroke", function (d, index) {
            return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_4__["ISL"].DISCOVERED;
        });
        graphLinksData.exit().remove();
        this.graphLink = graphNewLink.merge(graphLinksData);
    }
};
NetworkpathComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-networkpath',
        template: __webpack_require__(/*! ./networkpath.component.html */ "./src/app/modules/networkpath/networkpath.component.html"),
        styles: [__webpack_require__(/*! ./networkpath.component.css */ "./src/app/modules/networkpath/networkpath.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_6__["FormBuilder"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_7__["SwitchService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_11__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]])
], NetworkpathComponent);



/***/ }),

/***/ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.css":
/*!*************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flow-list/affected-flow-list.component.css ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9yZXBvcnRzL2FmZmVjdGVkLWZsb3ctbGlzdC9hZmZlY3RlZC1mbG93LWxpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixjQUFjO0FBQ2xCOztBQUdBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsc0JBQXNCO0FBQzFCOztBQUdBO1FBQ1Esa0JBQWtCO1FBQ2xCLHVCQUF1QjtRQUN2QixtQkFBbUI7UUFDbkIsK0JBQStCO1FBQy9CLDRCQUE0QjtRQUM1QixnQkFBZ0I7UUFDaEIsc0JBQXNCOztBQUU5Qjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVwb3J0cy9hZmZlY3RlZC1mbG93LWxpc3QvYWZmZWN0ZWQtZmxvdy1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YVRhYmxlIHRmb290IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIGkuZmF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6MTJweDtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0aCBzcGFuIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0ZCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIFxyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdHIgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.html":
/*!**************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flow-list/affected-flow-list.component.html ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table id=\"flowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr class=\"tableHeading\">\r\n        \r\n        <th class=\"\">\r\n          <span title=\"Flow ID\">\r\n         Flow ID\r\n        </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedFlowId')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedFlowId\" id=\"expandedFlowId\"/>\r\n        </th>\r\n        <th class=\"\" >\r\n          <span title=\"Source Switch\">\r\n            Src Switch\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n            <input   class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchName\" id=\"expandedSrcSwitchName\"/>\r\n          \r\n        </th>\r\n        <th> <span title=\"Source Switch\">Src Switch ID</span></th>\r\n        <th class=\"\">\r\n          <span title=\"Destination Switch\">\r\n            Dst Switch\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchName')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchName\" id=\"expandedTargetSwitchName\"/>\r\n          \r\n        </th>\r\n        <th > <span  title=\"Destination Switch\">Dst Switch ID</span></th>\r\n        \r\n        <th >\r\n            <span title=\"State\">\r\n                Status\r\n           </span>\r\n             <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedStatus')\"></i>\r\n             <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedStatus\" id=\"expandedStatus\"/>\r\n           \r\n        </th>       \r\n        <th>\r\n            <span title=\"Reason\">\r\n                Reason\r\n               </span>\r\n                 <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedReason')\"></i>\r\n                 <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedReason\" id=\"expandedReason\"/>\r\n        </th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of data; let i = index\"  class=\"flowDataRow\">        \r\n        <td (click)=\"showFlow(row)\" class=\"divTableCell\" title=\"{{row.flowid }}\" [contextMenu]=\"copyFLow\"> \r\n          {{row.flowid || \"-\"}} \r\n          <context-menu #copyFLow>\r\n              <ng-template contextMenuItem (execute)=\"copyToClip($event,'flowid',i);\">\r\n                Copy to Clipboard\r\n              </ng-template>\r\n            </context-menu>\r\n         </td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.source_switch_name}}\" [contextMenu]=\"copySourceSwitch\">\r\n          {{row.source_switch_name || \"-\"}}\r\n          <context-menu #copySourceSwitch>\r\n              <ng-template contextMenuItem (execute)=\"copyToClip($event,'source_switch_name',i);\">\r\n                Copy to Clipboard\r\n              </ng-template>\r\n            </context-menu>\r\n        </td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.src_switch}}\">{{row.source_switch || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.target_switch_name}}\" [contextMenu]=\"copyTargetSwitch\">\r\n          {{row.target_switch_name || \"-\"}}\r\n          <context-menu #copyTargetSwitch>\r\n            <ng-template contextMenuItem (execute)=\"copyToClip($event,'target_switch_name',i);\">\r\n              Copy to Clipboard\r\n            </ng-template>\r\n          </context-menu>\r\n        </td>\r\n         <td (click)=\"showFlow(row)\" title=\"{{row.target_switch}}\">{{row.target_switch || \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.status || row.state ||  '-'}}\">{{ row.status || row.state ||  \"-\"}}</td>\r\n        <td (click)=\"showFlow(row)\" title=\"{{row.status_info}}\">{{row.status_info || \"-\"}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n\r\n  "

/***/ }),

/***/ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.ts":
/*!************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flow-list/affected-flow-list.component.ts ***!
  \************************************************************************************/
/*! exports provided: AffectedFlowListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AffectedFlowListComponent", function() { return AffectedFlowListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/common/services/flows.service */ "./src/app/common/services/flows.service.ts");











let AffectedFlowListComponent = class AffectedFlowListComponent {
    constructor(loaderService, renderer, router, commonService, flowService, clipboardService, modalService, formBuilder) {
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.router = router;
        this.commonService = commonService;
        this.flowService = flowService;
        this.clipboardService = clipboardService;
        this.modalService = modalService;
        this.formBuilder = formBuilder;
        this.data = [];
        this.refresh = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.typeFilter = '';
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.wrapperHide = true;
        this.expandedSrcSwitchName = false;
        this.expandedTargetSwitchName = false;
        this.expandedReason = false;
        this.expandedFlowId = false;
        this.expandedStatus = false;
        this.loadFilter = false;
        this.activeStatus = '';
        this.clipBoardItems = [];
        this.wrapperHide = false;
    }
    ngOnInit() {
        let ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            "order": [],
            language: {
                searchPlaceholder: "Search"
            },
            buttons: {
                buttons: [
                    { extend: 'csv', text: 'Export', filename: "Affected_Flows", className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                ]
            },
            drawCallback: function () {
                if (jQuery('#flowDataTable tbody tr').length < 10) {
                    jQuery('#flowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#flowDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '10%' },
                { sWidth: '10%', "sType": "name", "bSortable": true },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '40%', "sType": "name", "bSortable": true },
            ],
            columnDefs: [
                {
                    "targets": [2],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [4],
                    "visible": false,
                    "searchable": true
                },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    ngOnChanges(change) {
        var ref = this;
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
                this.clipBoardItems = this.data;
            }
        }
        if (typeof (change.textSearch) !== 'undefined' && change.textSearch.currentValue) {
            this.fulltextSearch(change.textSearch.currentValue);
        }
        this.triggerSearch();
    }
    loadFilters() {
        this.loadFilter = !this.loadFilter;
    }
    fulltextSearch(value) {
        if (this.dtTrigger)
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.search(value)
                    .draw();
            });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input[type="search"]', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
        this.enableButtons();
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    triggerSearch() {
        setTimeout(() => {
            jQuery('#expandedSrcSwitchName').trigger('change');
            jQuery('#expandedTargetSwitchName').trigger('change');
        }, 1000);
    }
    showFlow(flowObj) {
        localStorage.setItem("filterFlag", 'controller');
        this.router.navigate(['/flows/details/' + flowObj.flowid]);
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    copyToClip(event, copyItem, index) {
        var copyItem = this.clipBoardItems[index][copyItem];
        this.clipboardService.copyFromContent(copyItem);
    }
    enableButtons() {
        setTimeout(() => {
            this.datatableElement.dtInstance.then((dtInstance) => {
                var buttons = new jQuery.fn.dataTable.Buttons(dtInstance, {
                    buttons: [
                        { extend: 'csv', filename: "Affected_Flows", text: 'Export', className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                    ]
                }).container().appendTo($('#buttons'));
            });
        });
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"])
], AffectedFlowListComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], AffectedFlowListComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], AffectedFlowListComponent.prototype, "textSearch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], AffectedFlowListComponent.prototype, "refresh", void 0);
AffectedFlowListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-affected-flow-list',
        template: __webpack_require__(/*! ./affected-flow-list.component.html */ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.html"),
        styles: [__webpack_require__(/*! ./affected-flow-list.component.css */ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"],
        src_app_common_services_flows_service__WEBPACK_IMPORTED_MODULE_10__["FlowsService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__["ClipboardService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__["NgbModal"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__["FormBuilder"]])
], AffectedFlowListComponent);



/***/ }),

/***/ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.css":
/*!*******************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flows-report/affected-flows-report.component.css ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvcmVwb3J0cy9hZmZlY3RlZC1mbG93cy1yZXBvcnQvYWZmZWN0ZWQtZmxvd3MtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.html":
/*!********************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flows-report/affected-flows-report.component.html ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"switchdetails_div\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group input-group-sm\">\r\n                     <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                 </div>\r\n            </div>\r\n\r\n              <div class=\"col-sm-8 text-right text-filters mb-3\" id=\"buttons\">\r\n                 \r\n              </div>\r\n         </div>\r\n     </div>\r\n    <div class=\"clear clearfix\"></div>\r\n  </div>\r\n  <app-affected-flow-list  [textSearch]=\"textSearch\"  (refresh)=\"refreshFlowList('')\"   [data]=\"dataSet\" *ngIf=\"!loadingData\"></app-affected-flow-list>\r\n  \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.ts":
/*!******************************************************************************************!*\
  !*** ./src/app/modules/reports/affected-flows-report/affected-flows-report.component.ts ***!
  \******************************************************************************************/
/*! exports provided: AffectedFlowsReportComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AffectedFlowsReportComponent", function() { return AffectedFlowsReportComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_modules_reports_affected_flow_list_affected_flow_list_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/modules/reports/affected-flow-list/affected-flow-list.component */ "./src/app/modules/reports/affected-flow-list/affected-flow-list.component.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");









let AffectedFlowsReportComponent = class AffectedFlowsReportComponent {
    constructor(router, flowService, toastr, loaderService, renderer, commonService) {
        this.router = router;
        this.flowService = flowService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.commonService = commonService;
        this.hide = true;
        this.storedData = [];
        this.loadCount = 0;
        this.loadingData = true;
        this.statusList = [];
        this.activeStatus = '';
    }
    ngOnInit() {
        let statusParams = [''];
        this.getFlowList(statusParams, true);
    }
    ngAfterViewInit() {
    }
    ngOnDestroy() {
    }
    fulltextSearch(e) {
        this.textSearch = e.target.value || ' ';
    }
    getFlowList(statusParam, filter) {
        this.loadingData = true;
        this.dataSet = [];
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].loading_flows);
        if (this.storedData && this.storedData.length <= 0) {
            var statusParam = statusParam.filter(function (el) {
                return el != null && el != "";
            });
            let filtersOptions = statusParam.length > 0 ? { status: statusParam.join(","), controller: filter, _: new Date().getTime() } : { controller: filter, _: new Date().getTime() };
            this.flowService.getFlowsList(filtersOptions).subscribe((data) => {
                this.dataSet = data || [];
                if (this.dataSet.length == 0) {
                    this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].no_flow_available, 'Information');
                }
                this.dataSet = this.dataSet.filter(function (d) {
                    return d.status == 'DOWN' || d.status == 'DEGRADED';
                });
                this.loadingData = false;
            }, error => {
                this.toastr.info("No Flows Available", 'Information');
                this.loaderService.hide();
                this.loadingData = false;
                this.dataSet = [];
            });
        }
        else {
            this.loadingData = false;
            this.loaderService.hide();
        }
    }
    refreshFlowList() {
        this.textSearch = '';
        let statusParams = [''];
        jQuery('#search-input').val('');
        this.storedData = [];
        this.getFlowList(statusParams, true);
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    triggerSearch() {
        setTimeout(() => {
            jQuery('#expandedSrcSwitchName').trigger('change');
            jQuery('#expandedTargetSwitchName').trigger('change');
        }, 1000);
    }
    ngOnChanges(change) {
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], AffectedFlowsReportComponent.prototype, "srcSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], AffectedFlowsReportComponent.prototype, "dstSwitch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(src_app_modules_reports_affected_flow_list_affected_flow_list_component__WEBPACK_IMPORTED_MODULE_7__["AffectedFlowListComponent"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", src_app_modules_reports_affected_flow_list_affected_flow_list_component__WEBPACK_IMPORTED_MODULE_7__["AffectedFlowListComponent"])
], AffectedFlowsReportComponent.prototype, "childFlowComponent", void 0);
AffectedFlowsReportComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-affected-flows-report',
        template: __webpack_require__(/*! ./affected-flows-report.component.html */ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.html"),
        styles: [__webpack_require__(/*! ./affected-flows-report.component.css */ "./src/app/modules/reports/affected-flows-report/affected-flows-report.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_2__["FlowsService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
], AffectedFlowsReportComponent);



/***/ }),

/***/ "./src/app/modules/settings/identity-server/identity-server.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/settings/identity-server/identity-server.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3MvaWRlbnRpdHktc2VydmVyL2lkZW50aXR5LXNlcnZlci5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/settings/identity-server/identity-server.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/settings/identity-server/identity-server.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"tab-pane active\" id=\"identityServerTab\">\r\n  <form  class=\"setting\" novalidate (ngSubmit)=\"validateIdentityData()\" [formGroup]=\"identityServerForm\" method=\"POST\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error':  (!i.username.valid && (i.username.dirty || i.username.touched)  && i.username.errors || submitted) && (i.username.errors && i.username.errors.required)}\">\r\n      <label for=\"username\" class=\"col-sm-2 text-right col-form-label required\">Username:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input  formControlName=\"username\"  type=\"text\" class=\"form-control\" placeholder=\"Username\" />\r\n        <div class=\"invalid-feedback\">\r\n          <div  *ngIf=\" (!i.username.valid && (i.username.dirty || i.username.touched)  && i.username.errors || submitted) && (i.username.errors && i.username.errors.required)\">Username is required.</div>\r\n        </div>\r\n       </div>  \r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error':(!i.password.valid && (i.password.dirty || i.password.touched) && i.password.errors || submitted) && (i.password.errors && i.password.errors.required)}\">\r\n      <label for=\"password\" class=\"col-sm-2 text-right col-form-label required\">Password:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input  formControlName=\"password\" type=\"password\"  class=\"form-control\" placeholder=\"Password\"  />\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"(!i.password.valid && (i.password.dirty || i.password.touched) && i.password.errors || submitted) && (i.password.errors && i.password.errors.required)\" class=\"error\" >Password is required.</div>\r\n        </div>\r\n      </div> \r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error':((!i['oauth-generate-token-url']['controls'].url.valid && (i['oauth-generate-token-url']['controls'].url.dirty || i['oauth-generate-token-url']['controls'].url.touched )  &&  i['oauth-generate-token-url']['controls'].url.errors || submitted)  && ( i['oauth-generate-token-url']['controls'].url.errors && i['oauth-generate-token-url']['controls'].url.errors.required)) || ((!i['oauth-generate-token-url']['controls'].url.valid && (i['oauth-generate-token-url']['controls'].url.dirty || i['oauth-generate-token-url']['controls'].url.touched) &&  i['oauth-generate-token-url']['controls'].url.errors || submitted ) && (i['oauth-generate-token-url']['controls'].url.errors && i['oauth-generate-token-url']['controls'].url.errors.pattern)) }\"  [formGroupName]=\"'oauth-generate-token-url'\">\r\n      <label for=\"tokenurl\" class=\"col-sm-2 text-right col-form-label required\">Generate Token URL:</label> \r\n      <div class=\"col-sm-6\">\r\n        <input  rel=\"urltext\"  formControlName=\"url\"  type=\"text\" class=\"form-control\" placeholder=\"Generate Token URL\"  /> \r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"(!i['oauth-generate-token-url']['controls'].url.valid && (i['oauth-generate-token-url']['controls'].url.dirty || i['oauth-generate-token-url']['controls'].url.touched )  &&  i['oauth-generate-token-url']['controls'].url.errors || submitted)  && ( i['oauth-generate-token-url']['controls'].url.errors && i['oauth-generate-token-url']['controls'].url.errors.required)\" class=\"error\" >Token URL is required.</div>\r\n        </div>\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"(!i['oauth-generate-token-url']['controls'].url.valid && (i['oauth-generate-token-url']['controls'].url.dirty || i['oauth-generate-token-url']['controls'].url.touched) &&  i['oauth-generate-token-url']['controls'].url.errors || submitted ) && (i['oauth-generate-token-url']['controls'].url.errors && i['oauth-generate-token-url']['controls'].url.errors.pattern)\" class=\"error\" >Kindly enter a valid url.</div>\r\n        </div>\r\n          </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error':((!i['oauth-refresh-token-url']['controls'].url.valid && (i['oauth-refresh-token-url']['controls'].url.dirty || i['oauth-refresh-token-url']['controls'].url.touched )   && i['oauth-refresh-token-url']['controls'].url.errors || submitted) && (i['oauth-refresh-token-url']['controls'].url.errors && i['oauth-refresh-token-url']['controls'].url.errors.required)) || ((!i['oauth-refresh-token-url']['controls'].url.valid && (i['oauth-refresh-token-url']['controls'].url.dirty || i['oauth-refresh-token-url']['controls'].url.touched ) && i['oauth-refresh-token-url']['controls'].url.errors || submitted) && (i['oauth-refresh-token-url']['controls'].url.errors && i['oauth-refresh-token-url']['controls'].url.errors.pattern)) }\"   [formGroupName]=\"'oauth-refresh-token-url'\">\r\n      <label for=\"refreshtokenurl\" class=\"col-sm-2 text-right col-form-label required\">Refresh Token URL:</label> \r\n      <div class=\"col-sm-6\">\r\n        <input  rel=\"urltext\"  formControlName=\"url\" type=\"text\" class=\"form-control\" placeholder=\"Refresh Token URL\"  /> \r\n        <div class=\"invalid-feedback\">\r\n          <div  *ngIf=\"(!i['oauth-refresh-token-url']['controls'].url.valid && (i['oauth-refresh-token-url']['controls'].url.dirty || i['oauth-refresh-token-url']['controls'].url.touched )   && i['oauth-refresh-token-url']['controls'].url.errors || submitted) && (i['oauth-refresh-token-url']['controls'].url.errors && i['oauth-refresh-token-url']['controls'].url.errors.required)\" class=\"error\" >Refresh Token URL is required.</div>\r\n        \r\n        </div>\r\n        <div class=\"invalid-feedback\">\r\n          <div  *ngIf=\"(!i['oauth-refresh-token-url']['controls'].url.valid && (i['oauth-refresh-token-url']['controls'].url.dirty || i['oauth-refresh-token-url']['controls'].url.touched ) && i['oauth-refresh-token-url']['controls'].url.errors || submitted) && (i['oauth-refresh-token-url']['controls'].url.errors && i['oauth-refresh-token-url']['controls'].url.errors.pattern)\" class=\"error\" >Kindly enter a valid url.</div>\r\n      \r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <div class=\"col-sm-8 text-right\">\r\n        <button type=\"button\"  (click)=\"enableEditForm()\"  *ngIf=\"isEdit && !isEditable\" class=\"btn kilda_btn\" >Edit</button>\r\n        <button type=\"button\" (click)=\"cancelEditForm()\"  *ngIf=\"isEdit && isEditable\" class=\"btn kilda_btn cancel_btn\">Cancel</button>\r\n        <button type=\"submit\" id=\"submitidentityBtn\" *ngIf=\"!isEdit || isEditable\" class=\"btn kilda_btn\">Validate and Submit</button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/settings/identity-server/identity-server.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/settings/identity-server/identity-server.component.ts ***!
  \*******************************************************************************/
/*! exports provided: IdentityServerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IdentityServerComponent", function() { return IdentityServerComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");








let IdentityServerComponent = class IdentityServerComponent {
    constructor(storesettingservice, formbuilder, toastr, loaderService, commonService) {
        this.storesettingservice = storesettingservice;
        this.formbuilder = formbuilder;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.commonService = commonService;
        this.isEdit = false;
        this.isEditable = false;
        this.submitted = false;
        this.urlPattern = '(https?://)?([\\da-z.-]+)\\.([a-z.]{2,6})[/\\w .-]*/?';
    }
    ngOnInit() {
        //const reg =new RegExp('^(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)');
        this.identityServerForm = this.formbuilder.group({
            "authType": "OAUTH_TWO",
            "username": ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            "password": ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            "oauth-generate-token-url": this.formbuilder.group({
                "name": ["oauth-generate-token"],
                "method-type": ["POST"],
                "url": ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                        (control) => {
                            let url = control.value;
                            if (!this.validateUrl(url)) {
                                return {
                                    pattern: {
                                        url: url
                                    }
                                };
                            }
                            return null;
                        },
                    ])],
                "header": [""],
                "body": [""]
            }),
            "oauth-refresh-token-url": this.formbuilder.group({
                "name": ["oauth-refresh-token"],
                "method-type": ["POST"],
                "url": ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                        (control) => {
                            let url = control.value;
                            if (!this.validateUrl(url)) {
                                return {
                                    pattern: {
                                        url: url
                                    }
                                };
                            }
                            return null;
                        },
                    ])],
                "header": [""],
                "body": [""]
            })
        });
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].loading_is_detail);
        this.storesettingservice.getIdentityServerConfigurations().subscribe((jsonResponse) => {
            if (jsonResponse && jsonResponse['oauth-generate-token-url'] && typeof (jsonResponse['oauth-generate-token-url']['url']) !== 'undefined') {
                this.commonService.setIdentityServer(true);
                this.IdentityDetailObj = jsonResponse;
                this.identityServerForm.setValue(jsonResponse);
                this.identityServerForm.disable();
                this.isEdit = true;
                this.loaderService.hide();
            }
            else {
                this.loaderService.hide();
            }
        }, (err) => {
            this.loaderService.hide();
        });
    }
    /** getter to get form fields */
    get i() {
        return this.identityServerForm.controls;
    }
    validateUrl(url) {
        if (url == '' || url == null) {
            return true;
        }
        var res = url.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
        if (res == null)
            return false;
        else
            return true;
    }
    enableEditForm() {
        this.isEditable = true;
        this.identityServerForm.enable();
    }
    cancelEditForm() {
        this.isEditable = false;
        this.isEdit = true;
        this.identityServerForm.reset();
        this.identityServerForm.setValue(this.IdentityDetailObj);
        this.identityServerForm.disable();
    }
    validateIdentityData() {
        this.submitted = true;
        if (this.identityServerForm.invalid) {
            return;
        }
        this.submitted = false;
        var username = this.identityServerForm.value.username;
        var password = this.identityServerForm.value.password;
        var tokenUrl = this.identityServerForm.value['oauth-generate-token-url'].url;
        var refreshTokenUrl = this.identityServerForm.value['oauth-refresh-token-url'].url;
        var postData = decodeURIComponent("grant_type=password&username=" + username + "&password=" + password);
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].validating_is_server);
        this.storesettingservice.generateorRefreshToken(tokenUrl, postData).subscribe((response) => {
            if (response && response.access_token) {
                var token = response.access_token;
                var refresh_token = response.refresh_token;
                var postDataForRefresh = decodeURIComponent("grant_type=refresh_token&refresh_token=" + refresh_token);
                this.storesettingservice.generateorRefreshToken(refreshTokenUrl, postDataForRefresh).subscribe((response) => {
                    // submit data to save
                    this.loaderService.hide();
                    this.submitIdentityData();
                }, error => {
                    this.loaderService.hide();
                    this.toastr.error(error['error_description'] ? error['error-message'] : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].unable_to_validate_is_server, 'Error');
                });
            }
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error['error_description'] ? error['error-message'] : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].unable_to_validate_is_server, 'Error');
        });
    }
    submitIdentityData() {
        var obj = this.identityServerForm.value;
        this.loaderService.show('Saving Identity Server Details');
        this.storesettingservice.submitIdentity('/auth/oauth-two-config/save', obj).subscribe((response) => {
            this.identityServerForm.setValue(response || {});
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].is_server_detail_saved, 'Success');
            this.identityServerForm.disable();
            this.isEditable = false;
            this.commonService.setIdentityServer(true);
        }, (err) => {
            this.loaderService.hide();
            this.toastr.error(err['error-auxiliary-message'], 'Error');
        });
    }
};
IdentityServerComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-identity-server',
        template: __webpack_require__(/*! ./identity-server.component.html */ "./src/app/modules/settings/identity-server/identity-server.component.html"),
        styles: [__webpack_require__(/*! ./identity-server.component.css */ "./src/app/modules/settings/identity-server/identity-server.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_3__["StoreSettingtService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
], IdentityServerComponent);



/***/ }),

/***/ "./src/app/modules/settings/link-store/link-store.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/modules/settings/link-store/link-store.component.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".required-params{\r\n    margin-top: 2px;\r\n    margin-bottom: 10px;\r\n    overflow: hidden;\r\n}\r\n.example-param-span{\r\n    width: 100%;\r\n    float: left;\r\n    margin-top: 5px;\r\n}\r\n.normal-invalid-feedback{\r\n    color:#000;\r\n    font-size: 14px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9saW5rLXN0b3JlL2xpbmstc3RvcmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxXQUFXO0lBQ1gsV0FBVztJQUNYLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFVBQVU7SUFDVixlQUFlO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9saW5rLXN0b3JlL2xpbmstc3RvcmUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5yZXF1aXJlZC1wYXJhbXN7XHJcbiAgICBtYXJnaW4tdG9wOiAycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG4uZXhhbXBsZS1wYXJhbS1zcGFue1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIG1hcmdpbi10b3A6IDVweDtcclxufVxyXG4ubm9ybWFsLWludmFsaWQtZmVlZGJhY2t7XHJcbiAgICBjb2xvcjojMDAwO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/settings/link-store/link-store.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/modules/settings/link-store/link-store.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"tab-pane\" id=\"linkStoreTab\">\r\n  <form novalidate class=\"setting\" (ngSubmit)=\"submitLinkStore()\" [formGroup]=\"linkStoreForm\" method=\"POST\">\r\n    <div class=\"col-md-12\" [formGroupName]=\"'urls'\">\r\n  <div class=\"form-group col-sm-12\" [ngClass]=\"{'error': ((!i['urls']['controls']['get-status-list']['controls'].url.valid && (i['urls']['controls']['get-status-list']['controls'].url.dirty || i['urls']['controls']['get-status-list']['controls'].url.touched )   && i['urls']['controls']['get-status-list']['controls'].url.errors || submitted) && (i['urls']['controls']['get-status-list']['controls'].url.errors && i['urls']['controls']['get-status-list']['controls'].url.errors.required)) || ((!i['urls']['controls']['get-status-list']['controls'].url.valid && (i['urls']['controls']['get-status-list']['controls'].url.dirty || i['urls']['controls']['get-status-list']['controls'].url.touched )   && i['urls']['controls']['get-status-list']['controls'].url.errors || submitted) && (i['urls']['controls']['get-status-list']['controls'].url.errors && i['urls']['controls']['get-status-list']['controls'].url.errors.pattern))}\" [formGroupName]=\"'get-status-list'\">\r\n    <div class=\"row\">\r\n        <label for=\"getalllinkurl\" class=\"col-sm-2 text-right col-form-label required\">Get Status List URL:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input  type=\"text\" formControlName=\"url\" class=\"form-control\"  placeholder=\"Get Status List\" /> \r\n          <div class=\"invalid-feedback\">\r\n              <div  *ngIf=\"(!i['urls']['controls']['get-status-list']['controls'].url.valid && (i['urls']['controls']['get-status-list']['controls'].url.dirty || i['urls']['controls']['get-status-list']['controls'].url.touched )   && i['urls']['controls']['get-status-list']['controls'].url.errors || submitted) && (i['urls']['controls']['get-status-list']['controls'].url.errors && i['urls']['controls']['get-status-list']['controls'].url.errors.required)\" \r\n              >Get status list Url is required.</div>\r\n              <div  *ngIf=\"(!i['urls']['controls']['get-status-list']['controls'].url.valid && (i['urls']['controls']['get-status-list']['controls'].url.dirty || i['urls']['controls']['get-status-list']['controls'].url.touched )   && i['urls']['controls']['get-status-list']['controls'].url.errors || submitted) && (i['urls']['controls']['get-status-list']['controls'].url.errors && i['urls']['controls']['get-status-list']['controls'].url.errors.pattern)\" \r\n              >Please enter a valid URL</div>\r\n            </div>\r\n       </div>\r\n    </div>\r\n     \r\n  </div>\r\n  <div class=\"form-group col-sm-12\" [ngClass]=\"{'error': ((!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.paramError)) || ((!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.required)) || ((!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.pattern)) }\" [formGroupName]=\"'get-link'\">\r\n    <div class=\"row\">\r\n        <label for=\"getlinkurl\" class=\"col-sm-2 text-right col-form-label required\">Get Link With ID URL:</label>\r\n        <div class=\"col-sm-6\">\r\n            <input  type=\"text\" formControlName=\"url\" class=\"form-control\"   placeholder=\"Get Link\" /> \r\n            <div class=\"invalid-feedback\">\r\n                <div *ngIf=\"(!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.paramError)\" \r\n                 >Url do not contain required params.</div>\r\n                <div *ngIf=\"(!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.required)\" \r\n                 >Get Link Url is required.</div>\r\n                <div *ngIf=\"(!i['urls']['controls']['get-link']['controls'].url.valid && (i['urls']['controls']['get-link']['controls'].url.dirty || i['urls']['controls']['get-link']['controls'].url.touched )   && i['urls']['controls']['get-link']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link']['controls'].url.errors && i['urls']['controls']['get-link']['controls'].url.errors.pattern)\" \r\n                >Please enter a valid URL</div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre class=\"required-params\">Required query params:{{getlinkParamList}}</pre>\r\n          </span>\r\n        </div>\r\n    </div>\r\n   \r\n </div> \r\n<div class=\"form-group col-sm-12\" [ngClass]=\"{'error': ((!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.paramError)) || ((!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.required)) || ((!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.pattern)) }\" [formGroupName]=\"'get-link-with-param'\">\r\n <div class=\"row\">\r\n    <label for=\"getlinkwithparam\"  class=\"col-sm-2 text-right col-form-label required\">Get Link With Parameter:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input  type=\"text\"  formControlName=\"url\" class=\"form-control\"  placeholder=\"Get Link With Parameter\" />\r\n      <div class=\"invalid-feedback\">\r\n          <div  *ngIf=\"(!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.paramError)\" \r\n           >Url do not contain required params.</div>\r\n          <div  *ngIf=\"(!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.required)\" \r\n          >Get Link With Parameter is required.</div>\r\n         <div  *ngIf=\"(!i['urls']['controls']['get-link-with-param']['controls'].url.valid && (i['urls']['controls']['get-link-with-param']['controls'].url.dirty || i['urls']['controls']['get-link-with-param']['controls'].url.touched )   && i['urls']['controls']['get-link-with-param']['controls'].url.errors || submitted) && (i['urls']['controls']['get-link-with-param']['controls'].url.errors && i['urls']['controls']['get-link-with-param']['controls'].url.errors.pattern)\" \r\n          >Please enter a valid URL</div>\r\n        </div>\r\n    </div>\r\n    <div class=\"col-sm-4\">\r\n        <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre  class=\"required-params\">Required query params:{{getlinkwithParamList}}</pre>\r\n        </span>\r\n    </div>\r\n </div>\r\n   \r\n</div>\r\n<div class=\"form-group col-sm-12\" [ngClass]=\"{'error': ((!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.paramError)) || ((!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.required)) || ((!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.pattern)) }\" [formGroupName]=\"'get-contract'\">\r\n    <div class=\"row\">\r\n        <label for=\"getcontracturl\" class=\"col-sm-2 text-right col-form-label required\">Get Contract URL:</label> \r\n        <div class=\"col-sm-6\">\r\n          <input formControlName=\"url\" type=\"text\" class=\"form-control\" placeholder=\"Get Contract\" /> \r\n          <div class=\"invalid-feedback\">\r\n              <div  *ngIf=\"(!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.paramError)\" \r\n               >Url do not contain required params.</div>\r\n              <div  *ngIf=\"(!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.required)\" \r\n               >Get Contract URL is required.</div>\r\n              <div  *ngIf=\"(!i['urls']['controls']['get-contract']['controls'].url.valid && (i['urls']['controls']['get-contract']['controls'].url.dirty || i['urls']['controls']['get-contract']['controls'].url.touched )   && i['urls']['controls']['get-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['get-contract']['controls'].url.errors && i['urls']['controls']['get-contract']['controls'].url.errors.pattern)\" \r\n               >Please enter a valid URL</div>\r\n            </div>\r\n         </div>\r\n         <div class=\"col-sm-4\">\r\n            <span  class=\"example-param-span normal-invalid-feedback\">\r\n                <pre class=\"required-params\">Required query params:{{getcontractParamList}}</pre>\r\n            </span>\r\n         </div>\r\n    </div>\r\n  </div>\r\n<div class=\"form-group col-sm-12\" [ngClass]=\"{'error': ((!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.paramError)) || ((!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.required)) || ((!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.pattern)) }\" [formGroupName]=\"'delete-contract'\">\r\n    <div class=\"row\">\r\n        <label for=\"deletecontracturl\" class=\"col-sm-2 text-right col-form-label required\">Delete Contract URL:</label> \r\n        <div class=\"col-sm-6\">\r\n            <input formControlName=\"url\" type=\"text\" class=\"form-control\"  placeholder=\"Delete Contract\" /> \r\n            <div class=\"invalid-feedback\">\r\n                <div  *ngIf=\"(!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.paramError)\" \r\n                 >Url do not contain required params.</div>\r\n                <div  *ngIf=\"(!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.required)\" \r\n                >Delete Contract URL is required.</div>\r\n                <div  *ngIf=\"(!i['urls']['controls']['delete-contract']['controls'].url.valid && (i['urls']['controls']['delete-contract']['controls'].url.dirty || i['urls']['controls']['delete-contract']['controls'].url.touched )   && i['urls']['controls']['delete-contract']['controls'].url.errors || submitted) && (i['urls']['controls']['delete-contract']['controls'].url.errors && i['urls']['controls']['delete-contract']['controls'].url.errors.pattern)\" \r\n                 >Please enter a valid URL</div>\r\n              </div>\r\n       </div>\r\n       <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n             <pre class=\"required-params\">Required query params:{{deletecontractParamList}}</pre>\r\n          </span>\t\r\n       </div>\r\n    </div>\r\n     \r\n   \r\n</div>\r\n<div class=\"form-group row\">\r\n  <div class=\"col-sm-8 text-right\">\r\n    <button type=\"button\" (click)=\"deleteLinkStore()\" class=\"btn kilda_btn\" *ngIf=\"isEdit && !isEditable\" style=\"margin:1px 4px;\">Delete</button>\r\n    <button type=\"button\" (click)=\"enableEditForm()\" class=\"btn kilda_btn\" *ngIf=\"isEdit && !isEditable\">Edit</button>\r\n    <button type=\"button\" (click)=\"cancelEditForm()\"  class=\"btn kilda_btn cancel_btn\" *ngIf=\"isEdit && isEditable\">Cancel</button>\r\n   <button type=\"submit\"  class=\"btn kilda_btn\" *ngIf=\"!isEdit || isEditable\">Save</button>\r\n  </div>\r\n</div>\r\n</div>\r\n</form>\r\n \r\n \r\n </div>"

/***/ }),

/***/ "./src/app/modules/settings/link-store/link-store.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/modules/settings/link-store/link-store.component.ts ***!
  \*********************************************************************/
/*! exports provided: LinkStoreComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LinkStoreComponent", function() { return LinkStoreComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let LinkStoreComponent = class LinkStoreComponent {
    constructor(storesettingservice, formbuilder, toastr, loaderService, modalService) {
        this.storesettingservice = storesettingservice;
        this.formbuilder = formbuilder;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.modalService = modalService;
        this.isEdit = false;
        this.isEditable = false;
        this.submitted = false;
    }
    ngOnInit() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].loading_link_store);
        this.linkStoreForm = this.formbuilder.group({
            "urls": this.formbuilder.group({
                "get-status-list": this.formbuilder.group({
                    "name": "get-status-list",
                    "method-type": "GET",
                    "url": ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([
                            _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                            (control) => {
                                let url = control.value;
                                if (!this.storesettingservice.validateUrl(url)) {
                                    return {
                                        pattern: {
                                            url: url
                                        }
                                    };
                                }
                                return null;
                            },
                        ])],
                    "header": "Content-Type:application/json",
                    "body": "{}"
                }),
                "get-link": this.formbuilder.group({
                    "name": "get-link",
                    "method-type": "GET",
                    "url": [""],
                    "header": "Content-Type:application/json",
                    "body": "{}"
                }),
                "get-contract": this.formbuilder.group({
                    "name": "get-contract",
                    "method-type": "GET",
                    "url": [""],
                    "header": "Content-Type:application/json",
                    "body": "{}"
                }),
                "get-link-with-param": this.formbuilder.group({
                    "name": "get-link-with-param",
                    "method-type": "GET",
                    "url": [""],
                    "header": "Content-Type:application/json",
                    "body": "{[]}"
                }),
                "delete-contract": this.formbuilder.group({
                    "name": "delete-contract",
                    "method-type": "DELETE",
                    "url": [""],
                    "header": "Content-Type:application/json",
                    "body": "{}"
                })
            })
        });
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].loading_link_store_setting);
        this.storesettingservice.getLinkStoreUrl().subscribe((response) => {
            if (response && response.length) {
                for (var i = 0; i < response.length; i++) {
                    switch (response[i]) {
                        case 'get-link':
                            this.storesettingservice.getData('/url/params/' + response[i]).subscribe((data) => {
                                this.getlinkParamList = data.map(function (d) { return d['param-name']; });
                                setTimeout(() => {
                                    this.linkStoreForm.controls['urls']['controls']['get-link'].controls['url'].setValidators([
                                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrl(url)) {
                                                return {
                                                    pattern: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        },
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrlParams(url, this.getlinkParamList)) {
                                                return {
                                                    paramError: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        }
                                    ]);
                                }, 100);
                            });
                            break;
                        case 'get-link-with-param':
                            this.storesettingservice.getData('/url/params/' + response[i]).subscribe((data) => {
                                this.getlinkwithParamList = data.map(function (d) { return d['param-name']; });
                                setTimeout(() => {
                                    this.linkStoreForm.controls['urls']['controls']['get-link-with-param'].controls['url'].setValidators([
                                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrl(url)) {
                                                return {
                                                    pattern: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        },
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrlParams(url, this.getlinkwithParamList)) {
                                                return {
                                                    paramError: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        }
                                    ]);
                                }, 100);
                            });
                            break;
                        case 'get-contract':
                            this.storesettingservice.getData('/url/params/' + response[i]).subscribe((data) => {
                                this.getcontractParamList = data.map(function (d) { return d['param-name']; });
                                setTimeout(() => {
                                    this.linkStoreForm.controls['urls']['controls']['get-contract'].controls['url'].setValidators([
                                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrl(url)) {
                                                return {
                                                    pattern: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        },
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrlParams(url, this.getcontractParamList)) {
                                                return {
                                                    paramError: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        }
                                    ]);
                                }, 100);
                            });
                            break;
                        case 'delete-contract':
                            this.storesettingservice.getData('/url/params/' + response[i]).subscribe((data) => {
                                this.deletecontractParamList = data.map(function (d) { return d['param-name']; });
                                setTimeout(() => {
                                    this.linkStoreForm.controls['urls']['controls']['delete-contract'].controls['url'].setValidators([
                                        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required,
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrl(url)) {
                                                return {
                                                    pattern: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        },
                                        (control) => {
                                            let url = control.value;
                                            if (!this.storesettingservice.validateUrlParams(url, this.deletecontractParamList)) {
                                                return {
                                                    paramError: {
                                                        url: url
                                                    }
                                                };
                                            }
                                            return null;
                                        }
                                    ]);
                                }, 100);
                            });
                            break;
                    }
                }
                this.loadStoreDetail();
            }
        }, (error) => {
            this.loadStoreDetail();
        });
    }
    loadStoreDetail() {
        var self = this;
        this.storesettingservice.getLinkStoreDetails().subscribe((jsonResponse) => {
            if (jsonResponse && jsonResponse['urls'] && typeof (jsonResponse['urls']['get-link']) != 'undefined' && typeof (jsonResponse['urls']['get-link']['url']) != 'undefined') {
                this.linkStoreObj = jsonResponse;
                this.linkStoreForm.setValue(jsonResponse);
                this.linkStoreForm.disable();
                this.isEdit = true;
                setTimeout(function () {
                    self.loaderService.hide();
                }, 300);
            }
            else {
                setTimeout(function () {
                    self.loaderService.hide();
                }, 300);
            }
        }, (error) => {
            setTimeout(function () {
                self.loaderService.hide();
            }, 300);
        });
    }
    get i() {
        return this.linkStoreForm.controls;
    }
    enableEditForm() {
        this.isEditable = true;
        this.linkStoreForm.enable();
    }
    cancelEditForm() {
        this.isEditable = false;
        this.isEdit = true;
        this.linkStoreForm.reset();
        this.linkStoreForm.setValue(this.linkStoreObj);
        this.linkStoreForm.disable();
    }
    deleteLinkStore() {
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to delete link store setting?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].deleting_link_store_setting);
                this.storesettingservice.deleteLinkStore('/store/link-store-config/delete').subscribe((res) => {
                    this.loaderService.hide();
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].link_store_setting_deleted, 'Success');
                    setTimeout(function () {
                        localStorage.removeItem('haslinkStoreSetting');
                        localStorage.removeItem('linkStoreSetting');
                        localStorage.removeItem('linkStoreStatusList');
                        localStorage.removeItem('activeFlowStatusFilter');
                        localStorage.removeItem('filterFlag');
                        localStorage.removeItem('flowsinventory');
                        location.reload();
                    }, 500);
                }, (error) => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Error in deleting link store';
                    this.toastr.error(errorMsg, 'Error');
                });
            }
        });
    }
    submitLinkStore() {
        this.submitted = true;
        if (this.linkStoreForm.invalid) {
            return;
        }
        this.submitted = false;
        var obj = this.linkStoreForm.value;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].saving_link_store_setting);
        this.storesettingservice.submitLinkData('/store/link-store-config/save', obj).subscribe((response) => {
            this.linkStoreForm.setValue(response || {});
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].link_store_setting_saved, 'Success');
            this.linkStoreForm.disable();
            this.isEditable = false;
            this.isEdit = true;
        }, (error) => {
            this.loaderService.hide();
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Error in saving link store';
            this.toastr.error(errorMsg, 'Error');
        });
    }
};
LinkStoreComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-link-store',
        template: __webpack_require__(/*! ./link-store.component.html */ "./src/app/modules/settings/link-store/link-store.component.html"),
        styles: [__webpack_require__(/*! ./link-store.component.css */ "./src/app/modules/settings/link-store/link-store.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_3__["StoreSettingtService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__["NgbModal"]])
], LinkStoreComponent);



/***/ }),

/***/ "./src/app/modules/settings/saml-add/saml-add.component.css":
/*!******************************************************************!*\
  !*** ./src/app/modules/settings/saml-add/saml-add.component.css ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2FtbC1hZGQvc2FtbC1hZGQuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/settings/saml-add/saml-add.component.html":
/*!*******************************************************************!*\
  !*** ./src/app/modules/settings/saml-add/saml-add.component.html ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"samlAddForm\" id=\"addSamlForm\" enctype=\"multipart/form-data\" (ngSubmit)=\"addProvider()\" novalidate #samlForm=\"ngForm\">\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlAddForm.controls['name'].errors && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">Name:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n      <div *ngIf=\"samlAddForm.controls['name'].errors && samlAddForm.controls['name'].errors.required && samlForm.submitted\" class=\"invalid-feedback\" >\r\n        <span >Name is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlAddForm.controls['entity_id'].errors && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">Entity ID:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"entity_id\" placeholder=\"Entity ID\">\r\n      <div *ngIf=\"samlAddForm.controls['entity_id'].errors && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>Entity ID is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlAddForm.controls['attribute'].errors && samlForm.submitted}\">\r\n    <label for=\"role\" class=\"col-sm-2 control-label required\">IDP Attribute</label> \r\n     <div class=\"col-sm-6\">\r\n       <input  type=\"text\" class=\"form-control\" placeholder=\"IDP Attribute\" formControlName=\"attribute\" name=\"attribute\" id=\"attribute\" >\r\n       <div *ngIf=\"samlAddForm.controls['attribute'].errors && samlForm.submitted\" class=\"invalid-feedback\" >\r\n        <span>IDP Attribute is required.</span>\r\n    </div>\r\n     </div>\r\n  \r\n    </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': metadata_required && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">MetaData:</label>\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"col-md-12\">\r\n        <input type=\"file\" style=\"visibility:hidden;position: relative;float: left;width: 10px;margin-left: -27px;\" (change)=\"getFile($event)\" formControlName=\"file\" #file>\r\n        <button  style=\"margin-left:-15px\" type=\"button\" class=\"btn btn-dark \" (click)=\"file.click()\" [disabled]=\"samlAddForm.controls['url'].value\" >Upload file</button>\r\n        <span *ngIf=\"samlAddForm.controls['file'].value\" class=\"ml-2\" >{{(files && files.length) ?  files[0].name: ''}} <i (click)=\"emptyFile()\" style=\"position: absolute;\" class=\"close\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n       </i></span>\r\n      </div>\r\n       <div class=\"col-md-12\" style=\"margin: 10px 25px;float: left;\">OR</div>\r\n      <div class=\"col-md-12\" style=\"margin-left: -15px\">\r\n        <input class=\"form-control\" type=\"text\" [disabled]=\"samlAddForm.controls['file'].value\" formControlName=\"url\"  placeholder=\"Metadata URL\">\r\n      </div>\r\n      \r\n      <div *ngIf=\"metadata_required && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>MetaData is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"form-group row\">\r\n    <label for=\"role\" class=\"col-sm-2\">Status</label> \r\n    <div class='col-sm-6'>\r\n      <div class=\"pull-left\">\r\n        <div class=\"onoffswitch\">\r\n          <input  formControlName=\"status\" [checked]=\"settingStatus\" type=\"checkbox\" (change)=\"setsettingStatus($event)\" name=\"status\" class=\"onoffswitch-checkbox\"\r\n            id=\"onoffstatus\">\r\n          <label class=\"onoffswitch-label\" for=\"onoffstatus\">\r\n            <span class=\"onoffswitch-inner onoffswitch-inner-setting-status \"></span>\r\n            <span class=\"onoffswitch-switch\"></span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\">\r\n      <label for=\"role\" class=\"col-sm-2\">User Creation</label> \r\n      <div class='col-sm-6'>\r\n        <div class=\"pull-left\">\r\n          <div class=\"onoffswitch\">\r\n            <input  formControlName=\"user_creation\" [checked]=\"userCreation\" type=\"checkbox\" (change)=\"setUserCreation($event)\" name=\"user_creation\" class=\"onoffswitch-checkbox\"\r\n              id=\"onoffuser_creation\">\r\n            <label class=\"onoffswitch-label\" for=\"onoffuser_creation\">\r\n              <span class=\"onoffswitch-inner \"></span>\r\n              <span class=\"onoffswitch-switch\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  <div *ngIf=\"samlAddForm.controls['user_creation'].value ==true\" class=\"form-group row\" [ngClass]=\"{'error': userCreation && !samlAddForm.controls['roles'].value && samlForm.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Role:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"roles\"\r\n           [items]=\"roleData\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Role\"\r\n           clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"userCreation && !samlAddForm.controls['roles'].value && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>Role is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <div class=\"form-group row\">\r\n      <div class=\"col-sm-8 text-right\">\r\n        <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n        <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Save</button>\r\n      </div>\r\n  </div>\r\n</form>"

/***/ }),

/***/ "./src/app/modules/settings/saml-add/saml-add.component.ts":
/*!*****************************************************************!*\
  !*** ./src/app/modules/settings/saml-add/saml-add.component.ts ***!
  \*****************************************************************/
/*! exports provided: SamlAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamlAddComponent", function() { return SamlAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/saml-setting.service */ "./src/app/common/services/saml-setting.service.ts");









let SamlAddComponent = class SamlAddComponent {
    constructor(formBuilder, roleService, toastr, titleService, loaderService, samlSettingService) {
        this.formBuilder = formBuilder;
        this.roleService = roleService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.samlSettingService = samlSettingService;
        this.cancel = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.submitted = false;
        this.metadata_required = false;
        this.userCreation = false;
        this.settingStatus = true;
        /* Get all roles for Select2 */
        this.roles = [];
        this.roleData = [];
        this.roleService.getRoles().subscribe((role) => {
            role.map((role) => this.roles.push({ id: role.role_id, name: role.name }));
            this.roleData = this.roles;
        }, error => {
            console.log("error", error);
        });
    }
    /* Create provider add form */
    createForm() {
        this.samlAddForm = this.formBuilder.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            entity_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            url: [''],
            file: [''],
            roles: [''],
            status: [true],
            user_creation: [false],
            attribute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    getFile(e) {
        this.files = e.target.files;
        if (this.files && this.files.length) {
            let reader = new FileReader();
            let self = this;
            reader.onloadend = function (x) {
                self.disableFields('url');
            };
            reader.readAsText(this.files[0]);
        }
    }
    setUserCreation(e) {
        this.samlAddForm.controls['user_creation'].setValue(e.target.checked);
        this.userCreation = e.target.checked;
    }
    setsettingStatus(e) {
        this.samlAddForm.controls['status'].setValue(e.target.checked);
        this.settingStatus = e.target.checked;
    }
    /* Add provider form submit function */
    addProvider() {
        this.submitted = true;
        if (this.samlAddForm.invalid) {
            if (!this.samlAddForm.value.file && !this.samlAddForm.value.url) {
                this.metadata_required = true;
            }
            return;
        }
        if (!this.samlAddForm.value.file && !this.samlAddForm.value.url) {
            this.metadata_required = true;
            return;
        }
        if (this.userCreation && !this.samlAddForm.value.roles) {
            return;
        }
        this.metadata_required = false;
        const formData = new FormData();
        formData.append('name', this.samlAddForm.value.name);
        formData.append('entity_id', this.samlAddForm.value.entity_id);
        formData.append('status', this.samlAddForm.value.status);
        formData.append('user_creation', this.samlAddForm.value.user_creation);
        formData.append('role_ids', this.samlAddForm.value.roles);
        formData.append('attribute', this.samlAddForm.value.attribute);
        if (this.samlAddForm.value.url) {
            formData.append('url', this.samlAddForm.value.url);
        }
        if (this.samlAddForm.value.file) {
            formData.append('file', this.files[0]);
        }
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].adding_provider);
        this.samlSettingService.saveAuthProvider(formData).subscribe((res) => {
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].provider_added_success);
            this.loaderService.hide();
            this.cancel.emit();
        }, (error) => {
            this.loaderService.hide();
            var msg = (error && error.error && error.error['error-message']) ? error.error['error-message'] : 'Error in saving';
            this.toastr.error(msg, 'Error');
        });
    }
    emptyFile() {
        this.submitted = false;
        this.samlAddForm.controls['file'].setValue(null);
        this.enableField('url');
    }
    disableFields(field) {
        this.samlAddForm.controls[field].disable();
    }
    enableField(field) {
        this.samlAddForm.controls[field].enable();
    }
    close() {
        this.cancel.emit();
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Add Provider');
        this.createForm();
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlAddComponent.prototype, "cancel", void 0);
SamlAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-saml-add',
        template: __webpack_require__(/*! ./saml-add.component.html */ "./src/app/modules/settings/saml-add/saml-add.component.html"),
        styles: [__webpack_require__(/*! ./saml-add.component.css */ "./src/app/modules/settings/saml-add/saml-add.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_3__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_8__["SamlSettingService"]])
], SamlAddComponent);



/***/ }),

/***/ "./src/app/modules/settings/saml-edit/saml-edit.component.css":
/*!********************************************************************!*\
  !*** ./src/app/modules/settings/saml-edit/saml-edit.component.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2FtbC1lZGl0L3NhbWwtZWRpdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/settings/saml-edit/saml-edit.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/modules/settings/saml-edit/saml-edit.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"samlEditForm\" id=\"addSamlForm\" enctype=\"multipart/form-data\" (ngSubmit)=\"updateProvider()\" novalidate #samlForm=\"ngForm\">\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlEditForm.controls['name'].errors && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">Name:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n      <div *ngIf=\"samlEditForm.controls['name'].errors && samlEditForm.controls['name'].errors.required && samlForm.submitted\" class=\"invalid-feedback\" >\r\n        <span >Name is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlEditForm.controls['entity_id'].errors && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">Entity ID:</label>\r\n    <div class=\"col-sm-6\">\r\n      <input class=\"form-control\" type=\"text\" formControlName=\"entity_id\" placeholder=\"Entity ID\">\r\n      <div *ngIf=\"samlEditForm.controls['entity_id'].errors && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>Entity ID is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': samlEditForm.controls['attribute'].errors && samlForm.submitted}\">\r\n    <label for=\"role\" class=\"col-sm-2 control-label required\">IDP Attribute</label> \r\n     <div class=\"col-sm-6\">\r\n       <input  type=\"text\" class=\"form-control\" placeholder=\"IDP Attribute\" formControlName=\"attribute\" name=\"attribute\" id=\"attribute\" >\r\n       <div *ngIf=\"samlEditForm.controls['attribute'].errors && samlForm.submitted\" class=\"invalid-feedback\" >\r\n        <span>IDP Attribute is required.</span>\r\n    </div>\r\n      </div>\r\n  </div>\r\n  <div class=\"form-group row\" [ngClass]=\"{'error': metadata_required && samlForm.submitted}\">\r\n    <label class=\"col-sm-2 control-label required\">MetaData:</label>\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"col-md-12\">\r\n        <input type=\"file\" style=\"visibility:hidden;position: relative;float: left;width: 10px;margin-left: -27px;\" (change)=\"getFile($event)\" formControlName=\"file\" #file>\r\n        <button  style=\"margin-left:-15px\" type=\"button\" class=\"btn btn-dark \" (click)=\"file.click()\" [disabled]=\"samlEditForm.controls['url'].value\" >Upload file</button>\r\n       <span *ngIf=\"fileUploaded!=''\" class=\"ml-2\" >{{fileUploaded}} <i (click)=\"emptyFile()\" style=\"position: absolute;\" class=\"close\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n     </i></span>\r\n      </div>\r\n       <div class=\"col-md-12\" style=\"margin: 10px 25px;float: left;\">OR</div>\r\n      <div class=\"col-md-12\" style=\"margin-left: -15px\">\r\n        <input class=\"form-control\" type=\"text\" [disabled]=\"fileUploaded != ''\" formControlName=\"url\"  placeholder=\"Metadata URL\">\r\n      </div>\r\n      \r\n      <div *ngIf=\"metadata_required && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>MetaData is required.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n \r\n  <div class=\"form-group row\">\r\n    <label for=\"role\" class=\"col-sm-2\">Status</label> \r\n    <div class='col-sm-6'>\r\n      <div class=\"pull-left\">\r\n        <div class=\"onoffswitch\">\r\n          <input  formControlName=\"status\" [checked]=\"settingStatus\" type=\"checkbox\" (change)=\"setsettingStatus($event)\" name=\"status\" class=\"onoffswitch-checkbox\"\r\n            id=\"onoffstatus\">\r\n          <label class=\"onoffswitch-label\" for=\"onoffstatus\">\r\n            <span class=\"onoffswitch-inner onoffswitch-inner-setting-status \"></span>\r\n            <span class=\"onoffswitch-switch\"></span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n      <label for=\"role\" class=\"col-sm-2\">User Creation</label> \r\n      <div class='col-sm-6'>\r\n        <div class=\"pull-left\">\r\n          <div class=\"onoffswitch\">\r\n            <input  formControlName=\"user_creation\" [checked]=\"userCreation\" type=\"checkbox\" (change)=\"setUserCreation($event)\" name=\"user_creation\" class=\"onoffswitch-checkbox\"\r\n              id=\"onoffuser_creation\">\r\n            <label class=\"onoffswitch-label\" for=\"onoffuser_creation\">\r\n              <span class=\"onoffswitch-inner \"></span>\r\n              <span class=\"onoffswitch-switch\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  <div *ngIf=\"samlEditForm.controls['user_creation'].value ==true\" class=\"form-group row\" [ngClass]=\"{'error': userCreation && !samlEditForm.controls['roles'].value && samlForm.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Role:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"roles\"\r\n           [items]=\"roleData\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Role\"\r\n           clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"userCreation && !samlEditForm.controls['roles'].value && samlForm.submitted\" class=\"invalid-feedback\" >\r\n          <span>Role is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <div class=\"form-group row\">\r\n      <div class=\"col-sm-8 text-right\">\r\n        <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n        <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Update</button>\r\n      </div>\r\n  </div>\r\n</form>"

/***/ }),

/***/ "./src/app/modules/settings/saml-edit/saml-edit.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/modules/settings/saml-edit/saml-edit.component.ts ***!
  \*******************************************************************/
/*! exports provided: SamlEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamlEditComponent", function() { return SamlEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/saml-setting.service */ "./src/app/common/services/saml-setting.service.ts");









let SamlEditComponent = class SamlEditComponent {
    constructor(formBuilder, roleService, toastr, titleService, loaderService, samlSettingService) {
        this.formBuilder = formBuilder;
        this.roleService = roleService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.samlSettingService = samlSettingService;
        this.cancel = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.uuid = null;
        this.fileUploaded = '';
        this.submitted = false;
        this.metadata_required = false;
        this.userCreation = false;
        this.settingStatus = false;
        /* Get all roles for Select2 */
        this.roles = [];
        this.roleData = [];
        this.roleService.getRoles().subscribe((role) => {
            role.map((role) => this.roles.push({ id: role.role_id, name: role.name }));
            this.roleData = this.roles;
        }, error => {
            console.log("error", error);
        });
    }
    setUserCreation(e) {
        this.samlEditForm.controls['user_creation'].setValue(e.target.checked);
        this.userCreation = e.target.checked;
    }
    setsettingStatus(e) {
        this.samlEditForm.controls['status'].setValue(e.target.checked);
        this.settingStatus = e.target.checked;
    }
    /* update provider add form */
    updateForm() {
        this.samlEditForm = this.formBuilder.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            entity_id: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            url: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](null),
            file: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"](null),
            roles: [''],
            status: [true],
            user_creation: [false],
            attribute: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    emptyFile() {
        this.submitted = false;
        this.fileUploaded = '';
        this.samlEditForm.controls['file'].setValue(null);
        this.enableField('url');
    }
    disableFields(field) {
        this.samlEditForm.controls[field].disable();
    }
    enableField(field) {
        this.samlEditForm.controls[field].enable();
    }
    getFile(e) {
        this.files = e.target.files;
        if (this.files && this.files.length) {
            let reader = new FileReader();
            let self = this;
            reader.onloadend = function (x) {
                self.disableFields('url');
                self.fileUploaded = self.files[0].name;
            };
            reader.readAsText(this.files[0]);
        }
    }
    /* Add provider form submit function */
    updateProvider() {
        this.submitted = true;
        if (this.samlEditForm.invalid) {
            if (!this.samlEditForm.value.file && !this.samlEditForm.value.url && !this.providerData.metadata) {
                this.metadata_required = true;
            }
            return;
        }
        if (!this.samlEditForm.value.file && !this.samlEditForm.value.url && !this.providerData.metadata) {
            this.metadata_required = true;
            return;
        }
        if (this.userCreation && !this.samlEditForm.value.roles) {
            return;
        }
        this.metadata_required = false;
        const formData = new FormData();
        formData.append('name', this.samlEditForm.value.name);
        formData.append('entity_id', this.samlEditForm.value.entity_id);
        formData.append('status', this.samlEditForm.value.status);
        formData.append('user_creation', this.samlEditForm.value.user_creation);
        formData.append('role_ids', this.samlEditForm.value.roles);
        formData.append('attribute', this.samlEditForm.value.attribute);
        if (this.samlEditForm.value.url) {
            formData.append('url', this.samlEditForm.value.url);
        }
        if (this.samlEditForm.value.file) {
            formData.append('file', this.files[0]);
        }
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].updating_provider);
        this.samlSettingService.updateAuthProvider(formData, this.uuid).subscribe((res) => {
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].provider_updated_success);
            this.loaderService.hide();
            this.cancel.emit();
        }, (error) => {
            this.loaderService.hide();
            var msg = (error && error.error && error.error['error-message']) ? error.error['error-message'] : 'Error in saving';
            this.toastr.error(msg, 'Error');
        });
    }
    ngOnChanges(change) {
        var ref = this;
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
                this.uuid = this.data.uuid;
            }
        }
    }
    getDetail(id) {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_7__["MessageObj"].loading_data);
        this.samlSettingService.getDetail(id).subscribe((res) => {
            this.providerData = res;
            if (res.type == 'FILE') {
                this.fileUploaded = 'file.xml';
                this.disableFields('url');
            }
            this.samlEditForm.controls['name'].setValue(res.name);
            this.samlEditForm.controls['entity_id'].setValue(res.entity_id);
            this.samlEditForm.controls['roles'].setValue(res.roles);
            this.samlEditForm.controls['status'].setValue(res.status);
            this.samlEditForm.controls['user_creation'].setValue(res.user_creation);
            this.samlEditForm.controls['attribute'].setValue(res.attribute);
            this.samlEditForm.controls['url'].setValue(res.type == 'URL' ? res.url : '');
            this.loaderService.hide();
        }, (error) => {
            this.loaderService.hide();
        });
    }
    close() {
        this.cancel.emit();
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Update Provider');
        this.updateForm();
        this.getDetail(this.uuid);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlEditComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlEditComponent.prototype, "cancel", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])("file"),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"])
], SamlEditComponent.prototype, "fileElementRef", void 0);
SamlEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-saml-edit',
        template: __webpack_require__(/*! ./saml-edit.component.html */ "./src/app/modules/settings/saml-edit/saml-edit.component.html"),
        styles: [__webpack_require__(/*! ./saml-edit.component.css */ "./src/app/modules/settings/saml-edit/saml-edit.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_3__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_8__["SamlSettingService"]])
], SamlEditComponent);



/***/ }),

/***/ "./src/app/modules/settings/saml-list-table/saml-list-table.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/settings/saml-list-table/saml-list-table.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2FtbC1saXN0LXRhYmxlL3NhbWwtbGlzdC10YWJsZS5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/settings/saml-list-table/saml-list-table.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/settings/saml-list-table/saml-list-table.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table id=\"flowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover dataTable no-footer\">\r\n    <thead>\r\n    <tr class=\"tableHeading\">\r\n        <th>Name</th>\r\n        <th>Entity ID</th>\r\n        <th>Status</th>       \r\n        <th class=\"\"><span title=\"Action\">Action</span></th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr class=\"flowDataRow \"  *ngFor=\"let row of data; let i = index\">\r\n        <td>{{row.name}}</td>\r\n        <td>{{row.entity_id}}</td>\r\n        <td>{{(row.status == true) ?'Active':'InActive'}}</td>\r\n        <td>\r\n        <a class=\"pull-left\" title=\"Edit Provider\"  (click)=\"editProvider(row)\">\r\n            <i class=\"fa fa-edit\"></i>\r\n            </a>\r\n            <a class=\"pull-left\" title=\"Delete Provider\"  (click)=\"deleteProvider(row)\">\r\n                <i class=\"fa fa-trash\"></i>\r\n                </a>\r\n        </td>\r\n    </tr>\r\n    </tbody>\r\n</table>"

/***/ }),

/***/ "./src/app/modules/settings/saml-list-table/saml-list-table.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/settings/saml-list-table/saml-list-table.component.ts ***!
  \*******************************************************************************/
/*! exports provided: SamlListTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamlListTableComponent", function() { return SamlListTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/saml-setting.service */ "./src/app/common/services/saml-setting.service.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");






let SamlListTableComponent = class SamlListTableComponent {
    constructor(samlSettingService, loaderService, renderer) {
        this.samlSettingService = samlSettingService;
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.data = [];
        this.editsaml = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.deletesaml = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.dtOptions = {};
        this.wrapperHide = true;
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Subject"]();
        this.wrapperHide = false;
    }
    ngOnInit() {
        var ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            "order": [],
            language: {
                searchPlaceholder: "Search"
            },
            drawCallback: function () {
                if (jQuery('#flowDataTable tbody tr').length < 10) {
                    jQuery('#flowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#flowDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '7%', "sType": "name", "bSortable": true },
                { sWidth: '15%' },
                { sWidth: '13%' },
                { sWidth: '10%', "bSortable": false },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    editProvider(row) {
        this.editsaml.emit(row);
    }
    deleteProvider(row) {
        this.deletesaml.emit(row);
    }
    ngOnChanges(change) {
        var ref = this;
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
                this.dtTrigger.next();
            }
        }
    }
    fulltextSearch(value) {
        if (this.dtTrigger)
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.search(value)
                    .draw();
            });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input[type="search"]', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    toggleSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    triggerSearch() {
        setTimeout(() => {
            jQuery('#expandedSrcSwitchName').trigger('change');
            jQuery('#expandedTargetSwitchName').trigger('change');
        }, 1000);
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"])
], SamlListTableComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlListTableComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlListTableComponent.prototype, "editsaml", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SamlListTableComponent.prototype, "deletesaml", void 0);
SamlListTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-saml-list-table',
        template: __webpack_require__(/*! ./saml-list-table.component.html */ "./src/app/modules/settings/saml-list-table/saml-list-table.component.html"),
        styles: [__webpack_require__(/*! ./saml-list-table.component.css */ "./src/app/modules/settings/saml-list-table/saml-list-table.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_2__["SamlSettingService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]])
], SamlListTableComponent);



/***/ }),

/***/ "./src/app/modules/settings/saml-setting/saml-setting.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/settings/saml-setting/saml-setting.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2FtbC1zZXR0aW5nL3NhbWwtc2V0dGluZy5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/settings/saml-setting/saml-setting.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/settings/saml-setting/saml-setting.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "  <div class=\"row\">\r\n      <div class=\"col-md-12\" *ngIf=\"!AddAuthProvider && !EditAuthProvider\">\r\n                <button class=\"btn btn-sm btn-dark pull-right\" (click)=\"addAuthProvider()\">Add Provider</button>\r\n                <div class=\"dataTables_wrapper no-footer\">\r\n                   <app-saml-list-table *ngIf=\"!loadProviderData\" [data]=\"authProviders\" (editsaml)=\"editProvider($event)\" (deletesaml)=\"deleteProvider($event)\"></app-saml-list-table>\r\n                </div>  \r\n          </div>\r\n          <div class=\"col-md-12 mt-1\" *ngIf=\"AddAuthProvider\">\r\n            <div _ngcontent-c14=\"\" class=\"card\">\r\n                <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                        <app-saml-add (cancel)=\"cancelAction()\"></app-saml-add>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <div class=\"col-md-12 mt-1\" *ngIf=\"EditAuthProvider\">\r\n                <div _ngcontent-c14=\"\" class=\"card\">\r\n                    <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                            <app-saml-edit [data]=\"EditProviderData\" (cancel)=\"cancelAction()\"></app-saml-edit>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n      </div>"

/***/ }),

/***/ "./src/app/modules/settings/saml-setting/saml-setting.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/settings/saml-setting/saml-setting.component.ts ***!
  \*************************************************************************/
/*! exports provided: SamlSettingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SamlSettingComponent", function() { return SamlSettingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/saml-setting.service */ "./src/app/common/services/saml-setting.service.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_constants_constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");








let SamlSettingComponent = class SamlSettingComponent {
    constructor(samlSettingService, loaderService, toastr, renderer, modalService) {
        this.samlSettingService = samlSettingService;
        this.loaderService = loaderService;
        this.toastr = toastr;
        this.renderer = renderer;
        this.modalService = modalService;
        this.AddAuthProvider = false;
        this.EditAuthProvider = false;
        this.EditProviderData = null;
        this.loadProviderData = true;
        this.authProviders = [];
    }
    ngOnInit() {
        this.authProviders = [];
        this.getAuthProviders();
    }
    getAuthProviders() {
        this.loadProviderData = true;
        this.loaderService.show(_common_constants_constants__WEBPACK_IMPORTED_MODULE_4__["MessageObj"].loading_data);
        this.samlSettingService.getAuthProviders().subscribe((data) => {
            this.loadProviderData = false;
            this.authProviders = data;
            this.loaderService.hide();
        }, (error) => {
            this.authProviders = [];
            this.loadProviderData = false;
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : _common_constants_constants__WEBPACK_IMPORTED_MODULE_4__["MessageObj"].error_loading_data;
            this.toastr.error(errorMsg, 'Error');
            this.loaderService.hide();
        });
    }
    addAuthProvider() {
        this.AddAuthProvider = true;
        this.EditAuthProvider = false;
        this.EditProviderData = null;
    }
    editProvider(row) {
        this.EditAuthProvider = true;
        this.AddAuthProvider = false;
        this.EditProviderData = row;
    }
    cancelAction() {
        this.EditAuthProvider = false;
        this.AddAuthProvider = false;
        this.EditProviderData = null;
        this.authProviders = [];
        this.getAuthProviders();
    }
    deleteProvider(row) {
        var self = this;
        const modalReff = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Delete Auth Provider";
        modalReff.componentInstance.content = 'Are you sure you want to perform delete action ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(_common_constants_constants__WEBPACK_IMPORTED_MODULE_4__["MessageObj"].deleting_provider);
                this.samlSettingService.deleteAuthProvider(row.uuid).subscribe((res) => {
                    modalReff.close();
                    this.loaderService.hide();
                    this.toastr.success(_common_constants_constants__WEBPACK_IMPORTED_MODULE_4__["MessageObj"].provider_deleted_success, 'Success');
                    this.authProviders = [];
                    this.getAuthProviders();
                }, (error) => {
                    this.loaderService.hide();
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : _common_constants_constants__WEBPACK_IMPORTED_MODULE_4__["MessageObj"].error_loading_data;
                    this.toastr.error(errorMsg, 'Error');
                });
            }
        });
    }
    ngOnChanges(change) {
    }
    ngOnDestroy() {
    }
};
SamlSettingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-saml-setting',
        template: __webpack_require__(/*! ./saml-setting.component.html */ "./src/app/modules/settings/saml-setting/saml-setting.component.html"),
        styles: [__webpack_require__(/*! ./saml-setting.component.css */ "./src/app/modules/settings/saml-setting/saml-setting.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_saml_setting_service__WEBPACK_IMPORTED_MODULE_2__["SamlSettingService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_3__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__["NgbModal"]])
], SamlSettingComponent);



/***/ }),

/***/ "./src/app/modules/settings/session/session.component.css":
/*!****************************************************************!*\
  !*** ./src/app/modules/settings/session/session.component.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2Vzc2lvbi9zZXNzaW9uLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/settings/session/session.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/modules/settings/session/session.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"storeSetting\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <h6 class=\"card-title card-custom-title\">SESSION SETTINGS</h6>\r\n                <div _ngcontent-c14=\"\" class=\"card\">\r\n                    <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                        <div class=\"col-sm-9\">\r\n                        <form [formGroup]=\"sessionForm\" class=\"form-horizontal\">\r\n                              <div class=\"form-group row\">\r\n                                    <label for=\"session_timeout\" class=\"col-sm-3 mt-2\">Session Timeout (Minutes) <span class=\"mandatory-text text-danger\">*</span></label>\r\n                                     <input min=\"5\" class=\"form-control col-sm-3 ml-3\" type=\"number\" formControlName=\"session_time\" placeholder=\"Session timeout e.g.: 5\" required/>\r\n                                     <div class=\"col-sm-3 ml-3\">\r\n                                            <button *ngIf=\"isEdit\" type=\"button\" (click)=\"save()\" class=\"btn kilda_btn\">Save</button> &nbsp;\r\n                                            <button *ngIf=\"isEdit\" type=\"button\" class=\"btn kilda_btn\" (click)=\"cancelSession()\">Cancel</button> &nbsp;\r\n                                            <button *ngIf=\"!isEdit\" type=\"button\" class=\"btn kilda_btn\" (click)=\"editSession()\">Edit</button> &nbsp;\r\n                                    </div>\r\n                                    <div class=\"invalid-feedback col-sm-8\" *ngIf=\"i['session_time'] && i['session_time'].value < 5\"><span style=\"margin-left:235px;\">The value for session timeout should not be less than 5 minutes</span> </div>\r\n                                </div>\r\n                         </form>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--- switch name setting-->\r\n                <div class=\"col-md-12 mt-1\">\r\n                    <h6 class=\"card-title card-custom-title\">SWITCH NAME SETTINGS</h6>\r\n                    <div _ngcontent-c14=\"\" class=\"card\">\r\n                        <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                            <div class=\"col-sm-9\">\r\n                            <form [formGroup]=\"switchNameSourceForm\" class=\"form-horizontal\">\r\n                                  <div class=\"form-group row\">\r\n                                        <label for=\"session_timeout\" class=\"col-sm-3 mt-2\">Switch Name Source <span class=\"mandatory-text text-danger\">*</span></label>\r\n                                        <select class=\"form-control col-sm-3 ml-3\" formControlName=\"switch_name_source\">\r\n                                            <option *ngFor=\"let item of switchNameSourceTypes\" value=\"{{item}}\">{{item}}</option>\r\n                                        </select> \r\n                                        <div class=\"col-sm-3 ml-3\">\r\n                                                 <button *ngIf=\"isSwitchNameSourcEdit\" type=\"button\" (click)=\"saveSwitchNameSource()\" class=\"btn kilda_btn\">Save</button> &nbsp;\r\n                                                <button *ngIf=\"isSwitchNameSourcEdit\" type=\"button\" class=\"btn kilda_btn\" (click)=\"cancelSwitchNameSource()\">Cancel</button> &nbsp;\r\n                                                <button *ngIf=\"!isSwitchNameSourcEdit\" type=\"button\" class=\"btn kilda_btn\" (click)=\"editSwitchNameSource()\">Edit</button> &nbsp;\r\n                                        </div>\r\n                                    </div>\r\n                             </form>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n </div>"

/***/ }),

/***/ "./src/app/modules/settings/session/session.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/modules/settings/session/session.component.ts ***!
  \***************************************************************/
/*! exports provided: SessionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SessionComponent", function() { return SessionComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");











let SessionComponent = class SessionComponent {
    constructor(formBuilder, commonService, loaderService, toastrService, modalService, toastr, router) {
        this.formBuilder = formBuilder;
        this.commonService = commonService;
        this.loaderService = loaderService;
        this.toastrService = toastrService;
        this.modalService = modalService;
        this.toastr = toastr;
        this.router = router;
        this.isEdit = false;
        this.isSwitchNameSourcEdit = false;
        this.initialVal = null;
        this.initialNameSource = null;
        if (!this.commonService.hasPermission('application_setting')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.sessionForm = this.formBuilder.group({
            session_time: [""]
        });
        this.sessionForm.disable();
        this.switchNameSourceForm = this.formBuilder.group({
            switch_name_source: ["FILE_STORAGE"]
        });
        this.switchNameSourceForm.disable();
    }
    ngAfterViewInit() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].loading_app_setting);
        this.loadAllsettings().subscribe((responseList) => {
            var settings = responseList[0];
            this.sessionForm.setValue({ "session_time": settings['SESSION_TIMEOUT'] });
            this.initialVal = settings['SESSION_TIMEOUT'];
            this.switchNameSourceTypes = responseList[1];
            this.switchNameSourceForm.setValue({ "switch_name_source": settings['SWITCH_NAME_STORAGE_TYPE'] || 'FILE_STORAGE' });
            this.initialNameSource = settings['SWITCH_NAME_STORAGE_TYPE'] || 'FILE_STORAGE';
            this.loaderService.hide();
        }, error => {
            var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Api response error';
            this.toastrService.error(errorMsg, 'Error');
            this.loaderService.hide();
        });
    }
    loadAllsettings() {
        let allSettings = this.commonService.getAllSettings();
        let SwitchNameListTypes = this.commonService.getSwitchNameSourceTypes();
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_7__["forkJoin"])([allSettings, SwitchNameListTypes]);
    }
    ngDoCheck() {
    }
    ngOnChanges(change) {
    }
    get i() {
        return this.sessionForm.controls;
    }
    get s() {
        return this.switchNameSourceForm.controls;
    }
    save() {
        let session_time = this.sessionForm.controls['session_time'].value;
        if (session_time < 5) {
            return false;
        }
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_8__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to save session settings ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].saving_session_setting);
                this.commonService.saveSessionTimeoutSetting(session_time).subscribe((response) => {
                    this.toastrService.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].session_setting_saved, 'Success');
                    this.loaderService.hide();
                    this.initialVal = this.sessionForm.controls['session_time'].value;
                    this.isEdit = false;
                    this.sessionForm.disable();
                }, error => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to save';
                    this.toastrService.error(errorMsg, 'Error');
                    this.loaderService.hide();
                });
            }
        });
    }
    editSession() {
        this.isEdit = true;
        this.sessionForm.enable();
    }
    cancelSession() {
        this.sessionForm.setValue({ "session_time": this.initialVal });
        this.isEdit = false;
        this.sessionForm.disable();
    }
    saveSwitchNameSource() {
        let source_name_source = this.switchNameSourceForm.controls['switch_name_source'].value;
        if (source_name_source == '') {
            return false;
        }
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_8__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to save switch name source settings ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].saving_switch_name_store_setting);
                this.commonService.saveSwitchNameSourceSettings(source_name_source).subscribe((response) => {
                    this.toastrService.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].switch_name_store_setting_saved, 'Success');
                    this.loaderService.hide();
                    this.initialNameSource = this.switchNameSourceForm.controls['switch_name_source'].value;
                    this.isSwitchNameSourcEdit = false;
                    this.switchNameSourceForm.disable();
                }, error => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : 'Unable to save';
                    this.toastrService.error(errorMsg, 'Error');
                    this.loaderService.hide();
                });
            }
        });
    }
    editSwitchNameSource() {
        this.isSwitchNameSourcEdit = true;
        this.switchNameSourceForm.enable();
    }
    cancelSwitchNameSource() {
        this.switchNameSourceForm.setValue({ "switch_name_source": this.initialNameSource });
        this.isSwitchNameSourcEdit = false;
        this.switchNameSourceForm.disable();
    }
};
SessionComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-session",
        template: __webpack_require__(/*! ./session.component.html */ "./src/app/modules/settings/session/session.component.html"),
        styles: [__webpack_require__(/*! ./session.component.css */ "./src/app/modules/settings/session/session.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_5__["CommonService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"]])
], SessionComponent);



/***/ }),

/***/ "./src/app/modules/settings/settings.component.css":
/*!*********************************************************!*\
  !*** ./src/app/modules/settings/settings.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/settings/settings.component.html":
/*!**********************************************************!*\
  !*** ./src/app/modules/settings/settings.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"storeSetting\">\r\n  <div class=\"row\">\r\n    <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n      <ul class=\"nav nav-pills\">\r\n          <li *ngIf=\"commonService.hasPermission('store_setting')\" id=\"storeSettingTabHeader\" [ngClass]=\"{'active': openedTab == 'storesetting'}\"><a class=\"loadTabData\" href=\"javascript:void(0);\" (click)=\"openTab('storesetting');\">Store Setting</a></li>\r\n          <li *ngIf=\"commonService.hasPermission('application_setting')\" id=\"ApplicationSettingTabHeader\"  [ngClass]=\"{'active': openedTab == 'applicationsetting'}\"><a class=\"loadTabData\" href=\"javascript:void(0);\" (click)=\"openTab('applicationsetting');\">Application Setting</a></li>\r\n          <li  *ngIf=\"commonService.hasPermission('saml_setting')\" id=\"SamlSettingTabHeader\"  [ngClass]=\"{'active': openedTab == 'samlsetting'}\"><a class=\"loadTabData\" href=\"javascript:void(0);\" (click)=\"openTab('samlsetting');\">Saml Setting</a></li>\r\n        </ul>\r\n        <div class=\"tab-content clearfix\">\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'storesetting'}\">\r\n            <div class=\"col-md-12 mt-1\">\r\n              <h6 class=\"card-title card-custom-title\">Identity Server</h6>\r\n              <div _ngcontent-c14=\"\" class=\"card\">\r\n                  <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                        <app-identity-server *ngIf=\"openedTab == 'storesetting'\"></app-identity-server>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 mt-1\" *ngIf=\"isIdentityServer\">\r\n              <h6 class=\"card-title card-custom-title\">Link Store</h6>\r\n              <div _ngcontent-c14=\"\" class=\"card\">\r\n                  <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                        <app-link-store *ngIf=\"openedTab == 'storesetting'\"></app-link-store>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-12 mt-1\" *ngIf=\"isIdentityServer\">\r\n              <h6 class=\"card-title card-custom-title\">Switch Store</h6>\r\n              <div _ngcontent-c14=\"\" class=\"card\">\r\n                  <div _ngcontent-c14=\"\" class=\"card-body\">\r\n                        <app-switch-store *ngIf=\"openedTab == 'storesetting'\"></app-switch-store>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n           \r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'applicationsetting'}\">\r\n              <app-session *ngIf=\"openedTab == 'applicationsetting'\"></app-session>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'samlsetting'}\">\r\n            <app-saml-setting *ngIf=\"openedTab == 'samlsetting'\"></app-saml-setting>\r\n        </div>\r\n        </div>\r\n      </div>\r\n    \r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/settings/settings.component.ts":
/*!********************************************************!*\
  !*** ./src/app/modules/settings/settings.component.ts ***!
  \********************************************************/
/*! exports provided: SettingsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsComponent", function() { return SettingsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");







let SettingsComponent = class SettingsComponent {
    constructor(titleService, commonService, toastr, router) {
        this.titleService = titleService;
        this.commonService = commonService;
        this.toastr = toastr;
        this.router = router;
        this.openedTab = 'storesetting';
        this.openedInnerTab = 'identityserver';
        this.isIdentityServer = false;
        if (!this.commonService.hasPermission('store_setting') && !this.commonService.hasPermission('application_setting') && !this.commonService.hasPermission('saml_setting')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
        else {
            if (this.commonService.hasPermission('store_setting')) {
                this.openedTab = 'storesetting';
            }
            else if (this.commonService.hasPermission('application_setting')) {
                this.openedTab = 'applicationsetting';
            }
            else if (this.commonService.hasPermission('saml_setting')) {
                this.openedTab = "samlsetting";
            }
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Settings');
        this.commonService.linkStoreReceiver.subscribe((value) => {
            this.isIdentityServer = value;
        });
    }
    openTab(tab) {
        this.openedTab = tab;
    }
    openinnerTab(tab) {
        this.openedInnerTab = tab;
    }
};
SettingsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-settings',
        template: __webpack_require__(/*! ./settings.component.html */ "./src/app/modules/settings/settings.component.html"),
        styles: [__webpack_require__(/*! ./settings.component.css */ "./src/app/modules/settings/settings.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_platform_browser__WEBPACK_IMPORTED_MODULE_2__["Title"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
], SettingsComponent);



/***/ }),

/***/ "./src/app/modules/settings/switch-store/switch-store.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/settings/switch-store/switch-store.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".required-params{\r\n    margin-top: 2px;\r\n    margin-bottom: 10px;\r\n    overflow: hidden;\r\n}\r\n.example-param-span{\r\n    width: 100%;\r\n    float: left;\r\n    margin-top: 5px;\r\n}\r\n.normal-invalid-feedback{\r\n    color:#000;\r\n    font-size: 14px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zZXR0aW5ncy9zd2l0Y2gtc3RvcmUvc3dpdGNoLXN0b3JlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CO0lBQ25CLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCxlQUFlO0FBQ25CO0FBQ0E7SUFDSSxVQUFVO0lBQ1YsZUFBZTtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc2V0dGluZ3Mvc3dpdGNoLXN0b3JlL3N3aXRjaC1zdG9yZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJlcXVpcmVkLXBhcmFtc3tcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbi5leGFtcGxlLXBhcmFtLXNwYW57XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgbWFyZ2luLXRvcDogNXB4O1xyXG59XHJcbi5ub3JtYWwtaW52YWxpZC1mZWVkYmFja3tcclxuICAgIGNvbG9yOiMwMDA7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/settings/switch-store/switch-store.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/settings/switch-store/switch-store.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"tab-pane\" id=\"switchStoreTab\">\r\n  <form novalidate class=\"setting\" (ngSubmit)=\"submitSwitchStore()\" [formGroup]=\"switchStoreForm\" method=\"POST\">\r\n    <div class=\"col-md-12\" [formGroupName]=\"'urls'\">\r\n      <div class=\"form-group row\" [formGroupName]=\"'get-all-switches'\">\r\n        <label for=\"getalllinkurl\" class=\"col-sm-3 text-right col-form-label required\">Get All Switch URL:</label>\r\n        <div class=\"col-sm-5\">\r\n          <input  type=\"text\" formControlName=\"url\" class=\"form-control\" placeholder=\"Get All Switch URL\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div  *ngIf=\"(!i['urls']['controls']['get-all-switches']['controls'].url.valid && (i['urls']['controls']['get-all-switches']['controls'].url.dirty || i['urls']['controls']['get-all-switches']['controls'].url.touched )   && i['urls']['controls']['get-all-switches']['controls'].url.errors || submitted) && (i['urls']['controls']['get-all-switches']['controls'].url.errors && i['urls']['controls']['get-all-switches']['controls'].url.errors.required)\" \r\n            >Get status list Url is required.</div>\r\n            <div  *ngIf=\"(!i['urls']['controls']['get-all-switches']['controls'].url.valid && (i['urls']['controls']['get-all-switches']['controls'].url.dirty || i['urls']['controls']['get-all-switches']['controls'].url.touched )   && i['urls']['controls']['get-all-switches']['controls'].url.errors || submitted) && (i['urls']['controls']['get-all-switches']['controls'].url.errors && i['urls']['controls']['get-all-switches']['controls'].url.errors.pattern)\" \r\n            >Please enter a valid URL</div>\r\n          </div>\r\n        </div>  \r\n      </div>\r\n      <div class=\"form-group row\" [formGroupName]=\"'get-switch'\">\r\n        <label for=\"getlinkurl\" class=\"col-sm-3 text-right col-form-label required\">Get Switch With ID URL:</label>\r\n        <div class=\"col-sm-5\">\r\n          <input  type=\"text\" formControlName=\"url\" class=\"form-control\" placeholder=\"Get Switch With ID URL\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch']['controls'].url.valid && (i['urls']['controls']['get-switch']['controls'].url.dirty || i['urls']['controls']['get-switch']['controls'].url.touched )   && i['urls']['controls']['get-switch']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch']['controls'].url.errors && i['urls']['controls']['get-switch']['controls'].url.errors.paramError)\" \r\n             >Url do not contain required params.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch']['controls'].url.valid && (i['urls']['controls']['get-switch']['controls'].url.dirty || i['urls']['controls']['get-switch']['controls'].url.touched )   && i['urls']['controls']['get-switch']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch']['controls'].url.errors && i['urls']['controls']['get-switch']['controls'].url.errors.required)\" \r\n             >Get Link Url is required.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch']['controls'].url.valid && (i['urls']['controls']['get-switch']['controls'].url.dirty || i['urls']['controls']['get-switch']['controls'].url.touched )   && i['urls']['controls']['get-switch']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch']['controls'].url.errors && i['urls']['controls']['get-switch']['controls'].url.errors.pattern)\" \r\n            >Please enter a valid URL</div>\r\n        </div>\r\n        </div>  \r\n        <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre class=\"required-params\">Required query params:{{paramsList.switchWithIdParams}}</pre>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!--<div class=\"form-group row\" [formGroupName]=\"'get-customers-with-switch-id'\">\r\n        <label for=\"getlinkwithparam\" class=\"col-sm-3 text-right col-form-label required\">Get Customers With Switch ID:</label>\r\n        <div class=\"col-sm-5\">\r\n          <input  type=\"text\" formControlName=\"url\" class=\"form-control\"  placeholder=\"Get Customers With Switch ID\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"(!i['urls']['controls']['get-customers-with-switch-id']['controls'].url.valid && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.dirty || i['urls']['controls']['get-customers-with-switch-id']['controls'].url.touched )   && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors.paramError)\" \r\n             >Url do not contain required params.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-customers-with-switch-id']['controls'].url.valid && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.dirty || i['urls']['controls']['get-customers-with-switch-id']['controls'].url.touched )   && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors.required)\" \r\n             >Get Link Url is required.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-customers-with-switch-id']['controls'].url.valid && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.dirty || i['urls']['controls']['get-customers-with-switch-id']['controls'].url.touched )   && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors && i['urls']['controls']['get-customers-with-switch-id']['controls'].url.errors.pattern)\" \r\n            >Please enter a valid URL</div>\r\n        </div>\r\n        </div> \r\n        <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre class=\"required-params\">Required query params:{{paramsList.customersWithSwitchId}}</pre>\r\n          </span>\r\n        </div>\r\n      </div>-->\r\n      <div class=\"form-group row\" [formGroupName]=\"'get-switch-ports'\">\r\n        <label for=\"getcontracturl\" class=\"col-sm-3 text-right col-form-label required\">Get Port List with Switch ID:</label> \r\n        <div class=\"col-sm-5\">\r\n          <input type=\"text\" formControlName=\"url\" class=\"form-control\" placeholder=\"Get Port List with Switch ID\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch-ports']['controls'].url.valid && (i['urls']['controls']['get-switch-ports']['controls'].url.dirty || i['urls']['controls']['get-switch-ports']['controls'].url.touched )   && i['urls']['controls']['get-switch-ports']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-ports']['controls'].url.errors && i['urls']['controls']['get-switch-ports']['controls'].url.errors.paramError)\" \r\n             >Url do not contain required params.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch-ports']['controls'].url.valid && (i['urls']['controls']['get-switch-ports']['controls'].url.dirty || i['urls']['controls']['get-switch-ports']['controls'].url.touched )   && i['urls']['controls']['get-switch-ports']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-ports']['controls'].url.errors && i['urls']['controls']['get-switch-ports']['controls'].url.errors.required)\" \r\n             >Get Link Url is required.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-switch-ports']['controls'].url.valid && (i['urls']['controls']['get-switch-ports']['controls'].url.dirty || i['urls']['controls']['get-switch-ports']['controls'].url.touched )   && i['urls']['controls']['get-switch-ports']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-ports']['controls'].url.errors && i['urls']['controls']['get-switch-ports']['controls'].url.errors.pattern)\" \r\n            >Please enter a valid URL</div>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre class=\"required-params\">Required query params:{{paramsList.portsWithSwitchId}}</pre>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <!--<div class=\"form-group row\" [formGroupName]=\"'get-port-with-id'\">\r\n        <label for=\"deletecontracturl\" class=\"col-sm-3 text-right col-form-label required\">Get Port with ID URL:</label> \r\n        <div class=\"col-sm-5\">\r\n          <input type=\"text\" formControlName=\"url\" class=\"form-control\"  placeholder=\"Get Port with ID URL\" />\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"(!i['urls']['controls']['get-port-with-id']['controls'].url.valid && (i['urls']['controls']['get-port-with-id']['controls'].url.dirty || i['urls']['controls']['get-port-with-id']['controls'].url.touched )   && i['urls']['controls']['get-port-with-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-port-with-id']['controls'].url.errors && i['urls']['controls']['get-port-with-id']['controls'].url.errors.paramError)\" \r\n             >Url do not contain required params.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-port-with-id']['controls'].url.valid && (i['urls']['controls']['get-port-with-id']['controls'].url.dirty || i['urls']['controls']['get-port-with-id']['controls'].url.touched )   && i['urls']['controls']['get-port-with-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-port-with-id']['controls'].url.errors && i['urls']['controls']['get-port-with-id']['controls'].url.errors.required)\" \r\n             >Get Link Url is required.</div>\r\n            <div *ngIf=\"(!i['urls']['controls']['get-port-with-id']['controls'].url.valid && (i['urls']['controls']['get-port-with-id']['controls'].url.dirty || i['urls']['controls']['get-port-with-id']['controls'].url.touched )   && i['urls']['controls']['get-port-with-id']['controls'].url.errors || submitted) && (i['urls']['controls']['get-port-with-id']['controls'].url.errors && i['urls']['controls']['get-port-with-id']['controls'].url.errors.pattern)\" \r\n            >Please enter a valid URL</div>\r\n        </div>\r\n        </div>\r\n        <div class=\"col-sm-4\">\r\n          <span  class=\"example-param-span normal-invalid-feedback\">\r\n            <pre class=\"required-params\">Required query params:{{paramsList.portWithId}}</pre>\r\n          </span>\r\n        </div>\r\n      </div>-->\r\n      <div class=\"form-group row\" [formGroupName]=\"'get-switch-port-flows'\">\r\n          <label for=\"deletecontracturl\" class=\"col-sm-3 text-right col-form-label required\">Get Port Customers and Flows:</label> \r\n          <div class=\"col-sm-5\">\r\n            <input type=\"text\" formControlName=\"url\" class=\"form-control\"  placeholder=\"Get Port Customers and Flows\" />\r\n            <div class=\"invalid-feedback\">\r\n              <div *ngIf=\"(!i['urls']['controls']['get-switch-port-flows']['controls'].url.valid && (i['urls']['controls']['get-switch-port-flows']['controls'].url.dirty || i['urls']['controls']['get-switch-port-flows']['controls'].url.touched )   && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-port-flows']['controls'].url.errors && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors.paramError)\" \r\n               >Url do not contain required params.</div>\r\n              <div *ngIf=\"(!i['urls']['controls']['get-switch-port-flows']['controls'].url.valid && (i['urls']['controls']['get-switch-port-flows']['controls'].url.dirty || i['urls']['controls']['get-switch-port-flows']['controls'].url.touched )   && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-port-flows']['controls'].url.errors && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors.required)\" \r\n               >Get Link Url is required.</div>\r\n              <div *ngIf=\"(!i['urls']['controls']['get-switch-port-flows']['controls'].url.valid && (i['urls']['controls']['get-switch-port-flows']['controls'].url.dirty || i['urls']['controls']['get-switch-port-flows']['controls'].url.touched )   && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors || submitted) && (i['urls']['controls']['get-switch-port-flows']['controls'].url.errors && i['urls']['controls']['get-switch-port-flows']['controls'].url.errors.pattern)\" \r\n              >Please enter a valid URL</div>\r\n          </div>\r\n          </div>\r\n          <div class=\"col-sm-4\">\r\n            <span  class=\"example-param-span normal-invalid-feedback\">\r\n              <pre class=\"required-params\">Required query params:{{paramsList.portCustomersWithLinks}}</pre>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button type=\"button\" (click)=\"deleteSwitchStore()\" class=\"btn kilda_btn\" *ngIf=\"isEdit && !isEditable\" style=\"margin:1px 4px;\">Delete</button>\r\n          <button type=\"button\" (click)=\"enableEditForm()\" class=\"btn kilda_btn\" *ngIf=\"isEdit && !isEditable\">Edit</button>\r\n          <button type=\"button\" (click)=\"cancelEditForm()\"  class=\"btn kilda_btn cancel_btn\" *ngIf=\"isEdit && isEditable\">Cancel</button>\r\n          <button type=\"submit\"  class=\"btn kilda_btn\" *ngIf=\"!isEdit || isEditable\">Save</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/settings/switch-store/switch-store.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/settings/switch-store/switch-store.component.ts ***!
  \*************************************************************************/
/*! exports provided: SwitchStoreComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchStoreComponent", function() { return SwitchStoreComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let SwitchStoreComponent = class SwitchStoreComponent {
    constructor(storesettingservice, formbuilder, loaderService, toastr, modalService) {
        this.storesettingservice = storesettingservice;
        this.formbuilder = formbuilder;
        this.loaderService = loaderService;
        this.toastr = toastr;
        this.modalService = modalService;
        this.paramsList = {
            switchWithIdParams: ["Loading..."],
            customersWithSwitchId: ["Loading..."],
            portsWithSwitchId: ["Loading..."],
            portWithId: ["Loading..."],
            portCustomersWithLinks: ["Loading..."]
        };
        this.isEdit = false;
        this.isEditable = false;
        this.submitted = false;
        /**BEGIN : Url param request handlers */
        this.processParamsDataList = data => {
            return data.map(function (d) {
                return d["param-name"];
            });
        };
        this.processSwitchIdParams = data => {
            this.paramsList.switchWithIdParams = this.processParamsDataList(data);
            setTimeout(() => {
                this.bindUrlValidatorsWithParams("get-switch", this.paramsList.switchWithIdParams);
            }, 100);
            /**/
        };
        this.processCustomersWithSwitchIdParams = data => {
            this.paramsList.customersWithSwitchId = this.processParamsDataList(data);
            setTimeout(() => {
                this.bindUrlValidatorsWithParams("get-customers-with-switch-id", this.paramsList.customersWithSwitchId);
            }, 100);
        };
        this.processPortsWithSwitchId = data => {
            this.paramsList.portsWithSwitchId = this.processParamsDataList(data);
            setTimeout(() => {
                this.bindUrlValidatorsWithParams("get-switch-ports", this.paramsList.portsWithSwitchId);
            }, 100);
        };
        this.processPortWithId = data => {
            this.paramsList.portWithId = this.processParamsDataList(data);
            setTimeout(() => {
                this.bindUrlValidatorsWithParams("get-port-with-id", this.paramsList.portWithId);
            }, 100);
        };
        this.processPortCustomersWithLinks = data => {
            this.paramsList.portCustomersWithLinks = this.processParamsDataList(data);
            setTimeout(() => {
                this.bindUrlValidatorsWithParams("get-switch-port-flows", this.paramsList.portCustomersWithLinks);
            }, 100);
        };
        this.errorHanlder = err => { };
    }
    ngOnInit() {
        this.buildSwitchStoreForm();
        this.getSwitchStoreConfig();
        this.getSwitchStoreUrls();
    }
    buildSwitchStoreForm() {
        this.switchStoreForm = this.formbuilder.group({
            urls: this.formbuilder.group({
                "get-all-switches": this.formbuilder.group({
                    name: "get-all-switches",
                    "method-type": "GET",
                    url: [
                        "",
                        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].compose([
                            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
                            (control) => {
                                let url = control.value;
                                if (!this.storesettingservice.validateUrl(url)) {
                                    return {
                                        pattern: {
                                            url: url
                                        }
                                    };
                                }
                                return null;
                            }
                        ])
                    ],
                    header: "Content-Type:application/json",
                    body: "{}"
                }),
                "get-switch": this.formbuilder.group({
                    name: "get-switch",
                    "method-type": "GET",
                    url: [""],
                    header: "Content-Type:application/json",
                    body: "{}"
                }),
                "get-switch-ports": this.formbuilder.group({
                    name: "get-switch-ports",
                    "method-type": "GET",
                    url: [""],
                    header: "Content-Type:application/json",
                    body: "{[]}"
                }),
                "get-switch-port-flows": this.formbuilder.group({
                    name: "get-switch-port-flows",
                    "method-type": "GET",
                    url: [""],
                    header: "Content-Type:application/json",
                    body: "{}"
                })
            })
        });
    }
    get i() {
        return this.switchStoreForm.controls;
    }
    /**Get all switch store urls */
    getSwitchStoreUrls() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].loading_switch_store);
        this.storesettingservice.getSwitchStoreUrl().subscribe(response => {
            if (response && response.length) {
                for (var i = 0; i < response.length; i++) {
                    switch (response[i]) {
                        case "get-switch":
                            this.storesettingservice
                                .getData("/url/params/get-switch")
                                .subscribe(this.processSwitchIdParams, this.errorHanlder);
                            break;
                        case "get-switch-ports":
                            this.storesettingservice
                                .getData("/url/params/get-switch-ports")
                                .subscribe(this.processPortsWithSwitchId, this.errorHanlder);
                            break;
                        case "get-switch-port-flows":
                            this.storesettingservice
                                .getData("/url/params/get-switch-port-flows")
                                .subscribe(this.processPortCustomersWithLinks, this.errorHanlder);
                            break;
                    }
                }
            }
            setTimeout(() => { this.loaderService.hide(); }, 3000);
        });
    }
    /**Get switch store stored values*/
    getSwitchStoreConfig() {
        this.storesettingservice.getSwitchStoreDetails().subscribe(jsonResponse => {
            if (jsonResponse &&
                jsonResponse["urls"] &&
                typeof jsonResponse["urls"]["get-all-switches"] != "undefined" &&
                typeof jsonResponse["urls"]["get-all-switches"]["url"] != "undefined") {
                let newResponse = {
                    "get-all-switches": {
                        name: "get-all-switches",
                        url: ""
                    },
                    "get-switch": {
                        name: "get-switch",
                        url: ""
                    },
                    "get-switch-ports": {
                        name: "get-switch-ports",
                        url: "",
                    },
                    "get-switch-port-flows": {
                        name: "get-switch-port-flows",
                        url: ""
                    }
                };
                let response = { urls: Object.assign({}, newResponse, jsonResponse.urls) };
                this.switchStoreObj = response;
                this.switchStoreForm.setValue(response);
                this.switchStoreForm.disable();
                this.isEdit = true;
            }
        }, err => { });
    }
    /**END */
    bindUrlValidatorsWithParams(controlName, paramsList) {
        this.switchStoreForm.controls["urls"]["controls"][controlName].controls["url"].setValidators([
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required,
            (control) => {
                let url = control.value;
                if (!this.storesettingservice.validateUrl(url)) {
                    return {
                        pattern: {
                            url: url
                        }
                    };
                }
                return null;
            },
            (control) => {
                let url = control.value;
                if (!this.storesettingservice.validateUrlParams(url, paramsList)) {
                    return {
                        paramError: {
                            url: url
                        }
                    };
                }
                return null;
            }
        ]);
    }
    enableEditForm() {
        this.isEditable = true;
        this.switchStoreForm.enable();
    }
    cancelEditForm() {
        this.isEditable = false;
        this.isEdit = true;
        this.switchStoreForm.reset();
        this.switchStoreForm.setValue(this.switchStoreObj);
        this.switchStoreForm.disable();
    }
    submitSwitchStore() {
        this.submitted = true;
        if (this.switchStoreForm.invalid) {
            return;
        }
        this.submitted = false;
        var obj = this.switchStoreForm.value;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].saving_switch_store);
        this.storesettingservice
            .submitLinkData("/store/switch-store-config/save", obj)
            .subscribe((response) => {
            this.switchStoreForm.setValue(response || {});
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].saved_switch_store, "Success");
            this.switchStoreForm.disable();
            this.isEditable = false;
            this.isEdit = true;
        }, error => {
            this.loaderService.hide();
            var errorMsg = error && error.error && error.error["error-auxiliary-message"]
                ? error.error["error-auxiliary-message"]
                : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].error_saving_switch_store;
            this.toastr.error(errorMsg, "Error");
        });
    }
    deleteSwitchStore() {
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_6__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to delete switch store setting?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].deleting_switch_store);
                this.storesettingservice.deleteSwitchStore('/store/switch-store-config/delete').subscribe((res) => {
                    this.loaderService.hide();
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].switch_store_setting_deleted, 'Success');
                    setTimeout(function () {
                        localStorage.removeItem('hasSwtStoreSetting');
                        localStorage.removeItem('switchStoreSetting');
                        localStorage.removeItem('switchFilterFlag');
                        location.reload();
                    }, 500);
                }, (error) => {
                    var errorMsg = error && error.error && error.error['error-auxiliary-message'] ? error.error['error-auxiliary-message'] : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].error_in_deleting_switch_store;
                    this.toastr.error(errorMsg, 'Error');
                });
            }
        });
    }
};
SwitchStoreComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-switch-store",
        template: __webpack_require__(/*! ./switch-store.component.html */ "./src/app/modules/settings/switch-store/switch-store.component.html"),
        styles: [__webpack_require__(/*! ./switch-store.component.css */ "./src/app/modules/settings/switch-store/switch-store.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_2__["StoreSettingtService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_7__["NgbModal"]])
], SwitchStoreComponent);



/***/ }),

/***/ "./src/app/modules/switches/flows/flows.component.css":
/*!************************************************************!*\
  !*** ./src/app/modules/switches/flows/flows.component.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dt-buttons {\r\n    float: right !important;\r\n}\r\ntable.dataTable tbody td {\r\n    padding: 10px 20px 10px 18px;\r\n}\r\ntable.dataTable tr th i.fa {\r\n    float: right;\r\n    font-size: 12px;\r\n}\r\ndiv.dt-buttons{\r\n    float:right;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9mbG93cy9mbG93cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25CO0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3N3aXRjaGVzL2Zsb3dzL2Zsb3dzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHQtYnV0dG9ucyB7XHJcbiAgICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcclxufVxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdGQge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4IDEwcHggMThweDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRyIHRoIGkuZmEge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG5kaXYuZHQtYnV0dG9uc3tcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/switches/flows/flows.component.html":
/*!*************************************************************!*\
  !*** ./src/app/modules/switches/flows/flows.component.html ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n          \r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group input-group-sm\">\r\n                     <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                 </div>\r\n            </div>\r\n            <div class=\"col-sm-6 text-right text-filters\">\r\n                <div *ngIf=\"storeLinkSetting && commonService.hasPermission('fw_flow_inventory')\" class=\"btn-group btn-group-sm btn-group-toggle\" data-toggle=\"buttons\">\r\n                    <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : portFlowFlag == 'controller','btn-dark': portFlowFlag != 'controller'}\">\r\n                      <input type=\"radio\" (click)=\"loadPortFlows('controller')\" name=\"options\" id=\"option2\" autocomplete=\"off\"> Controller\r\n                    </label>\r\n                    <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : portFlowFlag == 'inventory','btn-dark': portFlowFlag != 'inventory'}\">\r\n                      <input type=\"radio\" (click)=\"loadPortFlows('inventory')\" name=\"options\" id=\"option3\" autocomplete=\"off\"> Inventory\r\n                    </label>\r\n                    \r\n                  </div>\r\n            </div>\r\n           \r\n              <div class=\"col-sm-2 text-right text-filters mb-3\" id=\"buttons\">\r\n                  \r\n              </div>\r\n         </div>\r\n         \r\n     </div>\r\n    <div class=\"clear clearfix\"></div>\r\n  </div>\r\n  <app-port-flows *ngIf=\"portFlowFlag == 'controller' && !ifLoadingData\" [textSearch]=\"textSearch\" [data] = \"data\"></app-port-flows>\r\n  <app-port-inventory-flows *ngIf=\"portFlowFlag == 'inventory' && !ifLoadingData\" [textSearch]=\"textSearch\" [data]=\"data\"></app-port-inventory-flows>"

/***/ }),

/***/ "./src/app/modules/switches/flows/flows.component.ts":
/*!***********************************************************!*\
  !*** ./src/app/modules/switches/flows/flows.component.ts ***!
  \***********************************************************/
/*! exports provided: FlowsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowsComponent", function() { return FlowsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! src/app/common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");






let FlowsComponent = class FlowsComponent {
    constructor(loaderService, switchService, commonService) {
        this.loaderService = loaderService;
        this.switchService = switchService;
        this.commonService = commonService;
        this.data = [];
        this.flowSubscriber = null;
        this.portFlowFlag = 'controller';
        this.ifLoadingData = false;
        this.storeLinkSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
    }
    ngOnInit() {
        this.loadPortFlows(this.portFlowFlag);
    }
    loadPortFlows(filter) {
        this.ifLoadingData = true;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_5__["MessageObj"].fetching_flows);
        if (filter) {
            this.portFlowFlag = filter;
        }
        var ref = this;
        var filterFlag = this.portFlowFlag == 'inventory';
        let switchId = this.switchid;
        let portNumber = this.portnumber;
        var flowData = null;
        if (filterFlag) {
            flowData = JSON.parse(localStorage.getItem('portFlowInventory')) || null;
        }
        else {
            flowData = JSON.parse(localStorage.getItem('portFlows')) || null;
        }
        if (flowData && flowData.length) {
            this.data = flowData;
            this.loaderService.hide();
            this.ifLoadingData = false;
        }
        else {
            this.flowSubscriber = this.switchService.getSwitchFlows(switchId, filterFlag, portNumber).subscribe((flows) => {
                if (this.portFlowFlag == 'controller') {
                    this.data = flows;
                    localStorage.setItem('portFlows', JSON.stringify(this.data));
                    this.ifLoadingData = false;
                }
                else {
                    let flowList = flows || [];
                    let newFlowList = [];
                    flowList.forEach(customer => {
                        if (customer.flows) {
                            customer.flows.forEach(flow => {
                                newFlowList.push({
                                    "flow-id": flow['flow-id'],
                                    "customer-uuid": customer['customer-uuid'] || '-',
                                    "company-name": customer['company-name'] || '-',
                                    "bandwidth": flow['bandwidth']
                                });
                            });
                        }
                    });
                    this.data = newFlowList;
                    this.ifLoadingData = false;
                    localStorage.setItem('portFlowInventory', JSON.stringify(this.data));
                }
            }, error => {
                this.data = [];
                ref.loaderService.hide();
                this.ifLoadingData = false;
            });
        }
    }
    fulltextSearch(e) {
        this.textSearch = e.target.value || ' ';
    }
    ngAfterViewInit() {
    }
    rerender() {
    }
    ngOnDestroy() {
        if (this.flowSubscriber) {
            this.flowSubscriber.unsubscribe();
            this.flowSubscriber = null;
        }
    }
    ngOnChanges(change) {
        if (change.data) {
            if (change.data.currentValue) {
                this.data = change.data.currentValue;
            }
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowsComponent.prototype, "switchid", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], FlowsComponent.prototype, "portnumber", void 0);
FlowsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-flows',
        template: __webpack_require__(/*! ./flows.component.html */ "./src/app/modules/switches/flows/flows.component.html"),
        styles: [__webpack_require__(/*! ./flows.component.css */ "./src/app/modules/switches/flows/flows.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_2__["LoaderService"], src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_3__["SwitchService"], src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_4__["CommonService"]])
], FlowsComponent);



/***/ }),

/***/ "./src/app/modules/switches/index.ts":
/*!*******************************************!*\
  !*** ./src/app/modules/switches/index.ts ***!
  \*******************************************/
/*! exports provided: SwitchLayoutComponent, SwitchesComponent, SwitchListComponent, SwitchDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _switch_layout_switch_layout_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./switch-layout/switch-layout.component */ "./src/app/modules/switches/switch-layout/switch-layout.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchLayoutComponent", function() { return _switch_layout_switch_layout_component__WEBPACK_IMPORTED_MODULE_0__["SwitchLayoutComponent"]; });

/* harmony import */ var _switches_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./switches.component */ "./src/app/modules/switches/switches.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchesComponent", function() { return _switches_component__WEBPACK_IMPORTED_MODULE_1__["SwitchesComponent"]; });

/* harmony import */ var _switch_list_switch_list_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./switch-list/switch-list.component */ "./src/app/modules/switches/switch-list/switch-list.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchListComponent", function() { return _switch_list_switch_list_component__WEBPACK_IMPORTED_MODULE_2__["SwitchListComponent"]; });

/* harmony import */ var _switch_detail_switch_detail_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./switch-detail/switch-detail.component */ "./src/app/modules/switches/switch-detail/switch-detail.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SwitchDetailComponent", function() { return _switch_detail_switch_detail_component__WEBPACK_IMPORTED_MODULE_3__["SwitchDetailComponent"]; });







/***/ }),

/***/ "./src/app/modules/switches/port-details/port-details.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/switches/port-details/port-details.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-wrapper {\r\n  border: 1px solid #ccc;\r\n  padding: 15px 15px 0;\r\n}\r\n\r\n.modal-title {\r\n  width: calc(100% - 25px);\r\n  font-weight: bold;\r\n  padding: 10px 0;\r\n  font-size: 14px;\r\n  margin-top: 0px;\r\n}\r\n\r\n.line-legend li:before {\r\n  height: 14px;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0px !important;\r\n  width: 14px;\r\n  content: \"\";\r\n  background: #aad200;\r\n}\r\n\r\n.line-legend li:first-child:before {\r\n  height: 14px;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0px !important;\r\n  width: 14px;\r\n  content: \"\";\r\n  background: #182488;\r\n}\r\n\r\n.dt-buttons {\r\n  float: right !important;\r\n}\r\n\r\n.onoffswitch {margin-top: -5px;}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWRldGFpbHMvcG9ydC1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxzQkFBc0I7RUFDdEIsb0JBQW9CO0FBQ3RCOztBQUVBO0VBQ0Usd0JBQXdCO0VBQ3hCLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osT0FBTztFQUNQLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxZQUFZO0VBQ1osT0FBTztFQUNQLGtCQUFrQjtFQUNsQixtQkFBbUI7RUFDbkIsV0FBVztFQUNYLFdBQVc7RUFDWCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUEsY0FBYyxnQkFBZ0IsQ0FBQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvcG9ydC1kZXRhaWxzL3BvcnQtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0td3JhcHBlciB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICBwYWRkaW5nOiAxNXB4IDE1cHggMDtcclxufVxyXG5cclxuLm1vZGFsLXRpdGxlIHtcclxuICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgcGFkZGluZzogMTBweCAwO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBtYXJnaW4tdG9wOiAwcHg7XHJcbn1cclxuXHJcbi5saW5lLWxlZ2VuZCBsaTpiZWZvcmUge1xyXG4gIGhlaWdodDogMTRweDtcclxuICBsZWZ0OiAwO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gIHdpZHRoOiAxNHB4O1xyXG4gIGNvbnRlbnQ6IFwiXCI7XHJcbiAgYmFja2dyb3VuZDogI2FhZDIwMDtcclxufVxyXG5cclxuLmxpbmUtbGVnZW5kIGxpOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgaGVpZ2h0OiAxNHB4O1xyXG4gIGxlZnQ6IDA7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMHB4ICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDE0cHg7XHJcbiAgY29udGVudDogXCJcIjtcclxuICBiYWNrZ3JvdW5kOiAjMTgyNDg4O1xyXG59XHJcblxyXG4uZHQtYnV0dG9ucyB7XHJcbiAgZmxvYXQ6IHJpZ2h0ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5vbm9mZnN3aXRjaCB7bWFyZ2luLXRvcDogLTVweDt9Il19 */"

/***/ }),

/***/ "./src/app/modules/switches/port-details/port-details.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/port-details/port-details.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div >\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-6\">      \r\n        <h5 class='modal-title'>PORT DETAILS</h5>\r\n    </div>\r\n    <div class=\"col-sm-6 text-right\">\r\n        <button class=\"btn kilda_btn\" *ngIf=\"!editConfigStatus && commonService.hasPermission('sw_port_config')\" (click)=\"configurePortDetails()\">Configure</button>\r\n        <button class=\"btn kilda_btn\" *ngIf=\"editConfigStatus\" (click)=\"savePortDetails()\" style=\"margin-right: 5px;\">Save</button>\r\n        <button class=\"btn kilda_btn\" *ngIf=\"editConfigStatus\" (click)=\"cancelConfigurePort()\">Cancel</button>\r\n    </div>\r\n  </div>\r\n  <form [formGroup]=\"portForm\">\r\n    <div class='form-wrapper'>\r\n      <div class='row'>\r\n        <label class='col-sm-3'>Switch ID:</label>\r\n        <div class='col-sm-2'>\r\n          <span class=\"switchportdetails_div_switch_id copy_to_clipBoard\">        \r\n            <p [contextMenu]=\"copySrcSwitch\">{{retrievedSwitchObject.switch_id}}</p>\r\n            </span>\r\n        </div>\r\n        <div class=\"col-sm-1\">\r\n          <input type=\"hidden\" class=\"on-off-switch\" value=\"0\" style=\"display: none;\">\r\n          <div class=\"pull-left\">\r\n            <div class=\"onoffswitch\">\r\n              <input type=\"checkbox\" (change)=\"maskSwitchId('source',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchsource\">\r\n              <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                <span class=\"onoffswitch-switch\"></span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <label class='col-sm-3' *ngIf=\"hasStoreSetting\">Assignment State:</label>\r\n        <p *ngIf=\"hasStoreSetting\" class='col-sm-3 switchdetails_div_number'>{{portDataObject['assignment-state'] ? portDataObject['assignment-state']:'-'}}</p>\r\n      </div>\r\n      <div class='row'>\r\n        <label class='col-sm-3 '>Port Number:</label>\r\n        <p class='col-sm-3 switchdetails_div_number'>{{portDataObject.port_number}}</p>\r\n        <label class='col-sm-3 ' *ngIf=\"hasStoreSetting\">Assignment Type:</label>\r\n        <p *ngIf=\"hasStoreSetting\" class='col-sm-3 switchdetails_div_number'>{{portDataObject.assignmenttype ? portDataObject.assignmenttype:'-'}}\r\n          <i title=\"Controller : {{descrepancyData.assignmentType.controller}}, Inventory : {{descrepancyData.assignmentType.inventory}}\" *ngIf=\"hasStoreSetting && assignmentTypeDescrepancy\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n        </p>\r\n      </div>\r\n      <div class='row'>\r\n          <label class='col-sm-3 ' *ngIf=\"!hasStoreSetting\">Assignment Type:</label>\r\n          <p *ngIf=\"!hasStoreSetting\" class='col-sm-3 switchdetails_div_number'>{{portDataObject.assignmenttype ? portDataObject.assignmenttype:'-'}}</p>\r\n         <label class='col-sm-3 ' *ngIf=\"hasStoreSetting\">Interface Type:</label>\r\n        <p class='col-sm-3 switchdetails_div_interface' *ngIf=\"hasStoreSetting\">{{portDataObject.interfacetype}}</p>\r\n        <label class='col-sm-3 ' *ngIf=\"hasStoreSetting\">Assignment Customer Account:</label>\r\n        <p *ngIf=\"hasStoreSetting\" class='col-sm-3 switchdetails_div_number'>\r\n          {{portDataObject.customer && portDataObject.customer['customer-account-number']  ? portDataObject.customer['customer-account-number'] :''}}\r\n          {{portDataObject.customer && portDataObject.customer['company-name'] ? ' - '+portDataObject.customer['company-name'] :''}}\r\n          {{portDataObject.customer && portDataObject.customer['domain-id']  ? ' - '+portDataObject.customer['domain-id'] :''}}\r\n        </p>\r\n      </div>\r\n      <!-- <div class='row' >\r\n        <label class='col-sm-3 '>Status:</label> </div> -->\r\n      <div class='row portStatusInput' >\r\n        <label class='col-sm-3'>Status:</label>\r\n        <p *ngIf=\"!editConfigStatus\" class='col-sm-3 port_details_div_status'>{{getPortStatus(portDataObject.status)}}</p>\r\n        <p class='col-sm-3' *ngIf=\"editConfigStatus\">\r\n          <select formControlName=\"portStatus\" class=\"form-control port_details_div_status\" name=\"portStatus\">\r\n            <option value=\"UP\">UP</option>\r\n            <option value=\"DOWN\">DOWN</option>\r\n          </select>\r\n        </p>\r\n        <label class='col-sm-3' *ngIf=\"hasStoreSetting\">Assignment Date:</label>\r\n        <p *ngIf=\"hasStoreSetting\" class='col-sm-3 switchdetails_div_number'>{{ (portDataObject['assignment-date'] ?  assignDate(portDataObject['assignment-date'])  :'-' ) }}</p>\r\n      </div>\r\n      <div class='row'>\r\n        <label class='col-sm-3 '>Sum(Bandwidth) Of Flows(Mbps):</label>\r\n        <p class='col-sm-3 port_details_div_status'>{{ (!flowBandwidthFlag) ? flowBandwidthSum :'loading..'}}</p>\r\n       </div>\r\n       <div class='row'>\r\n        <label class='col-sm-3 '>Number of Flows:</label>\r\n        <p class='col-sm-3 port_details_div_status'>{{ (portFlows && (portFlows.length || portFlows.length ==0)) ? portFlows.length :'loading..'}}</p>\r\n       </div>\r\n      <div class='row' *ngIf=\"hasStoreSetting\">\r\n        <label class='col-sm-3 ' *ngIf=\"hasStoreSetting\">Port X-connect:</label>\r\n        <p class='col-sm-3 port_details_div_status'>{{portDataObject.crossconnect ? portDataObject.crossconnect:'-'}}</p>\r\n        <label class='col-sm-3 ' *ngIf=\"hasStoreSetting\">Port Notes:</label>\r\n        <p class='col-sm-3 switchdetails_div_number'>{{portDataObject.notes ? portDataObject.notes:'-'}}</p>\r\n      </div>\r\n\r\n      <div class='row' *ngIf=\"hasStoreSetting\">\r\n          <label class='col-sm-3 ' >Port Termination point at Rack:</label>\r\n          <p class='col-sm-3'>{{portDataObject.odfmdf ? portDataObject.odfmdf:'-'}}</p>\r\n        \r\n        <label class='col-sm-3 ' >Port Termination point at MMR</label>\r\n        <p class='col-sm-3 switchdetails_div_number'>{{portDataObject.mmr ? portDataObject.mmr:'-'}}</p>\r\n      </div>\r\n      <div class=\"row\">\r\n        <label class=\"col-sm-3 col-form-label\">Discovery Packets:</label>\r\n        <div class=\"col-sm-4 switchdetails_div_address col-form-label\">\r\n            <div class=\"enabledisableswitch\">\r\n                <input type=\"checkbox\" *ngIf=\"commonService.hasPermission('sw_update_port_properties')\"  (change)=\"enableDisableDiscoveryPackets($event)\" name=\"enabledisableswitch\" class=\"enabledisableswitch-checkbox\" id=\"enabledisableswitch\" [checked]=\"discoverypackets\">\r\n                <input type=\"checkbox\" disabled=\"disabled\" *ngIf=\"!commonService.hasPermission('sw_update_port_properties')\"  name=\"enabledisableswitch\" class=\"enabledisableswitch-checkbox\" id=\"enabledisableswitch\" [checked]=\"discoverypackets\">\r\n                <label class=\"enabledisableswitch-label\" for=\"enabledisableswitch\">\r\n                  <span class=\"enabledisableswitch-inner enabledisableswitch-inner-switch\"></span>\r\n                  <span class=\"enabledisableswitch-switch\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n    </div>\r\n    </div>   \r\n  </form>\r\n \r\n</div>\r\n<!-- Start: Tabs -->\r\n<div class=\"row\">\r\n  <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n    <ul class=\"nav nav-pills\">\r\n      <li [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('graph')\" data-toggle=\"tab\">GRAPH</a>\r\n      </li>\r\n      <!-- <li *ngIf=\"commonService.hasPermission('sw_switch_inventory') && commonService.hasPermission('menu_flows')\" [ngClass]=\"{'active': openedTab == 'flow'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('flow')\" data-toggle=\"tab\">FLOWS</a>\r\n      </li> -->\r\n      <li *ngIf=\"commonService.hasPermission('menu_flows')\" [ngClass]=\"{'active': openedTab == 'flow'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('flow')\" data-toggle=\"tab\">FLOWS</a>\r\n      </li>\r\n      <li *ngIf=\"hasStoreSetting && assignmentTypeDescrepancy\" [ngClass]=\"{'active': openedTab == 'descripancy'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('descripancy')\" data-toggle=\"tab\" id=\"descripancy-list\">DISCREPANCY</a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"tab-content clearfix\">\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'graph'}\">\r\n        <app-port-graph *ngIf=\"openedTab == 'graph'\"></app-port-graph>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'flow'}\">\r\n          <app-flows [switchid]=\"retrievedSwitchObject.switch_id\"  [portnumber]=\"portDataObject.port_number\" *ngIf=\"openedTab == 'flow'\"></app-flows>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'descripancy'}\" id=\"a\">\r\n        <div class=\"table-responsive\">\r\n          <table class=\"row-border hover dataTable no-footer\">\r\n              <thead class=\"thead-light\"><tr class=\"tableHeading\"><th>Discrepancy</th><th>Kilda Controller</th><th>Switch Store</th></tr></thead>\r\n            <tbody>\r\n              <tr *ngIf=\"assignmentTypeDescrepancy\" >\r\n                <td class=\"divTableCell\">Assignment Type</td>\r\n                <td class=\"divTableCell\">{{ descrepancyData.assignmentType.controller}}</td>\r\n                <td class=\"divTableCell\">{{ descrepancyData.assignmentType.inventory}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- End: Tabs -->\r\n\r\n<!-- START :  Modal popup content -->\r\n<div id=\"final_configure_confirm_modal\" class=\"hide\">\r\n  <div class=\"row final_configure_confirm_modal_text\">\r\n    <div class=\"col-md-12 row\">\r\n      <div class=\"col-md-4\">\r\n        <div class=\"col-md-12 margin-bottom\" style=\"margin-bottom:10px;\">&nbsp;</div>\r\n        <div class=\"col-md-10\">\r\n          <label>Status</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"col-md-12 margin-bottom font-weight no-padding\" style=\"margin-bottom:10px; font-weight:bold;\">Current State</div>\r\n        <div class=\"col-md-10 no-padding\">\r\n          <span id=\"old_status_val\"></span>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"col-md-12 margin-bottom font-weight no-padding\" style=\"margin-bottom:10px; font-weight:bold;\">Requested State</div>\r\n        <div class=\"col-md-10 no-padding\">\r\n          <span id=\"new_status_val\"></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <span class=\"col-md-12 confirmationText\">Are you sure you want to configure this port with requested state?</span>\r\n  </div>\r\n</div>\r\n<!-- END :  Modal popup content -->\r\n\r\n<context-menu #copySrcSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>"

/***/ }),

/***/ "./src/app/modules/switches/port-details/port-details.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/switches/port-details/port-details.component.ts ***!
  \*************************************************************************/
/*! exports provided: PortDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortDetailsComponent", function() { return PortDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
















let PortDetailsComponent = class PortDetailsComponent {
    constructor(maskPipe, formBuiler, toastr, loaderService, router, dygraphService, switchService, clipboardService, titleService, modalService, commonService) {
        this.maskPipe = maskPipe;
        this.formBuiler = formBuiler;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.router = router;
        this.dygraphService = dygraphService;
        this.switchService = switchService;
        this.clipboardService = clipboardService;
        this.titleService = titleService;
        this.modalService = modalService;
        this.commonService = commonService;
        this.openedTab = 'graph';
        this.portFlows = [];
        this.flowBandwidthSum = 0;
        this.flowBandwidthFlag = false;
        this.hasStoreSetting = false;
        this.editConfigStatus = false;
        this.discoverypackets = false;
        this.clipBoardItems = {
            sourceSwitch: "",
        };
        this.descrepancyData = {
            assignmentType: {
                controller: "-",
                inventory: "-"
            }
        };
        this.assignmentTypeDescrepancy = false;
        this.hideToValue = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
        this.getPortStatus = (status) => {
            if (status.toLowerCase() == 'good') {
                return 'UP';
            }
            else if (status.toLowerCase() == 'bad') {
                return 'DOWN';
            }
            return status;
        };
        this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
        if (!this.commonService.hasPermission('menu_switches')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Port');
        this.portDataObject = JSON.parse(localStorage.getItem('portDataObject'));
        this.portForm = this.formBuiler.group({
            portStatus: [this.portDataObject.status],
        });
        this.retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON'));
        this.port_src_switch = this.maskPipe.transform(this.retrievedSwitchObject.switch_id, 'legacy');
        this.clipBoardItems.sourceSwitch = this.retrievedSwitchObject.switch_id;
        if (this.portDataObject['discrepancy'] && (this.portDataObject['discrepancy']['assignment-type'])) {
            if (this.portDataObject['discrepancy']['assignment-type']) {
                this.assignmentTypeDescrepancy = true;
                this.descrepancyData.assignmentType.controller = (typeof (this.portDataObject['discrepancy']['controller-assignment-type']) != 'undefined') ? this.portDataObject['discrepancy']['controller-assignment-type'] : "-";
                this.descrepancyData.assignmentType.inventory = (typeof (this.portDataObject['discrepancy']['inventory-assignment-type']) != 'undefined') ? this.portDataObject['discrepancy']['inventory-assignment-type'] : "-";
            }
        }
        this.router.events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_7__["NavigationEnd"])).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_7__["NavigationEnd"]))
            .subscribe(event => {
            let tempRoute = event;
            if (tempRoute.url.includes("/port")) {
                this.currentRoute = 'port-details';
            }
            else {
                this.currentRoute = 'switch-details';
            }
        });
        this.loadPortFlows();
        this.getDiscoveryPackets();
    }
    getDiscoveryPackets() {
        this.switchService.getdiscoveryPackets(this.retrievedSwitchObject.switch_id, this.portDataObject.port_number).subscribe((response) => {
            this.discoverypackets = response.discovery_enabled;
        }, error => {
            //this.toastr.error('Error in updating discovery packets mode! ','Error');
        });
    }
    maskSwitchId(switchType, e) {
        if (e.target.checked) {
            this.retrievedSwitchObject.switch_id = this.maskPipe.transform(this.retrievedSwitchObject.switch_id, 'legacy');
        }
        else {
            this.retrievedSwitchObject.switch_id = this.maskPipe.transform(this.retrievedSwitchObject.switch_id, 'kilda');
        }
        this.clipBoardItems.sourceSwitch = this.retrievedSwitchObject.switch_id;
    }
    savePortDetails() {
        this.currentPortState = this.portDataObject.status;
        this.requestedPortState = this.portForm.value.portStatus;
        $('#old_status_val').text(this.portDataObject.status);
        $("#new_status_val").text(this.portForm.value.portStatus);
        if (this.currentPortState == this.requestedPortState) {
            this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].nothing_changed, "Information");
        }
        else {
            const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__["ModalconfirmationComponent"]);
            modalRef.componentInstance.title = "Confirmation";
            modalRef.componentInstance.content = $('#final_configure_confirm_modal')[0].innerHTML;
            modalRef.result.then((response) => {
                if (response && response == true) {
                    this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].updating_port_details);
                    this.commitConfig();
                }
            });
        }
    }
    commitConfig() {
        let portStatus = this.portForm.value.portStatus;
        this.switchService.configurePort(this.retrievedSwitchObject.switch_id, this.portDataObject.port_number, portStatus).subscribe(status => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].port_configured, 'Success');
            this.portDataObject.status = portStatus;
            localStorage.setItem('portDataObject', JSON.stringify(this.portDataObject));
            this.editConfigStatus = false;
        }, error => {
            this.loaderService.hide();
            this.editConfigStatus = false;
            if (error.status == '500') {
                this.toastr.error(error.error['error-auxiliary-message']);
            }
            else {
                this.toastr.error("Something went wrong!");
            }
        });
    }
    enableDisableDiscoveryPackets(e) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to update discovery packets value?';
        var OldValue = this.discoverypackets;
        this.discoverypackets = e.target.checked;
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].updating_discovery_flag);
                this.switchService.updatediscoveryPackets(this.retrievedSwitchObject.switch_id, this.portDataObject.port_number, this.discoverypackets).subscribe((response) => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].discovery_packets_updated, 'Success');
                    this.loaderService.hide();
                    this.discoverypackets = e.target.checked;
                }, error => {
                    this.discoverypackets = OldValue;
                    this.loaderService.hide();
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].error_updating_discovery_packets, 'Error');
                });
            }
            else {
                this.discoverypackets = OldValue;
            }
        });
    }
    configurePortDetails() {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_13__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to configure the port?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.editConfigStatus = true;
                this.portForm = this.formBuiler.group({
                    portStatus: [this.portDataObject.status],
                });
            }
        });
    }
    loadPortFlows() {
        if (this.portDataObject['port_number'] && (this.retrievedSwitchObject['switch_id'])) {
            let switchId = this.retrievedSwitchObject.switch_id;
            let portnumber = this.portDataObject.port_number;
            this.flowBandwidthFlag = true;
            this.switchService.getSwitchFlows(switchId, false, portnumber).subscribe(data => {
                this.portFlows = data;
                if (this.portFlows && this.portFlows.length) {
                    for (let flow of this.portFlows) {
                        this.flowBandwidthSum = this.flowBandwidthSum + (flow.maximum_bandwidth / 1000);
                    }
                }
                else {
                    if (this.portFlows == null) {
                        this.portFlows = [];
                    }
                }
                if (this.flowBandwidthSum) {
                    this.flowBandwidthSum = this.flowBandwidthSum.toFixed(3);
                }
                this.flowBandwidthFlag = false;
            }, error => {
                this.portFlows = [];
                this.flowBandwidthSum = 0;
                this.flowBandwidthFlag = false;
            });
        }
    }
    cancelConfigurePort() {
        this.editConfigStatus = false;
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    toggleTab(tab) {
        this.openedTab = tab;
    }
    assignDate(timestamp) {
        if (timestamp) {
            return moment(timestamp * 1000).format("LLL");
        }
        else {
            return '-';
        }
    }
    ngOnDestroy() {
        localStorage.setItem('portLoaderEnabled', "1");
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
], PortDetailsComponent.prototype, "hideToValue", void 0);
PortDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-port-details',
        template: __webpack_require__(/*! ./port-details.component.html */ "./src/app/modules/switches/port-details/port-details.component.html"),
        styles: [__webpack_require__(/*! ./port-details.component.css */ "./src/app/modules/switches/port-details/port-details.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_2__["SwitchidmaskPipe"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_9__["LoaderService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"],
        _common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_5__["DygraphService"],
        _common_services_switch_service__WEBPACK_IMPORTED_MODULE_6__["SwitchService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_10__["ClipboardService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__["Title"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__["NgbModal"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_14__["CommonService"]])
], PortDetailsComponent);



/***/ }),

/***/ "./src/app/modules/switches/port-flows/port-flows.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/modules/switches/port-flows/port-flows.component.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dt-buttons {\r\n    float: right !important;\r\n}\r\ntable.dataTable tbody td {\r\n    padding: 10px 20px 10px 18px;\r\n}\r\ntable.dataTable tr th i.fa {\r\n    float: right;\r\n    font-size: 12px;\r\n}\r\ndiv.dt-buttons{\r\n    float:right;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWZsb3dzL3BvcnQtZmxvd3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtBQUMzQjtBQUNBO0lBQ0ksNEJBQTRCO0FBQ2hDO0FBRUE7SUFDSSxZQUFZO0lBQ1osZUFBZTtBQUNuQjtBQUVBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWZsb3dzL3BvcnQtZmxvd3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kdC1idXR0b25zIHtcclxuICAgIGZsb2F0OiByaWdodCAhaW1wb3J0YW50O1xyXG59XHJcbnRhYmxlLmRhdGFUYWJsZSB0Ym9keSB0ZCB7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdHIgdGggaS5mYSB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbmRpdi5kdC1idXR0b25ze1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/modules/switches/port-flows/port-flows.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/modules/switches/port-flows/port-flows.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n  <div class=\"dataTables_wrapper no-footer\" id=\"port-flow\">\r\n    <table id=\"portflowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n        <thead>\r\n          <tr class=\"tableHeading\">\r\n            <th class=\"\">\r\n              <span title=\"Flow ID\"> Flow ID </span>\r\n              <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedFlowId')\"></i>\r\n              <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedFlowId\" id=\"expandedFlowId\"/>\r\n            </th>\r\n            <th class=\"\" >\r\n               <span title=\"Source Switch\">Src Switch</span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n                <input  value=\"{{ srcSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchName\" id=\"expandedSrcSwitchName\"/>\r\n             </th>\r\n            <th> <span title=\"Source Switch\">Src Switch ID</span></th>\r\n            <th >\r\n              <span title=\"Source Port\">\r\n                Src Port\r\n              </span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchPort')\"></i>\r\n                <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchPort\"id=\"expandedSrcSwitchPort\"/>\r\n            </th>\r\n            <th>\r\n                <span title=\"Source VLAN\"> Src VLAN</span>\r\n              <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchVlan')\"></i>\r\n              <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedSrcSwitchVlan\" id=\"expandedSrcSwitchVlan\"/>\r\n            </th>\r\n            <th class=\"\">\r\n              <span title=\"Destination Switch\">  Dst Switch</span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchName')\"></i>\r\n                <input  value=\"{{ dstSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchName\" id=\"expandedTargetSwitchName\"/>\r\n             </th>\r\n            <th > <span  title=\"Destination Switch\">Dst Switch ID</span></th>\r\n            <th >\r\n              <span title=\"Destination Port\">  Dst Port </span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchPort')\"></i>\r\n                <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchPort\" id=\"expandedTargetSwitchPort\"/>\r\n            </th>\r\n            <th >\r\n                <span title=\"Destination VLAN\"> Dst VLAN   </span>\r\n              <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchVlan')\"></i>\r\n              <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchVlan\" id=\"expandedTargetSwitchVlan\"/>\r\n             </th>\r\n            <th >\r\n                <span title=\"Bandwidth (Mbps)\"> Bandwidth (Mbps)</span>\r\n                    <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBandwidth')\"></i>\r\n                    <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedBandwidth\" id=\"expandedBandwidth\"/>\r\n            </th>\r\n            <th >\r\n                <span title=\"State\"> Status</span>\r\n                 <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n                 <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedState\" id=\"expandedState\"/>\r\n             </th>\r\n           \r\n            <th >\r\n                <span title=\"Description\">   Description </span>\r\n                     <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDescription')\"></i>\r\n                     <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedDescription\" id=\"expandedDescription\"/>\r\n             </th>\r\n            <th>\r\n              <span title=\"type\">  type  </span>\r\n            </th> \r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let row of data; let i = index\"  class=\"flowDataRow\" (click)=\"showFlow(row)\"   [class.down-state]=\"!(row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED')\" [class.up-state]=\"row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED'\" >\r\n            <td  class=\"divTableCell\" title=\"{{row.flowid }}\"> \r\n              {{row.flowid || \"-\"}} \r\n            \r\n             </td>\r\n            <td class=\"divTableCell\" title=\"{{row.source_switch_name}}\" >\r\n              {{row.source_switch_name || \"-\"}}\r\n            \r\n            </td>\r\n            <td  class=\"divTableCell\" title=\"{{row.src_switch}}\">{{row.source_switch || \"-\"}}</td>\r\n            <td  class=\"divTableCell\" title=\"{{row.src_port}}\">{{row.src_port || \"-\"}}</td>\r\n            <td  class=\"divTableCell\">{{row.src_vlan || \"-\"}}</td>\r\n            <td  class=\"divTableCell\" title=\"{{row.target_switch_name}}\">\r\n              {{row.target_switch_name || \"-\"}}\r\n              \r\n            </td>\r\n             <td   class=\"divTableCell\" title=\"{{row.target_switch}}\">{{row.target_switch || \"-\"}}</td>\r\n            <td  class=\"divTableCell\">{{row.dst_port || \"-\"}}</td>\r\n            <td  class=\"divTableCell\">{{row.dst_vlan || \"-\"}}</td>\r\n            <td  class=\"divTableCell\">{{row.maximum_bandwidth / 1000  || \"-\"}}</td>\r\n            <td  class=\"divTableCell\" title=\"{{row.status || row.state ||  '-'}}\">{{ row.status || row.state ||  \"-\"}}</td>\r\n            <td  class=\"divTableCell\" title=\"{{row.description}}\">{{row.description || \"-\"}}</td>\r\n            <td  class=\"divTableCell\" >{{ descrepancyString(row) }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>"

/***/ }),

/***/ "./src/app/modules/switches/port-flows/port-flows.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/modules/switches/port-flows/port-flows.component.ts ***!
  \*********************************************************************/
/*! exports provided: PortFlowsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortFlowsComponent", function() { return PortFlowsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");








let PortFlowsComponent = class PortFlowsComponent {
    constructor(renderer, loaderService, switchService, commonService, router) {
        this.renderer = renderer;
        this.loaderService = loaderService;
        this.switchService = switchService;
        this.commonService = commonService;
        this.router = router;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.wrapperHide = false;
        this.expandedSrcSwitchName = false;
        this.expandedSrcSwitchPort = false;
        this.expandedSrcSwitchVlan = false;
        this.expandedTargetSwitchName = false;
        this.expandedTargetSwitchPort = false;
        this.expandedTargetSwitchVlan = false;
        this.expandedBandwidth = false;
        this.expandedFlowId = false;
        this.expandedState = false;
        this.expandedStatus = false;
        this.expandedDescription = false;
    }
    ngOnInit() {
        var ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            language: {
                searchPlaceholder: "Search"
            },
            drawCallback: function () {
                if (jQuery('#portflowDataTable tbody tr').length < 10) {
                    jQuery('#portflowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#portflowDataTable_next').removeClass('disabled');
                }
            },
            buttons: {
                buttons: [
                    { extend: 'csv', text: 'Export', className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                ]
            },
            "aoColumns": [
                { sWidth: '15%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '1%', "bSortable": false },
            ],
            columnDefs: [
                {
                    "targets": [2],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [6],
                    "visible": false,
                    "searchable": true
                },
                { "targets": [12], "visible": false },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, this.data.length / 2);
            }
        };
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that.search(this['value']).draw();
                    }
                });
            });
        });
        this.enableButtons();
    }
    showFlow(flowObj) {
        this.router.navigate(['/flows/details/' + flowObj.flowid]);
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    ngOnChanges(change) {
        if (typeof (change.data) !== 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
            }
        }
        if (typeof (change.textSearch) !== 'undefined' && change.textSearch.currentValue) {
            this.fulltextSearch(change.textSearch.currentValue);
        }
    }
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    fulltextSearch(value) {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    descrepancyString(row) {
        let text = [];
        if (row.hasOwnProperty('controller-flow')) {
            if (row['controller-flow']) {
                text.push("controller:true");
            }
            else {
                text.push("controller:false");
            }
        }
        else {
            text.push("controller:false");
        }
        if (row.hasOwnProperty('inventory-flow')) {
            if (row['inventory-flow']) {
                text.push("inventory:true");
            }
            else {
                text.push("inventory:false");
            }
        }
        else {
            text.push("inventory:false");
        }
        return text.join(", ");
    }
    enableButtons() {
        setTimeout(() => {
            this.datatableElement.dtInstance.then((dtInstance) => {
                var buttons = new jQuery.fn.dataTable.Buttons(dtInstance, {
                    buttons: [
                        { extend: 'csv', text: 'Export', className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                    ]
                }).container().appendTo($('#buttons'));
            });
        });
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], PortFlowsComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortFlowsComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortFlowsComponent.prototype, "textSearch", void 0);
PortFlowsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-port-flows',
        template: __webpack_require__(/*! ./port-flows.component.html */ "./src/app/modules/switches/port-flows/port-flows.component.html"),
        styles: [__webpack_require__(/*! ./port-flows.component.css */ "./src/app/modules/switches/port-flows/port-flows.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"], src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__["SwitchService"], src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]])
], PortFlowsComponent);



/***/ }),

/***/ "./src/app/modules/switches/port-graph/port-graph.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/modules/switches/port-graph/port-graph.component.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-wrapper {\r\n    border: 1px solid #ccc;\r\n    padding: 15px 15px 0;\r\n  }\r\n  \r\n  .modal-title {\r\n    width: calc(100% - 25px);\r\n    font-weight: bold;\r\n    padding: 10px 0;\r\n    font-size: 14px;\r\n    margin-top: 0px;\r\n  }\r\n  \r\n  .line-legend li:before {\r\n    height: 14px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0px !important;\r\n    width: 14px;\r\n    content: \"\";\r\n    background: #aad200;\r\n  }\r\n  \r\n  .line-legend li:first-child:before {\r\n    height: 14px;\r\n    left: 0;\r\n    position: absolute;\r\n    top: 0px !important;\r\n    width: 14px;\r\n    content: \"\";\r\n    background: #182488;\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWdyYXBoL3BvcnQtZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixvQkFBb0I7RUFDdEI7O0VBRUE7SUFDRSx3QkFBd0I7SUFDeEIsaUJBQWlCO0lBQ2pCLGVBQWU7SUFDZixlQUFlO0lBQ2YsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixPQUFPO0lBQ1Asa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsV0FBVztJQUNYLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixPQUFPO0lBQ1Asa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixXQUFXO0lBQ1gsV0FBVztJQUNYLG1CQUFtQjtFQUNyQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvcG9ydC1ncmFwaC9wb3J0LWdyYXBoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybS13cmFwcGVyIHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDE1cHggMDtcclxuICB9XHJcbiAgXHJcbiAgLm1vZGFsLXRpdGxlIHtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNXB4KTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgcGFkZGluZzogMTBweCAwO1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIH1cclxuICBcclxuICAubGluZS1sZWdlbmQgbGk6YmVmb3JlIHtcclxuICAgIGhlaWdodDogMTRweDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDBweCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDE0cHg7XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG4gICAgYmFja2dyb3VuZDogI2FhZDIwMDtcclxuICB9XHJcbiAgXHJcbiAgLmxpbmUtbGVnZW5kIGxpOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwcHggIWltcG9ydGFudDtcclxuICAgIHdpZHRoOiAxNHB4O1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGJhY2tncm91bmQ6ICMxODI0ODg7XHJcbiAgfSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/switches/port-graph/port-graph.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/modules/switches/port-graph/port-graph.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"filterForm\">\r\n  <!-- <h5 class='modal-title'>GRAPH</h5> -->\r\n    <div class=\"container-fluid graph_div topology-graph\">\r\n        <div class=\"row\">          \r\n          <div class=\"col-xs-8 col-md-8 \" id=\"stats_div\" style=\"border: 0px white; padding-top: 15px;\r\n              padding-bottom: 15px;\r\n              padding-left: 0;\r\n              padding-right: 0;\">\r\n            \r\n              <app-dygraph  (zoomChange)='zoomHandler($event)'  style=\"width: 750px;\"></app-dygraph>\r\n            \r\n          </div>\r\n          <div class=\"col-md-4 col-xs-4 filter\">\r\n            <div class=\"stats-graph row\" style=\"margin-top: 30px;\">\r\n              <ul class=\"line-legend col-lg-12\">\r\n                <li>Forward</li>\r\n                <li>Reverse</li>\r\n              </ul>\r\n            </div>\r\n            <div>\r\n              <div class=\"row form-group clearfix\">\r\n                <!-- <fieldset class=\"form-group clearfix\"> -->\r\n                <label class=\"col-xs-4 col-md-4 text-label\">Timezone:</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <select formControlName=\"timezone\" class=\"form-control\" name=\"timezone\" (change)=\"changeTimezone()\">\r\n                    <option value=\"UTC\">UTC</option>\r\n                    <option value=\"LOCAL\">My Timezone</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"row form-group clearfix\">\r\n                <label class=\"col-xs-4 col-md-4 text-label\">From:</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <input formControlName=\"fromDate\" type=\"text\" (change)=\"changeDate('fromDate',$event)\" datetime-picker placeholder=\"From\" class=\"form-control\">\r\n                </div>\r\n              </div>\r\n              <div class=\"row form-group clearfix\">\r\n                <label class=\"col-xs-4 col-md-4 text-label\">To:</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <input type=\"text\" formControlName=\"toDate\" (change)=\"changeDate('toDate',$event)\" datetime-picker placeholder=\"From\" class=\"form-control\">\r\n                </div>\r\n              </div>\r\n              <div id=\"DownsampleID\" class=\"row form-group clearfix\">\r\n                <label class=\"col-xs-4 col-md-4 text-label\">Downsample:</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <select formControlName=\"download_sample\" class=\"form-control\" (change)=\"callPortGraphAPI()\">\r\n                    <option value=\"30s\">30s</option>\r\n                    <option value=\"1m\">1m</option>\r\n                    <option value=\"5m\">5m</option>\r\n                    <option value=\"10m\">10m</option>\r\n                  </select>\r\n                  <span class=\"downsample-error-message pull-left\"></span>\r\n                </div>\r\n              </div>\r\n              <div id=\"autoreloadId\" class=\"row form-group clearfix\">\r\n                <label class=\"col-xs-4 col-md-4 text-label\">Autoreload(Sec):</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <input formControlName=\"auto_reload\" value=\"1\" type=\"checkbox\">\r\n                  <span [hidden]=\"!f.auto_reload.value\">\r\n                    <!-- <input formControlName=\"auto_reload_time\" type=\"text\" name=\"auto_reload_time\" (blur)=\"startAutoReload()\" style=\"width: 90%; position: relative; left: 11px; border-radius: 3px; top: -7px;\"> -->\r\n                    <select formControlName=\"auto_reload_time\" name=\"auto_reload_time\" (change)=\"startAutoReload()\" style=\"width: 90%; position: relative; left: 11px; border-radius: 3px; top: -7px;\">\r\n                        <option value=\"\">Please select a value</option>\r\n                        <option *ngFor=\"let option of getautoReloadValues\" value=\"{{option.value}}\">{{option.text}}</option>\r\n                     </select>\r\n                    <div class=\"invalid-feedback\" *ngIf=\"!f.auto_reload_time.valid && f.auto_reload_time.dirty\">\r\n                      <div *ngIf=\"f.auto_reload_time.errors.pattern\">Auto reload time should be number</div>\r\n                      <div *ngIf=\"f.auto_reload_time.errors.required\">Auto reload time required</div>\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              <div class=\"row form-group clearfix\" id=\"islMetric\">\r\n                <label class=\"col-xs-4 col-md-4 text-label\">Metric:</label>\r\n                <div class=\"col-xs-8 col-md-8\">\r\n                  <select formControlName=\"metric\" class=\"form-control\" (change)=\"callPortGraphAPI()\">\r\n                    <option *ngFor=\"let option of portMetrics\" value=\"{{option.value}}\">{{option.label}}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-xs-12 col-md-12 submit-btn\">\r\n                <div id=\"errorMesg\" class=\"error\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n</form>"

/***/ }),

/***/ "./src/app/modules/switches/port-graph/port-graph.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/modules/switches/port-graph/port-graph.component.ts ***!
  \*********************************************************************/
/*! exports provided: PortGraphComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortGraphComponent", function() { return PortGraphComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/dygraph.service */ "./src/app/common/services/dygraph.service.ts");
/* harmony import */ var src_app_common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_isl_data_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/services/isl-data.service */ "./src/app/common/services/isl-data.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let PortGraphComponent = class PortGraphComponent {
    constructor(maskPipe, formBuiler, toastr, dygraphService, loaderService, islDataService, commonService) {
        this.maskPipe = maskPipe;
        this.formBuiler = formBuiler;
        this.toastr = toastr;
        this.dygraphService = dygraphService;
        this.loaderService = loaderService;
        this.islDataService = islDataService;
        this.commonService = commonService;
        this.currentGraphData = {
            data: [],
            startDate: moment(new Date()).format("YYYY/MM/DD HH:mm:ss"),
            endDate: moment(new Date()).format("YYYY/MM/DD HH:mm:ss"),
            timezone: "LOCAL"
        };
        this.graphSubscriber = null;
        this.responseGraph = [];
        this.autoReloadTimerId = null;
        this.getautoReloadValues = this.commonService.getAutoreloadValues();
        this.portMetrics = [];
        this.hideToValue = new _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"]();
    }
    ngOnInit() {
        this.portDataObject = JSON.parse(localStorage.getItem('portDataObject'));
        this.portForm = this.formBuiler.group({
            portStatus: [this.portDataObject.status],
        });
        this.retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON'));
        this.port_src_switch = this.maskPipe.transform(this.retrievedSwitchObject.switch_id, 'legacy');
        let dateRange = this.getDateRange();
        this.filterForm = this.formBuiler.group({
            timezone: ["LOCAL"],
            fromDate: [dateRange.from],
            toDate: [dateRange.to],
            download_sample: ["30s"],
            graph: ["flow"],
            metric: ["bits"],
            direction: ["forward"],
            auto_reload: [""],
            auto_reload_time: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].compose([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("[0-9]*")])]
        });
        this.portMetrics = this.dygraphService.getPortMetricData();
        this.callPortGraphAPI();
    }
    getDateRange() {
        var date = new Date();
        var yesterday = new Date(date.getTime());
        yesterday.setDate(date.getDate() - 1);
        var fromStartDate = moment(yesterday).format("YYYY/MM/DD HH:mm:ss");
        var toEndDate = moment(date).format("YYYY/MM/DD HH:mm:ss");
        var utcStartDate = moment(yesterday).utc().format("YYYY/MM/DD HH:mm:ss");
        var utcToEndDate = moment(date).utc().format("YYYY/MM/DD HH:mm:ss");
        return { from: fromStartDate, to: toEndDate, utcStartDate: utcStartDate, utcToEndDate: utcToEndDate };
    }
    changeTimezone() {
        let formdata = this.filterForm.value;
        let timezone = formdata.timezone;
        let dateaRange = this.getDateRange();
        if (timezone == "UTC") {
            this.filterForm.controls['fromDate'].setValue(dateaRange.utcStartDate);
            this.filterForm.controls['toDate'].setValue(dateaRange.utcToEndDate);
        }
        else {
            this.filterForm.controls['fromDate'].setValue(dateaRange.from);
            this.filterForm.controls['toDate'].setValue(dateaRange.to);
        }
        this.callPortGraphAPI();
    }
    callPortGraphAPI() {
        let formdata = this.filterForm.value;
        let direction = formdata.direction;
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        let downsampling = formdata.download_sample;
        let metric = formdata.metric;
        let timezone = formdata.timezone;
        if (this.filterForm.controls["auto_reload"]) {
            formdata.toDate = new Date(new Date(formdata.toDate).getTime() + (autoReloadTime * 1000));
        }
        let convertedStartDate = moment(new Date(formdata.fromDate)).utc().format("YYYY-MM-DD-HH:mm:ss");
        let convertedEndDate = moment(new Date(formdata.toDate)).utc().format("YYYY-MM-DD-HH:mm:ss");
        let startDate = moment(new Date(formdata.fromDate));
        let endDate = moment(new Date(formdata.toDate));
        if (moment(new Date(formdata.fromDate)).isAfter(new Date(formdata.toDate))) {
            this.toastr.error("Start date can not be after End date", "Error");
            return;
        }
        if (moment(new Date(formdata.toDate)).isBefore(new Date(formdata.fromDate))) {
            this.toastr.error("To date should not be less than from date.", "Error");
            return;
        }
        if (formdata.timezone == "UTC") {
            convertedStartDate = moment(new Date(formdata.fromDate)).format("YYYY-MM-DD-HH:mm:ss");
            convertedEndDate = moment(new Date(formdata.toDate)).format("YYYY-MM-DD-HH:mm:ss");
        }
        this.graphSubscriber = this.dygraphService.
            getForwardGraphData(this.port_src_switch, this.portDataObject.port_number, '', '', downsampling, 'source', metric, convertedStartDate, convertedEndDate).subscribe((dataForward) => {
            this.loaderService.show();
            this.responseGraph = [];
            if (dataForward[0] !== undefined) {
                dataForward[0].tags.direction = "F";
                this.responseGraph.push(dataForward[0]);
            }
            if (dataForward[1] !== undefined) {
                dataForward[1].tags.direction = "R";
                this.responseGraph.push(dataForward[1]);
            }
            else {
                if (dataForward[0] !== undefined) {
                    dataForward[1] = { "tags": { "direction": "R" },
                        "metric": "",
                        "dps": {} };
                    this.responseGraph.push(dataForward[1]);
                }
            }
            this.loaderService.hide();
            this.currentGraphData.data = this.responseGraph;
            this.currentGraphData.timezone = timezone;
            this.currentGraphData.startDate = moment(new Date(formdata.fromDate));
            this.currentGraphData.endDate = moment(new Date(formdata.toDate));
            this.newMessageDetail();
        }, error => {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].graph_api_did_not_return, 'Error');
            this.loaderService.hide();
        });
    }
    startAutoReload() {
        let autoReloadTime = Number(this.filterForm.controls["auto_reload_time"].value);
        if (this.filterForm.controls["auto_reload"]) {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
            if (autoReloadTime) {
                this.autoReloadTimerId = setInterval(() => {
                    this.callPortGraphAPI();
                }, 1000 * autoReloadTime);
            }
        }
        else {
            if (this.autoReloadTimerId) {
                clearInterval(this.autoReloadTimerId);
            }
        }
    }
    newMessageDetail() {
        this.islDataService.changeMessage(this.currentGraphData);
    }
    changeDate(input, event) {
        this.filterForm.controls[input].setValue(event.target.value);
        setTimeout(() => {
            this.callPortGraphAPI();
        }, 0);
    }
    ngAfterViewInit() {
        this.filterForm.get("auto_reload").valueChanges.subscribe(value => {
            if (value) {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]*")]);
            }
            else {
                this.filterForm
                    .get("auto_reload_time")
                    .setValidators([_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].pattern("^[0-9]*")]);
                if (this.autoReloadTimerId) {
                    clearInterval(this.autoReloadTimerId);
                }
            }
            this.filterForm.get("auto_reload_time").setValue("");
            this.filterForm.get("auto_reload_time").updateValueAndValidity();
        });
        this.filterForm.get("auto_reload_time").valueChanges.subscribe(value => { });
        setTimeout(() => {
            jQuery('html, body').animate({ scrollTop: 0 }, 'fast');
        }, 1000);
    }
    get f() {
        return this.filterForm.controls;
    }
    zoomHandler(event) {
    }
    ngOnDestroy() {
        if (this.autoReloadTimerId) {
            clearInterval(this.autoReloadTimerId);
        }
        if (this.graphSubscriber) {
            this.graphSubscriber.unsubscribe();
            this.graphSubscriber = null;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Output"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_1__["EventEmitter"])
], PortGraphComponent.prototype, "hideToValue", void 0);
PortGraphComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-port-graph',
        template: __webpack_require__(/*! ./port-graph.component.html */ "./src/app/modules/switches/port-graph/port-graph.component.html"),
        styles: [__webpack_require__(/*! ./port-graph.component.css */ "./src/app/modules/switches/port-graph/port-graph.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_5__["SwitchidmaskPipe"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        src_app_common_services_dygraph_service__WEBPACK_IMPORTED_MODULE_4__["DygraphService"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        src_app_common_services_isl_data_service__WEBPACK_IMPORTED_MODULE_7__["IslDataService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
], PortGraphComponent);



/***/ }),

/***/ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.css":
/*!******************************************************************************************!*\
  !*** ./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.css ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dt-buttons {\r\n    float: right !important;\r\n}\r\ntable.dataTable tbody td {\r\n    padding: 10px 20px 10px 18px;\r\n}\r\ntable.dataTable tr th i.fa {\r\n    float: right;\r\n    font-size: 12px;\r\n}\r\ndiv.dt-buttons{\r\n    float:right;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWludmVudG9yeS1mbG93cy9wb3J0LWludmVudG9yeS1mbG93cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0FBQzNCO0FBQ0E7SUFDSSw0QkFBNEI7QUFDaEM7QUFFQTtJQUNJLFlBQVk7SUFDWixlQUFlO0FBQ25CO0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3N3aXRjaGVzL3BvcnQtaW52ZW50b3J5LWZsb3dzL3BvcnQtaW52ZW50b3J5LWZsb3dzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZHQtYnV0dG9ucyB7XHJcbiAgICBmbG9hdDogcmlnaHQgIWltcG9ydGFudDtcclxufVxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdGQge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4IDEwcHggMThweDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRyIHRoIGkuZmEge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG5kaXYuZHQtYnV0dG9uc3tcclxuICAgIGZsb2F0OnJpZ2h0O1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.html":
/*!*******************************************************************************************!*\
  !*** ./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.html ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n  <div class=\"dataTables_wrapper no-footer\" id=\"port-flow\">\r\n    \r\n  <table  id=\"port_inventory_flow_tbl\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr class=\"tableHeading\">\r\n        <th>\r\n          <span title=\"Customer Name\">Customer Name</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'customername')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"customername\" [hidden]=\"!customername\" />\r\n\r\n        </th>\r\n        <th>\r\n          <span title=\"Customer ID\">Customer ID</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'customerid')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"customerid\" [hidden]=\"!customerid\" />\r\n\r\n        </th>\r\n        <th>\r\n          <span title=\"Flow ID\">Flow ID</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'flowid')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"flowid\" [hidden]=\"!flowid\" />\r\n\r\n        </th>\r\n        <th>\r\n          <span title=\"BandWidth\">Bandwidth</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'bandwidth')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"bandwidth\" [hidden]=\"!bandwidth\" />\r\n        </th>\r\n      </tr>\r\n    </thead>\r\n    <tbody >\r\n      <tr   *ngFor=\"let row of data; let i = index\" (click)=\"showFlow(row)\" class=\"flowDataRow\">\r\n          <td class=\"divTableCell\" title=\"{{row['flow-id'] ? row['company-name'] : '-'}}\" >\r\n            {{row['company-name'] ? row['company-name'] : '-'}}\r\n          </td>\r\n          <td class=\"divTableCell\" title=\"{{row['flow-id'] ? row['customer-uuid'] : '-'}}\" >\r\n            {{row['customer-uuid'] ? row['customer-uuid'] : '-'}}\r\n          </td>\r\n          <td class=\"divTableCell\" title=\"{{row['flow-id'] ? row['flow-id'] : ''}}\" >\r\n            {{row['flow-id'] ? row['flow-id'] : '-'}}\r\n          </td>\r\n          <td class=\"divTableCell\" title=\"{{row['bandwidth'] ? row['bandwidth'] : ''}}\" >\r\n            {{row['bandwidth'] ? row['bandwidth'] : '-'}}\r\n          </td>\r\n         \r\n      </tr>\r\n  </tbody>\r\n  </table>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.ts ***!
  \*****************************************************************************************/
/*! exports provided: PortInventoryFlowsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortInventoryFlowsComponent", function() { return PortInventoryFlowsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");








let PortInventoryFlowsComponent = class PortInventoryFlowsComponent {
    constructor(renderer, loaderService, switchService, commonService, router) {
        this.renderer = renderer;
        this.loaderService = loaderService;
        this.switchService = switchService;
        this.commonService = commonService;
        this.router = router;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.wrapperHide = false;
        this.customername = false;
        this.customerid = false;
        this.flowid = false;
        this.bandwidth = false;
    }
    ngOnInit() {
        var ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            language: {
                searchPlaceholder: "Search"
            },
            buttons: {
                buttons: [
                    { extend: 'csv', text: 'Export', className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                ]
            }, drawCallback: function () {
                if (jQuery('#port_inventory_flow_tbl tbody tr').length < 10) {
                    jQuery('#port_inventory_flow_tbl_next').addClass('disabled');
                }
                else {
                    jQuery('#port_inventory_flow_tbl_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '15%' },
                { sWidth: '15%', "sType": "name", "bSortable": true },
                { sWidth: '15%' },
                { sWidth: '15%' },
            ],
            columnDefs: [],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, this.data.length / 2);
            }
        };
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that.search(this['value']).draw();
                    }
                });
            });
        });
        this.enableButtons();
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    ngOnChanges(change) {
        if (typeof (change.data) !== 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
            }
        }
        if (typeof (change.textSearch) !== 'undefined' && change.textSearch.currentValue) {
            this.fulltextSearch(change.textSearch.currentValue);
        }
    }
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    fulltextSearch(value) {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    showFlow(flowObj) {
        this.router.navigate(['/flows/details/' + flowObj['flow-id']]);
    }
    descrepancyString(row) {
        let text = [];
        if (row.hasOwnProperty('controller-flow')) {
            if (row['controller-flow']) {
                text.push("controller:true");
            }
            else {
                text.push("controller:false");
            }
        }
        else {
            text.push("controller:false");
        }
        if (row.hasOwnProperty('inventory-flow')) {
            if (row['inventory-flow']) {
                text.push("inventory:true");
            }
            else {
                text.push("inventory:false");
            }
        }
        else {
            text.push("inventory:false");
        }
        return text.join(", ");
    }
    enableButtons() {
        setTimeout(() => {
            this.datatableElement.dtInstance.then((dtInstance) => {
                var buttons = new jQuery.fn.dataTable.Buttons(dtInstance, {
                    buttons: [
                        { extend: 'csv', text: 'Export', className: 'btn btn-dark', exportOptions: { columns: ':visible' } }
                    ]
                }).container().appendTo($('#buttons'));
            });
        });
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], PortInventoryFlowsComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortInventoryFlowsComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortInventoryFlowsComponent.prototype, "textSearch", void 0);
PortInventoryFlowsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-port-inventory-flows',
        template: __webpack_require__(/*! ./port-inventory-flows.component.html */ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.html"),
        styles: [__webpack_require__(/*! ./port-inventory-flows.component.css */ "./src/app/modules/switches/port-inventory-flows/port-inventory-flows.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"], src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_5__["SwitchService"], src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"]])
], PortInventoryFlowsComponent);



/***/ }),

/***/ "./src/app/modules/switches/port-list/port-list.component.css":
/*!********************************************************************!*\
  !*** ./src/app/modules/switches/port-list/port-list.component.css ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#portsTable {\r\n    width: 100%;\r\n}\r\n\r\n.custom-margin-datatable{\r\n    margin: 45px 0px;\r\n}\r\n\r\n#portsTable .divTableCell{\r\n\tpadding: 0;\r\n}\r\n\r\n#portsTable .divTableCell p{\r\n\tpadding: 15px 8px;\r\n    text-align: center;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n}\r\n\r\n#portsTable .down-status .divTableCell:first-child{\r\n\tborder-left: 4px solid red;\r\n}\r\n\r\n#portsTable .up-status .divTableCell:first-child{\r\n\tborder-left: 4px solid #182488;\r\n}\r\n\r\n#portsTable th{\r\n\t    padding: 15px 0px 10px 0px;\r\n\t    text-align:center;\r\n}\r\n\r\n#portsTable .subPortHeadTable{\r\n\tpadding:0;\r\n}\r\n\r\n#portsTable .subPortHeadTable span{\r\n\twidth: 50%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: inline-block;\r\n    padding: 0;\r\n    text-align: center;\r\n    font-weight: 400;\r\n    font-size: 11px;\r\n}\r\n\r\ndiv#portsTable_info {\r\n    display: none;\r\n}\r\n\r\n#portsTable .subPortTable{\r\n\tpadding:0;\r\n}\r\n\r\n#portsTable .subPortTable span{\r\n\twidth: 50%;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    display: inline-block;\r\n    padding: 15px 10px;\r\n}\r\n\r\n#portsTable .subPortTable span:last-child{\r\n    border-left:1px solid #dddddd;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9wb3J0LWxpc3QvcG9ydC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBQ0E7Q0FDQyxVQUFVO0FBQ1g7O0FBRUE7Q0FDQyxpQkFBaUI7SUFDZCxrQkFBa0I7SUFDbEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixnQkFBZ0I7QUFDcEI7O0FBRUE7Q0FDQywwQkFBMEI7QUFDM0I7O0FBRUE7Q0FDQyw4QkFBOEI7QUFDL0I7O0FBRUE7S0FDSywwQkFBMEI7S0FDMUIsaUJBQWlCO0FBQ3RCOztBQUNBO0NBQ0MsU0FBUztBQUNWOztBQUNBO0NBQ0MsVUFBVTtJQUNQLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLFVBQVU7SUFDVixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBQ0E7SUFDSSxhQUFhO0FBQ2pCOztBQUNBO0NBQ0MsU0FBUztBQUNWOztBQUNBO0NBQ0MsVUFBVTtJQUNQLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLGtCQUFrQjtBQUN0Qjs7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGlDQUFpQztJQUNqQyx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtHQUNHLDZCQUE2QjtBQUNoQzs7QUFFQTtRQUNRLDZCQUE2QjtBQUNyQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvcG9ydC1saXN0L3BvcnQtbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI3BvcnRzVGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jdXN0b20tbWFyZ2luLWRhdGF0YWJsZXtcclxuICAgIG1hcmdpbjogNDVweCAwcHg7XHJcbn1cclxuI3BvcnRzVGFibGUgLmRpdlRhYmxlQ2VsbHtcclxuXHRwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4jcG9ydHNUYWJsZSAuZGl2VGFibGVDZWxsIHB7XHJcblx0cGFkZGluZzogMTVweCA4cHg7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4jcG9ydHNUYWJsZSAuZG93bi1zdGF0dXMgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZHtcclxuXHRib3JkZXItbGVmdDogNHB4IHNvbGlkIHJlZDtcclxufVxyXG5cclxuI3BvcnRzVGFibGUgLnVwLXN0YXR1cyAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxke1xyXG5cdGJvcmRlci1sZWZ0OiA0cHggc29saWQgIzE4MjQ4ODtcclxufVxyXG5cclxuI3BvcnRzVGFibGUgdGh7XHJcblx0ICAgIHBhZGRpbmc6IDE1cHggMHB4IDEwcHggMHB4O1xyXG5cdCAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxufVxyXG4jcG9ydHNUYWJsZSAuc3ViUG9ydEhlYWRUYWJsZXtcclxuXHRwYWRkaW5nOjA7XHJcbn0gXHJcbiNwb3J0c1RhYmxlIC5zdWJQb3J0SGVhZFRhYmxlIHNwYW57XHJcblx0d2lkdGg6IDUwJTtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG59XHJcbmRpdiNwb3J0c1RhYmxlX2luZm8ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4jcG9ydHNUYWJsZSAuc3ViUG9ydFRhYmxle1xyXG5cdHBhZGRpbmc6MDtcclxufSBcclxuI3BvcnRzVGFibGUgLnN1YlBvcnRUYWJsZSBzcGFue1xyXG5cdHdpZHRoOiA1MCU7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBwYWRkaW5nOiAxNXB4IDEwcHg7XHJcbn1cclxuI3BvcnRzVGFibGUgLnN1YlBvcnRUYWJsZSBzcGFuOmxhc3QtY2hpbGR7XHJcbiAgICBib3JkZXItbGVmdDoxcHggc29saWQgI2RkZGRkZDtcclxufVxyXG5cclxuLmRhdGFUYWJsZXNfd3JhcHBlciAuZGF0YVRhYmxlc19maWx0ZXIgaW5wdXQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FhYSAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjQwcHggIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQob2RkKXtcclxuICAgYmFja2dyb3VuZDojZjFmMWYxICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRib2R5IHRyOm50aC1jaGlsZChldmVuKXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiNmZmZmZmYgIWltcG9ydGFudDtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/modules/switches/port-list/port-list.component.html":
/*!*********************************************************************!*\
  !*** ./src/app/modules/switches/port-list/port-list.component.html ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"custom-search-input\">\r\n  <div class=\"port-table-div\">\r\n    <div id=\"port_loading\" class=\"bg_load\" style=\"display: none;\">\r\n      <div class=\"loader\"></div>\r\n      <span class=\"load-text\">Loading Port Detail\r\n        <span class=\"loader__dot\">.</span>\r\n        <span class=\"loader__dot\">.</span>\r\n        <span class=\"loader__dot\">.</span>\r\n      </span>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n          <div class=\"row\">\r\n              <div class=\"col-sm-4\">\r\n                  <div class=\"form-group input-group-sm\">\r\n                       <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                   </div>\r\n              </div>              \r\n           </div>           \r\n       </div>\r\n      <div class=\"clear clearfix\"></div>\r\n    </div>\r\n    <div id=\"portsTable_wrapper\" class=\"dataTables_wrapper no-footer\">\r\n      <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"portsTable\" class=\"display no-footer dataTable custom-margin-datatable\" cellspacing=\"0\"\r\n        role=\"grid\" aria-describedby=\"portsTable_info\">\r\n        <thead>\r\n          <tr class=\"tableHeading\">\r\n            <th class=\"sorting\">\r\n              <span title=\"Port Number\">Port Number</span>\r\n            </th>\r\n            <th>\r\n              <span title=\"UUID\">UUID</span>\r\n            </th>\r\n           \r\n            <th>\r\n              <span title=\"Assignment\">Assignment</span>\r\n            </th>\r\n            <th>\r\n              <span title=\"Sum(Bandwidth) Of Flow(Mbps)\">Sum(Bandwidth) Of Flow(Mbps)</span>\r\n            </th>\r\n            <th>\r\n              <span title=\"Number Of Flow\">Number Of Flow</span>\r\n            </th>\r\n            \r\n            <th class=\"sorting\">\r\n              <span title=\"Mbps\" style=\"text-align: center;\">Mbps</span>\r\n              <div class=\"subPortHeadTable\">\r\n                <span>INPUT</span>\r\n                <span>OUTPUT</span>\r\n              </div>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Packets/Sec\" style=\"text-align: center;\">Packets/Sec</span>\r\n              <div class=\"subPortHeadTable\">\r\n                <span>INPUT</span>\r\n                <span>OUTPUT</span>\r\n              </div>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Drops\" style=\"text-align: center;\">Drops</span>\r\n              <div class=\"subPortHeadTable\">\r\n                <span>INPUT</span>\r\n                <span>OUTPUT</span>\r\n              </div>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Errors\" style=\"text-align: center;\">Errors</span>\r\n              <div class=\"subPortHeadTable\">\r\n                <span>INPUT</span>\r\n                <span>OUTPUT</span>\r\n              </div>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Collisions\">Collisions</span>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Frame Errors\">Frame Errors</span>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"Overruns\">Overruns</span>\r\n            </th>\r\n            <th class=\"sorting\">\r\n              <span title=\"CRC Errors\">CRC Errors</span>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody id=\"flow-details\">\r\n          <tr rel=\"1\" id=\"div_18\" class=\"flowDataRow odd\" role=\"row\" *ngFor=\"let item of switchPortDataSet; let i = index\" [ngClass]=\"{'down-status': item.status == 'DOWN' , 'up-status': item.status == 'UP'}\"\r\n            (click)=\"showPortDetail(item)\">\r\n            <td class=\"divTableCell\" title=\"{{item.port_number}}\">\r\n              <p>{{item.port_number}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item['unique-id']}}\">\r\n              <p>{{item['unique-id'] || '-'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item['assignmenttype'] || '-'}}\">\r\n              <p>{{item['assignmenttype'] || '-'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{(portFlowData && portFlowData.hasOwnProperty(item.port_number) && (portFlowData[item.port_number].sumflowbandwidth || portFlowData[item.port_number].sumflowbandwidth == 0)) ? portFlowData[item.port_number].sumflowbandwidth :'loading..'}}\">\r\n              <p>{{(portFlowData && portFlowData.hasOwnProperty(item.port_number) && (portFlowData[item.port_number].sumflowbandwidth || portFlowData[item.port_number].sumflowbandwidth == 0)) ? portFlowData[item.port_number].sumflowbandwidth :'loading..'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{(portFlowData && portFlowData.hasOwnProperty(item.port_number) && (portFlowData[item.port_number].noofflows || portFlowData[item.port_number].noofflows == 0)) ? portFlowData[item.port_number].noofflows :'loading..'}}\">\r\n              <p>{{(portFlowData && portFlowData.hasOwnProperty(item.port_number) && (portFlowData[item.port_number].noofflows || portFlowData[item.port_number].noofflows == 0)) ? portFlowData[item.port_number].noofflows :'loading..'}}</p>\r\n            </td>\r\n           \r\n            <td class=\"divTableCell subPortTable\" title=\"\">\r\n              <span title=\"{{item.stats['rx-bytes'] || '-'}}\">{{item.stats['rx-bytes'] || \"-\"}}</span>\r\n              <span title=\"{{item.stats['tx-bytes'] || '-'}}\">{{item.stats['tx-bytes'] || \"-\"}}</span>\r\n            </td>\r\n            <td class=\"divTableCell subPortTable\" title=\"\">\r\n              <span title=\"{{item.stats['rx-packets'] || '-'}}\">{{item.stats['rx-packets'] || \"-\"}}</span>\r\n              <span title=\"{{item.stats['tx-packets'] || '-'}}\">{{item.stats['tx-packets'] || '-'}}</span>\r\n            </td>\r\n            <td class=\"divTableCell subPortTable\" title=\"\">\r\n              <span title=\"{{item.stats['rx-dropped'] || '-'}}\">{{item.stats['rx-dropped'] || '-'}}</span>\r\n              <span title=\"{{item.stats['tx-dropped'] || '-'}}\">{{item.stats['tx-dropped'] || '-'}}</span>\r\n            </td>\r\n            <td class=\"divTableCell subPortTable\" title=\"\">\r\n              <span title=\"{{item.stats['rx-errors'] || '-'}}\">{{item.stats['rx-errors'] || '-'}}</span>\r\n              <span title=\"{{item.stats['tx-errors'] || '-'}}\">{{item.stats['tx-errors'] || '-'}}</span>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item.stats[collisions] || '-'}}\">\r\n              <p>{{item.stats['collisions'] || '-'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item.stats[rx-frame-error] || '-'}}\">\r\n              <p>{{item.stats['rx-frame-error'] || '-'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item.stats[rx-over-error] || '-'}}\">\r\n              <p>{{item.stats['rx-over-error'] || '-'}}</p>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{item.stats[rx-crc-error] || '-'}}\">\r\n              <p>{{item.stats['rx-crc-error'] || '-'}}</p>\r\n            </td>\r\n          </tr>\r\n\r\n        </tbody>\r\n      </table>\r\n\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/switches/port-list/port-list.component.ts":
/*!*******************************************************************!*\
  !*** ./src/app/modules/switches/port-list/port-list.component.ts ***!
  \*******************************************************************/
/*! exports provided: PortListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PortListComponent", function() { return PortListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");











let PortListComponent = class PortListComponent {
    constructor(switchService, toastr, maskPipe, router, loaderService, titleService, commonService) {
        this.switchService = switchService;
        this.toastr = toastr;
        this.maskPipe = maskPipe;
        this.router = router;
        this.loaderService = loaderService;
        this.titleService = titleService;
        this.commonService = commonService;
        this.switch = null;
        this.loadinterval = false;
        this.isLoaderActive = false;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_7__["Subject"]();
        this.portFlowData = {};
        this.portListSubscriber = null;
        this.portFlowSubscription = [];
        this.loadPorts = false;
        this.switchFilterFlag = localStorage.getItem('switchFilterFlag') || 'controller';
        this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
    }
    ngOnInit() {
        let ref = this;
        this.switch_id = this.switch;
        this.dtOptions = {
            paging: false,
            retrieve: true,
            autoWidth: false,
            colResize: false,
            dom: 'tpli',
            initComplete: function (settings, json) {
                if (localStorage.getItem('portLoaderEnabled')) {
                    setTimeout(() => { ref.loaderService.hide(); }, 2000);
                    localStorage.removeItem('portLoaderEnabled');
                }
            },
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            "aoColumns": [
                { sWidth: '5%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '13%' },
                { sWidth: '13%' },
                { sWidth: '13%' },
                { sWidth: '13%' },
                { sWidth: '5%' },
                { sWidth: '5%' },
                { sWidth: '5%' },
                { sWidth: '8%' }
            ],
            language: {
                searchPlaceholder: "Search"
            },
            columnDefs: [
                { targets: [1], visible: this.hasStoreSetting },
            ]
        };
        this.portListData();
        this.getSwitchPortList();
    }
    fulltextSearch(e) {
        var value = e.target.value;
        this.dtElement.dtInstance.then((dtInstance) => {
            if (this.hasStoreSetting) {
                dtInstance.columns([1]).visible(true);
            }
            else {
                dtInstance.columns([1]).visible(false);
            }
            dtInstance.search(value)
                .draw();
        });
    }
    showPortDetail(item) {
        var portDataObject = item;
        localStorage.setItem('portDataObject', JSON.stringify(portDataObject));
        this.currentActivatedRoute = 'port-details';
        this.router.navigate(['/switches/details/' + this.switch_id + '/port/' + item.port_number]);
    }
    getSwitchPortList() {
        this.portListTimerId = setInterval(() => {
            if (this.loadinterval) {
                this.portListData();
            }
        }, 30000);
    }
    portListData() {
        if (this.loadPorts) {
            return;
        }
        if (localStorage.getItem('portLoaderEnabled')) {
            this.loaderService.show("Loading Ports");
        }
        this.loadPorts = true;
        this.portListSubscriber = this.switchService.getSwitchPortsStats(this.maskPipe.transform(this.switch_id, 'legacy')).subscribe((data) => {
            this.rerender();
            this.ngAfterViewInit();
            this.loadPorts = false;
            localStorage.setItem('switchPortDetail', JSON.stringify(data));
            this.switchPortDataSet = data;
            for (let i = 0; i < this.switchPortDataSet.length; i++) {
                if (this.switchPortDataSet[i].port_number === '' || this.switchPortDataSet[i].port_number === undefined) {
                    this.switchPortDataSet[i].port_number = '-';
                }
                if (this.switchPortDataSet[i].interfacetype === '' || this.switchPortDataSet[i].interfacetype === undefined) {
                    this.switchPortDataSet[i].interfacetype = '-';
                }
                if (typeof (this.switchPortDataSet[i].stats) !== 'undefined') {
                    if (this.switchPortDataSet[i].stats['tx-bytes'] === '' || this.switchPortDataSet[i].stats['tx-bytes'] === undefined) {
                        this.switchPortDataSet[i].stats['tx-bytes'] = '-';
                    }
                    else {
                        this.switchPortDataSet[i].stats['tx-bytes'] = this.commonService.convertBytesToMbps(this.switchPortDataSet[i].stats['tx-bytes']);
                        ;
                    }
                    if (this.switchPortDataSet[i].stats['rx-bytes'] === '' || this.switchPortDataSet[i].stats['rx-bytes'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-bytes'] = '-';
                    }
                    else {
                        this.switchPortDataSet[i].stats['rx-bytes'] = this.commonService.convertBytesToMbps(this.switchPortDataSet[i].stats['rx-bytes']);
                    }
                    if (this.switchPortDataSet[i].stats['tx-packets'] === '' || this.switchPortDataSet[i].stats['tx-packets'] === undefined) {
                        this.switchPortDataSet[i].stats['tx-packets'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-packets'] === '' || this.switchPortDataSet[i].stats['rx-packets'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-packets'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['tx-dropped'] === '' || this.switchPortDataSet[i].stats['tx-dropped'] === undefined) {
                        this.switchPortDataSet[i].stats['tx-dropped'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-dropped'] === '' || this.switchPortDataSet[i].stats['rx-dropped'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-dropped'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['tx-errors'] === '' || this.switchPortDataSet[i].stats['tx-errors'] === undefined) {
                        this.switchPortDataSet[i].stats['tx-errors'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-errors'] === '' || this.switchPortDataSet[i].stats['rx-errors'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-errors'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['collisions'] === '' || this.switchPortDataSet[i].stats['collisions'] === undefined) {
                        this.switchPortDataSet[i].stats['collisions'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-frame-error'] === '' || this.switchPortDataSet[i].stats['rx-frame-error'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-frame-error'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-over-error'] === '' || this.switchPortDataSet[i].stats['rx-over-error'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-over-error'] = '-';
                    }
                    if (this.switchPortDataSet[i].stats['rx-crc-error'] === '' || this.switchPortDataSet[i].stats['rx-crc-error'] === undefined) {
                        this.switchPortDataSet[i].stats['rx-crc-error'] = '-';
                    }
                }
                else {
                    this.switchPortDataSet[i]['stats'] = {};
                }
                this.fetchPortFlowData(this.switch_id, this.switchPortDataSet[i].port_number);
            }
        }, error => {
            //this.toastr.error("No Switch Port data",'Error');
        });
    }
    fetchPortFlowData(switchId, portnumber) {
        var swithDetail = localStorage.getItem('switchDetailsJSON') || null;
        var filter = this.switchFilterFlag == 'inventory';
        if (switchId && portnumber != '-') {
            var subscriptionPortFlows = this.switchService.getSwitchFlows(switchId, filter, portnumber).subscribe(data => {
                let flowsData = data;
                this.portFlowData[portnumber] = {};
                this.portFlowData[portnumber].sumflowbandwidth = 0;
                this.portFlowData[portnumber].noofflows = 0;
                if (flowsData && flowsData.length) {
                    for (let flow of flowsData) {
                        this.portFlowData[portnumber].sumflowbandwidth = this.portFlowData[portnumber].sumflowbandwidth + (flow.maximum_bandwidth / 1000);
                    }
                    this.portFlowData[portnumber].noofflows = flowsData.length;
                    if (this.portFlowData[portnumber].sumflowbandwidth) {
                        this.portFlowData[portnumber].sumflowbandwidth = this.portFlowData[portnumber].sumflowbandwidth.toFixed(3);
                    }
                }
            }, error => {
                this.portFlowData[portnumber] = {};
                this.portFlowData[portnumber].sumflowbandwidth = 0;
                this.portFlowData[portnumber].noofflows = 0;
            });
            this.portFlowSubscription.push(subscriptionPortFlows);
        }
    }
    ngAfterViewInit() {
        try {
            this.dtTrigger.next();
        }
        catch (err) {
        }
    }
    ngOnDestroy() {
        // Unsubscribe the event
        this.dtTrigger.unsubscribe();
        clearInterval(this.portListTimerId);
        if (this.portListSubscriber) {
            this.portListSubscriber.unsubscribe();
            this.portListSubscriber = null;
        }
        if (this.portFlowSubscription && this.portFlowSubscription.length) {
            this.portFlowSubscription.forEach((subscription) => subscription.unsubscribe());
            this.portFlowSubscription = [];
        }
        this.loadPorts = false;
    }
    rerender() {
        try {
            this.dtElement.dtInstance.then((dtInstance) => {
                // Destroy the table first
                try {
                    dtInstance.destroy();
                    this.dtTrigger.next();
                }
                catch (err) { }
            });
        }
        catch (err) { }
        this.initiateInterval();
    }
    initiateInterval() {
        var interval = setInterval(() => {
            this.dtElement.dtInstance.then((dtInstance) => {
                if (this.hasStoreSetting) {
                    dtInstance.columns([1]).visible(true);
                }
                else {
                    dtInstance.columns([1]).visible(false);
                }
                clearInterval(interval);
            });
        }, 1000);
    }
    ngOnChanges(change) {
        if (change.loader) {
            if (change.loadinterval.currentValue) {
                this.loadinterval = change.loadinterval.currentValue;
            }
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_6__["DataTableDirective"])
], PortListComponent.prototype, "dtElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortListComponent.prototype, "switch", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], PortListComponent.prototype, "loadinterval", void 0);
PortListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-port-list',
        template: __webpack_require__(/*! ./port-list.component.html */ "./src/app/modules/switches/port-list/port-list.component.html"),
        styles: [__webpack_require__(/*! ./port-list.component.css */ "./src/app/modules/switches/port-list/port-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_3__["SwitchidmaskPipe"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["Title"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_10__["CommonService"]])
], PortListComponent);



/***/ }),

/***/ "./src/app/modules/switches/rule-details/rule-details.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/switches/rule-details/rule-details.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".clip-board-wrapper{\r\n    position: relative;\r\n}\r\n\r\n.clip-board-button{\r\n    position: absolute;\r\n    background: #9d9191cf;\r\n    outline: none;\r\n    color: #fff;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    display: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9ydWxlLWRldGFpbHMvcnVsZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIscUJBQXFCO0lBQ3JCLGFBQWE7SUFDYixXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9ydWxlLWRldGFpbHMvcnVsZS1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2xpcC1ib2FyZC13cmFwcGVye1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uY2xpcC1ib2FyZC1idXR0b257XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWQ5MTkxY2Y7XHJcbiAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/switches/rule-details/rule-details.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/rule-details/rule-details.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row switch_rules\" *ngIf=\"commonService.hasPermission('sw_permission_rules')\">\r\n    <div class=\"col-lg-12 text-right\" style=\"padding-bottom: 10px;margin-top:-20px; margin-bottom: 10px;\">\r\n      <a class=\"cursor-pointer\" style=\"font-size:16px;\" id=\"switch_rules_btn\" (click)=\"switchRules()\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n    </div>\r\n    <div id=\"switch_rules_loader\" class=\"bg-data-loader\" style=\"bottom:1px;display:none;\">\r\n      <div class=\"loader\"></div>\r\n    </div>\r\n    <div *ngIf=\"loading\" class=\"component-loader\"></div>\r\n    <div class=\" col-lg-12\" [hidden]=\"showRulesJSON\">\r\n      <pre [contextMenu]=\"switchRulesVal\" class=\"code\"  style=\"height: 500px;\">{{switchedRules | json}}</pre>\r\n    </div>\r\n</div>\r\n\r\n<context-menu #switchRulesVal>\r\n  <ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'switchRulesVal');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n"

/***/ }),

/***/ "./src/app/modules/switches/rule-details/rule-details.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/switches/rule-details/rule-details.component.ts ***!
  \*************************************************************************/
/*! exports provided: RuleDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RuleDetailsComponent", function() { return RuleDetailsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let RuleDetailsComponent = class RuleDetailsComponent {
    constructor(switchService, toastr, loaderService, clipboardService, router, commonService) {
        this.switchService = switchService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.clipboardService = clipboardService;
        this.router = router;
        this.commonService = commonService;
        this.showRulesJSON = true;
        this.loading = false;
        this.clipBoardItems = {
            switchRulesVal: ""
        };
        if (!this.commonService.hasPermission('menu_switches')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        let retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON'));
        this.switch_id = retrievedSwitchObject.switch_id;
        this.switchRules();
    }
    switchRules() {
        this.loading = true;
        this.switchService.getSwitchRulesList(this.switch_id).subscribe(data => {
            this.switchedRules = this.commonService.convertNumberToString(data);
            this.clipBoardItems.switchRulesVal = this.switchedRules;
            this.showRulesJSON = false;
            this.loading = false;
        }, error => {
            this.loading = false;
            this.toastr.error(error["error-auxiliary-message"], "Error!");
        });
    }
    showMenu(e) {
        e.preventDefault();
        $('.clip-board-button').hide();
        $('.clip-board-button').css({
            top: e.pageY + 'px',
            left: (e.pageX - 220) + 'px',
            "z-index": 2,
        }).toggle();
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    copyToClipHtml(event, copyHtmlItem) {
        this.clipboardService.copyFromContent(jQuery('.code').text());
    }
};
RuleDetailsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-rule-details',
        template: __webpack_require__(/*! ./rule-details.component.html */ "./src/app/modules/switches/rule-details/rule-details.component.html"),
        styles: [__webpack_require__(/*! ./rule-details.component.css */ "./src/app/modules/switches/rule-details/rule-details.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_4__["ClipboardService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
], RuleDetailsComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-datatable/switch-datatable.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/modules/switches/switch-datatable/switch-datatable.component.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n.dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state, #portdetails_div .rep_div.down-state {  \r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state:before, #portdetails_div .rep_div.down-state:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 4px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n}\r\n\r\n.divTableBody.up-state .divTableCell:first-child {\r\n    border-left: 3px solid #19b365;\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    background: #f00;   \r\n}\r\n\r\n.tab-content table.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    display: none;\r\n}\r\n\r\n#portdetails_div .rep_div.up-state, #portdetails_div .rep_div.down-state {  \r\n    position: relative;\r\n    cursor: pointer;\r\n}\r\n\r\n#portdetails_div .rep_div.down-state:before {\r\n    background: #f00;\r\n}\r\n\r\n.divTableBody.down-state .divTableCell:first-child {\r\n    border-left: 3px solid #f00;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9zd2l0Y2gtZGF0YXRhYmxlL3N3aXRjaC1kYXRhdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0E7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxpQ0FBaUM7SUFDakMsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7O0FBRUE7R0FDRyw2QkFBNkI7QUFDaEM7O0FBRUE7UUFDUSw2QkFBNkI7QUFDckM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLDJCQUEyQjtBQUMvQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoLWRhdGF0YWJsZS9zd2l0Y2gtZGF0YXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmRhdGFUYWJsZSB0Zm9vdCB7XHJcbiAgICBkaXNwbGF5OiB0YWJsZS1oZWFkZXItZ3JvdXA7XHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSBpLmZhe1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOjEycHg7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LnVwLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICMxOWIzNjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMTBweDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSAuZmxvd0RhdGFSb3cuZG93bi1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYjY0NTQ1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRoZWFkIHRoIHNwYW4ge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNXB4KTtcclxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRkIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCAxMHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDE4cHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgXHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0Ym9keSB0ciB0ZDpmaXJzdC1jaGlsZCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmRhdGFUYWJsZXNfd3JhcHBlciAuZGF0YVRhYmxlc19maWx0ZXIgaW5wdXQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FhYSAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjQwcHggIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQob2RkKXtcclxuICAgYmFja2dyb3VuZDojZjFmMWYxICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRib2R5IHRyOm50aC1jaGlsZChldmVuKXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiNmZmZmZmYgIWltcG9ydGFudDtcclxufVxyXG5cclxuI3BvcnRkZXRhaWxzX2RpdiAucmVwX2Rpdi51cC1zdGF0ZSwgI3BvcnRkZXRhaWxzX2RpdiAucmVwX2Rpdi5kb3duLXN0YXRlIHsgIFxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4jcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LnVwLXN0YXRlOmJlZm9yZSwgI3BvcnRkZXRhaWxzX2RpdiAucmVwX2Rpdi5kb3duLXN0YXRlOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTliMzY1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDRweDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLmRpdlRhYmxlQm9keS51cC1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgIzE5YjM2NTtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy5kb3duLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6ICNmMDA7ICAgXHJcbn1cclxuXHJcbi50YWItY29udGVudCB0YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuI3BvcnRkZXRhaWxzX2RpdiAucmVwX2Rpdi51cC1zdGF0ZSwgI3BvcnRkZXRhaWxzX2RpdiAucmVwX2Rpdi5kb3duLXN0YXRlIHsgIFxyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4jcG9ydGRldGFpbHNfZGl2IC5yZXBfZGl2LmRvd24tc3RhdGU6YmVmb3JlIHtcclxuICAgIGJhY2tncm91bmQ6ICNmMDA7XHJcbn1cclxuXHJcbi5kaXZUYWJsZUJvZHkuZG93bi1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkIHtcclxuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2YwMDtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/modules/switches/switch-datatable/switch-datatable.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/modules/switches/switch-datatable/switch-datatable.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n  <table id=\"switchDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr>\r\n        <th class=\"\">\r\n          <span  title=\"Switch ID\">Switch ID</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'switch_id')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"switch_id\" [hidden]=\"!switch_id\" />\r\n        </th>\r\n        <th class=\"\">\r\n            <span title=\"Name\">Name</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'name')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"name\" [hidden]=\"!name\" />\r\n        </th>\r\n        <th class=\"\">\r\n            <span title=\"Name\">Address</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'address')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"address\" [hidden]=\"!address\" />\r\n        \r\n        </th>\r\n        <th class=\"\">\r\n            <span title=\"Name\">Hostname</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'hostname')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"hostname\" [hidden]=\"!hostname\" />\r\n        \r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Pop Location\">Pop Location</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'poplocation')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"poplocation\" [hidden]=\"!poplocation\" />\r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Sum(Bandwidth) of Flows(Mbps)\">Sum(Bandwidth) of Flows(Mbps)</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'sumofflows')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"sumofflows\" [hidden]=\"!sumofflows\" />\r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Number of Flows\">No Of Flows</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'noofflows')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"noofflows\" [hidden]=\"!noofflows\" />\r\n        </th>\r\n        <th class=\"\">\r\n            <span title=\"Name\">Description</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'description')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"description\" [hidden]=\"!description\" />\r\n        </th>\r\n        <th class=\"\">\r\n            <span title=\"Name\">State</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'state')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"state\" [hidden]=\"!state\" />\r\n        </th>\r\n        <th>\r\n          <span title=\"type\">\r\n              type\r\n             </span>              \r\n        </th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr ngbTooltip=\"{{row.under_maintenance ? 'Under Maintenence' :''}}\" placement=\"bottom\" container=\"body\"  *ngFor=\"let row of data; let i = index\" (click)=\"showSwitch(row)\" class=\"flowDataRow\"\r\n        [ngClass]=\"{'down-state': row.state == 'DEACTIVATED' , 'up-state': row.state == 'ACTIVATED', 'maintenance_switch': row.under_maintenance }\" [class.down-status]=\"row.hasOwnProperty('discrepancy') && ((row['discrepancy'].hasOwnProperty('status') && row['discrepancy']['status']))\">\r\n            <td class=\"divTableCell\" title=\"{{checkValue(row.switch_id)}}\" [contextMenu]=\"copySwitchId\">\r\n              {{checkValue(row.switch_id)}}\r\n              <context-menu #copySwitchId>\r\n                <ng-template contextMenuItem (execute)=\"copyToClip($event,'switch_id',i);\">\r\n                  Copy to Clipboard\r\n                </ng-template>\r\n              </context-menu>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{ ((row['controller-switch'] == true && row['state'] == 'ACTIVATED') || (row['name']!=='undefined') ) ? row['name'] : row['common-name'] ? checkValue(row['common-name']) : checkValue(row['name']) }}\" [contextMenu]=\"copySwitchName\">\r\n              {{ ((row['controller-switch'] == true && row['state'] == 'ACTIVATED') || (row['name']!=='undefined') )? checkValue(row['name']) : (row['common-name']) ? checkValue(row['common-name']) : checkValue(row['name']) }}\r\n              <context-menu #copySwitchName>\r\n                <ng-template contextMenuItem (execute)=\"copyToClip($event,'name',i);\">\r\n                  Copy to Clipboard\r\n                </ng-template>\r\n              </context-menu>\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{checkValue(row.address)}}\" >\r\n              {{checkValue(row.address)}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{checkValue(row.hostname)}}\" >\r\n              {{checkValue(row.hostname)}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{ row['pop-location'] && row['pop-location']['pop-code'] ? checkValue(row['pop-location']['pop-code']) : ''}}\" >\r\n              {{ row['pop-location'] && row['pop-location']['pop-code'] ? checkValue(row['pop-location']['pop-code']) : '-'}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{(flowDataOfSwitch && flowDataOfSwitch.hasOwnProperty(row.switch_id) && (flowDataOfSwitch[row.switch_id].sumofbandwidth || flowDataOfSwitch[row.switch_id].sumofbandwidth == 0) ) ? flowDataOfSwitch[row.switch_id].sumofbandwidth : 'loading..'}}\" >\r\n              {{(flowDataOfSwitch && flowDataOfSwitch.hasOwnProperty(row.switch_id) && (flowDataOfSwitch[row.switch_id].sumofbandwidth || flowDataOfSwitch[row.switch_id].sumofbandwidth == 0) ) ? flowDataOfSwitch[row.switch_id].sumofbandwidth : 'loading..'}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{(flowDataOfSwitch && flowDataOfSwitch.hasOwnProperty(row.switch_id) && (flowDataOfSwitch[row.switch_id].noofflows || flowDataOfSwitch[row.switch_id].noofflows == 0) ) ? flowDataOfSwitch[row.switch_id].noofflows : 'loading..'}}\" >\r\n              {{(flowDataOfSwitch && flowDataOfSwitch.hasOwnProperty(row.switch_id) && (flowDataOfSwitch[row.switch_id].noofflows || flowDataOfSwitch[row.switch_id].noofflows == 0) ) ? flowDataOfSwitch[row.switch_id].noofflows : 'loading..'}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{checkValue(row.description)}}\" >\r\n              {{checkValue(row.description)}}\r\n            </td>\r\n            <td class=\"divTableCell\" title=\"{{checkValue(row.state)}}\" >\r\n              {{checkValue(row.state)}}\r\n            </td>\r\n            <td >{{ descrepancyString(row) }}</td>\r\n           \r\n           \r\n        </tr>\r\n    </tbody>\r\n  </table>\r\n"

/***/ }),

/***/ "./src/app/modules/switches/switch-datatable/switch-datatable.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/switches/switch-datatable/switch-datatable.component.ts ***!
  \*********************************************************************************/
/*! exports provided: SwitchDatatableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchDatatableComponent", function() { return SwitchDatatableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");












let SwitchDatatableComponent = class SwitchDatatableComponent {
    constructor(loaderService, renderer, router, commonService, toastr, storeSwitchService, clipboardService, switchService) {
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.router = router;
        this.commonService = commonService;
        this.toastr = toastr;
        this.storeSwitchService = storeSwitchService;
        this.clipboardService = clipboardService;
        this.switchService = switchService;
        this.data = [];
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.wrapperHide = false;
        this.hasStoreSetting = false;
        this.flowSubscription = [];
        this.switch_id = false;
        this.commonname = false;
        this.name = false;
        this.address = false;
        this.hostname = false;
        this.poplocation = false;
        this.description = false;
        this.sumofflows = false;
        this.noofflows = false;
        this.state = false;
        this.clipBoardItems = [];
        this.flowDataOfSwitch = {};
        if (!this.commonService.hasPermission('menu_switches')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_11__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.wrapperHide = false;
        let ref = this;
        this.dtOptions = {
            pageLength: 10,
            retrieve: true,
            autoWidth: false,
            dom: 'tpli',
            colResize: false,
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            "responsive": true,
            drawCallback: function () {
                if (jQuery('#switchDataTable tbody tr').length < 10) {
                    jQuery('#switchDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#switchDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '10%' },
                { sWidth: '10%', "sType": "name", "bSortable": true },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '15%' },
                { sWidth: '25%' },
                { sWidth: '10%' }
            ],
            language: {
                searchPlaceholder: "Search"
            },
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, this.data.length / 2);
            },
            columnDefs: [
                { targets: [4], visible: false },
                { targets: [9], visible: false },
            ]
        };
        this.fetchSwitchFlowData(this.data);
    }
    fetchSwitchFlowData(switchlist) {
        if (switchlist && switchlist.length) {
            var i = 0;
            for (let switchData of switchlist) {
                this.flowSubscription[i] = this.switchService.getSwitchFlows(switchData.switch_id, switchData['inventory-switch'], null).subscribe(data => {
                    let flowsData = data;
                    this.flowDataOfSwitch[switchData.switch_id] = {};
                    this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth = 0;
                    this.flowDataOfSwitch[switchData.switch_id].noofflows = 0;
                    if (flowsData && flowsData.length) {
                        for (let flow of flowsData) {
                            this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth = this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth + (flow.maximum_bandwidth / 1000);
                        }
                        if (this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth) {
                            this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth = this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth.toFixed(3);
                        }
                        this.flowDataOfSwitch[switchData.switch_id].noofflows = flowsData.length;
                    }
                }, error => {
                    this.flowDataOfSwitch[switchData.switch_id] = {};
                    this.flowDataOfSwitch[switchData.switch_id].sumofbandwidth = 0;
                    this.flowDataOfSwitch[switchData.switch_id].noofflows = 0;
                });
                i++;
            }
        }
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $("input", this.header()).on("keyup change", function () {
                    if (that.search() !== this["value"]) {
                        that.search(this["value"]).draw();
                    }
                });
            });
        });
        this.checkSwitchSettings();
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
        if (this.flowSubscription && this.flowSubscription.length) {
            this.flowSubscription.forEach((subscription) => subscription.unsubscribe());
            this.flowSubscription = [];
        }
    }
    fulltextSearch(value) {
        if (this.dtTrigger)
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.search(value)
                    .draw();
            });
    }
    ngOnChanges(change) {
        if (change.data) {
            if (change.data.currentValue) {
                this.data = change.data.currentValue;
                this.clipBoardItems = this.data;
            }
        }
        if (typeof (change.textSearch) !== 'undefined' && change.textSearch.currentValue) {
            this.fulltextSearch(change.textSearch.currentValue);
        }
    }
    showSwitch(switchObj) {
        var switchDetailsJSON = {
            "switch_id": switchObj.switch_id,
            "name": switchObj.name,
            "common-name": switchObj['common-name'],
            "address": switchObj.address,
            "hostname": switchObj.hostname,
            "description": switchObj.description,
            "state": switchObj.state
        };
        localStorage.setItem("switchDetailsJSON", JSON.stringify(switchDetailsJSON));
        localStorage.setItem("switchFilterFlag", this.switchFilterFlag);
        this.router.navigate(["/switches/details/" + switchObj.switch_id]);
    }
    checkValue(value) {
        if (value === "" || value == undefined) {
            return "-";
        }
        else {
            return value;
        }
    }
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    descrepancyString(row) {
        let text = [];
        if (row.hasOwnProperty('controller-switch')) {
            if (row['controller-switch']) {
                text.push("controller:true");
            }
            else {
                text.push("controller:false");
            }
        }
        else {
            text.push("controller:false");
        }
        if (row.hasOwnProperty('inventory-switch')) {
            if (row['inventory-switch']) {
                text.push("inventory:true");
            }
            else {
                text.push("inventory:false");
            }
        }
        else {
            text.push("inventory:false");
        }
        return text.join(", ");
    }
    checkSwitchSettings() {
        this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
        if (this.hasStoreSetting) {
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.columns([4]).visible(true);
            });
        }
        else {
            this.datatableElement.dtInstance.then((dtInstance) => {
                dtInstance.columns([4]).visible(false);
            });
        }
    }
    copyToClip(event, copyItem, index) {
        if (copyItem == 'name') {
            var copyData = (this.clipBoardItems[index]['common-name']) ? this.checkValue(this.clipBoardItems[index]['common-name']) : this.checkValue(this.clipBoardItems[index][copyItem]);
        }
        else {
            var copyData = this.checkValue(this.clipBoardItems[index][copyItem]);
        }
        this.clipboardService.copyFromContent(copyData);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], SwitchDatatableComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SwitchDatatableComponent.prototype, "data", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", String)
], SwitchDatatableComponent.prototype, "switchFilterFlag", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SwitchDatatableComponent.prototype, "textSearch", void 0);
SwitchDatatableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-datatable',
        template: __webpack_require__(/*! ./switch-datatable.component.html */ "./src/app/modules/switches/switch-datatable/switch-datatable.component.html"),
        styles: [__webpack_require__(/*! ./switch-datatable.component.css */ "./src/app/modules/switches/switch-datatable/switch-datatable.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_9__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_10__["ToastrService"],
        src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_6__["StoreSettingtService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_7__["ClipboardService"],
        src_app_common_services_switch_service__WEBPACK_IMPORTED_MODULE_8__["SwitchService"]])
], SwitchDatatableComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-detail/switch-detail.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/modules/switches/switch-detail/switch-detail.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".form-wrapper{\r\n  border: 1px solid #ccc;\r\n  padding: 15px 15px 0;\r\n}\r\n .col-form-label {\r\n  line-height: 1;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9zd2l0Y2gtZGV0YWlsL3N3aXRjaC1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHNCQUFzQjtFQUN0QixvQkFBb0I7QUFDdEI7Q0FDQztFQUNDLGNBQWM7QUFDaEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3N3aXRjaGVzL3N3aXRjaC1kZXRhaWwvc3dpdGNoLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0td3JhcHBlcntcclxuICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gIHBhZGRpbmc6IDE1cHggMTVweCAwO1xyXG59XHJcbiAuY29sLWZvcm0tbGFiZWwge1xyXG4gIGxpbmUtaGVpZ2h0OiAxO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/switches/switch-detail/switch-detail.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/switches/switch-detail/switch-detail.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"currentRoute != 'port-details'\">\r\n  <!-- <div> -->\r\n  <!-- Switch Details -->\r\n    <div id=\"switchdetails_div\">\r\n      <h5 class=\"modal-title mb-2\">SWITCH DETAILS\r\n        <span  class=\"btn btn-dark btn-sm pull-right\" *ngIf=\"commonService.hasPermission('sw_switch_delete')\" (click)=\"deleteSwitch()\">Delete</span> \r\n        <span  class=\"btn btn-dark btn-sm pull-right mr-3\" *ngIf=\"commonService.hasPermission('sw_switch_location_update')\"  (click)=\"editSwitchLocation()\">Edit Location</span> \r\n       \r\n        <div class=\"clear clearfix\"></div>    \r\n\r\n      </h5>\r\n      <div class=\"form-wrapper\">\r\n        <div class=\"row mb-3\" [formGroup]=\"switchNameForm\">\r\n          <label class=\"col-sm-2 \">Name:</label>\r\n          <div class=\"col-sm-9\" *ngIf=\"!isSwitchNameEdit\">\r\n              <div class=\"row\">\r\n                  <p  class=\" col-sm-3 copy_to_clipBoard switchdetails_div_name\"  [contextMenu]=\"copySrcSwitchName\">{{ ((switchDetail['controller-switch'] == true && switchDetail['state'] == 'ACTIVATED') || (switchDetail['name']!=='undefined') ) ? switchDetail['name'] : (switchDetail['common-name']) ? switchDetail['common-name'] : switchDetail['name'] }}\r\n                      <i title=\"Controller : {{(descrepancyData.status.controller !='-') ? switchDetail['name']: '-'}}, Inventory : {{switchDetail['common-name']}}\" *ngIf=\"hasStoreSetting && (switchDetail['name'] !='undefined' && switchDetail['common-name'] !='undefined' && switchDetail['name'] != switchDetail['common-name'] )\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n                  </p>\r\n                  <button *ngIf=\"!isSwitchNameEdit && commonService.hasPermission('sw_switch_update_name')\" type=\"button\" class=\"btn pull-left kilda_btn\" style=\"padding: 0px 20px!important; margin: 0px 0px 8px 15px;\" (click)=\"editSwitchName()\">Edit</button> &nbsp;\r\n                </div>\r\n               \r\n             </div>\r\n          <div class=\"col-sm-9\" *ngIf=\"isSwitchNameEdit\">\r\n            <div class=\"row\">\r\n                <input type=\"text\"  class=\"form-control col-sm-3\" formControlName=\"name\"  />  \r\n                <div class=\"col-sm-3 pull-left\">\r\n                      <button *ngIf=\"isSwitchNameEdit\" type=\"button\" (click)=\"saveSwitchName()\" class=\"btn kilda_btn\">Save</button> &nbsp;\r\n                      <button *ngIf=\"isSwitchNameEdit\" type=\"button\" class=\"btn kilda_btn\"  (click)=\"cancelSwitchName()\">Cancel</button> &nbsp;\r\n                </div>\r\n            </div>\r\n              \r\n          </div>\r\n         <div class=\"clearfix\"></div>\r\n         <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">UUID:</label>\r\n         <p *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard col-form-label switchdetails_div_name\">{{ switchDetail['uuid'] || '-'}}</p>\r\n\r\n        </div>\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">Switch ID:</label>\r\n          <div class=\"col-sm-2\">\r\n            <p class=\"col-form-label\" [contextMenu]=\"copySrcSwitch\">{{ switchDetail['switch_id'] }}</p>\r\n            <span class=\"switchdetails_div_switch_id copy_to_clipBoard\"></span>\r\n          </div>\r\n          <div class=\"col-sm-2\">\r\n            <input type=\"hidden\" class=\"on-off-switch\" value=\"0\" style=\"display: none;\">\r\n            <div class=\"pull-left\">\r\n              <div class=\"onoffswitch\">\r\n                <input type=\"checkbox\" (change)=\"maskSwitchId('source',$event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchsource\">\r\n                <label class=\"onoffswitch-label\" for=\"onoffswitchsource\">\r\n                  <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch\"></span>\r\n                  <span class=\"onoffswitch-switch\"></span>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <label class=\"col-sm-2 col-form-label\">Hostname:</label>\r\n          <p class=\"col-sm-4 copy_to_clipBoard switchdetails_div_hostname col-form-label\" [contextMenu]=\"copyTrgSwitchName\">{{ switchDetail['hostname'] || '-' }}</p>\r\n         \r\n         \r\n        </div>\r\n       \r\n        <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">Address:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_address col-form-label\">{{ switchDetail['address'] || '-' }}</p>\r\n          <label class=\"col-sm-2 col-form-label\">Description:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_desc col-form-label\">{{ switchDetail['description'] || '-' }}</p>\r\n         \r\n        </div>\r\n       \r\n        <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">State:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_state col-form-label\">{{ switchDetail['state'] || '-' }}\r\n            <i title=\"Controller : {{descrepancyData.status.controller}}, Inventory : {{descrepancyData.status.inventory}}\" *ngIf=\"hasStoreSetting && statusDescrepancy\" class=\"fa fa-exclamation-triangle text-orange\"></i>\r\n          </p>\r\n          <label class=\"col-sm-2 col-form-label\">Manufacturer:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_address col-form-label\">{{ switchDetail['manufacturer'] || '-' }}</p>\r\n         </div>\r\n         <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">Hardware:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_address col-form-label\">{{ switchDetail['hardware'] || '-' }}</p>\r\n          <label class=\"col-sm-2 col-form-label\">Of Version:</label>\r\n          <p class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['of_version'] || '-' }}</p>\r\n        </div>\r\n        \r\n<!--         \r\n        \r\n        <div class=\"row\" *ngIf=\"!hasStoreSetting\">\r\n          <label class=\"col-sm-2 col-form-label\">Software Version:</label>\r\n           <p class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['software'] || switchDetail['software-version'] || '-' }}</p>\r\n        </div> -->\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">Software Version:</label>\r\n          <p class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['software'] || switchDetail['software-version'] || '-' }}</p>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"commonService.hasPermission('sw_switch_maintenance') &&  !switchDetail['inventory-switch']\">\r\n            <label class=\"col-sm-2 col-form-label\">Evacuate:</label>\r\n            <div class=\"col-sm-4 switchdetails_div_address col-form-label\">\r\n                <div class=\"onoffswitch\">\r\n                    <input type=\"checkbox\" (change)=\"evacuateSwitch($event)\" name=\"onoffswitchevacuate\" class=\"onoffswitch-checkbox\" id=\"onoffswitchevacuate\" [checked]=\"evacuate\">\r\n                    <label class=\"onoffswitch-label\" for=\"onoffswitchevacuate\">\r\n                      <span class=\"onoffswitch-inner onoffswitch-inner-maintenance-switch\"></span>\r\n                      <span class=\"onoffswitch-switch\"></span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n           <label class=\"col-sm-2 col-form-label\">Under Maintenance:</label>\r\n           <div class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">\r\n              <div class=\"onoffswitch\">\r\n                  <input type=\"checkbox\" (change)=\"switchMaintenance($event)\" name=\"onoffswitchmaintenance\" class=\"onoffswitch-checkbox\" id=\"onoffswitchmaintenance\" [checked]=\"underMaintenance\">\r\n                  <label class=\"onoffswitch-label\" for=\"onoffswitchmaintenance\">\r\n                    <span class=\"onoffswitch-inner onoffswitch-inner-maintenance-switch\"></span>\r\n                    <span class=\"onoffswitch-switch\"></span>\r\n                  </label>\r\n                </div>\r\n           </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <label class=\"col-sm-2 col-form-label\">Sum(Bandwidth) Of Flows(Mbps):</label>\r\n          <p class=\"col-sm-4 switchdetails_div_no_of_flows col-form-label\" >{{ (!flowBandwidthFlag) ?  flowBandwidthSum : 'loading..'  }}</p>\r\n          <label class=\"col-sm-2 col-form-label\">Number of Flows:</label>\r\n          <p class=\"col-sm-4 switchdetails_div_no_of_flows col-form-label\" >{{ (switchFlows && (switchFlows.length || switchFlows.length == 0)) ?  switchFlows.length : 'loading..'  }}</p>\r\n     </div> \r\n     <div class=\"row\">\r\n      <label class=\"col-sm-2 col-form-label\">Pop:</label>\r\n       <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail.pop) ? switchDetail.pop : \"-\" }}</p>\r\n       <label class=\"col-sm-2 col-form-label\">Latitude:</label>\r\n        <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail['location'] && switchDetail['location'].latitude) ? switchDetail['location'].latitude : 0 }}</p>\r\n    </div>\r\n    <div class=\"row\">\r\n        <label class=\"col-sm-2 col-form-label\">Longitude:</label>\r\n        <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail['location'] && switchDetail['location'].longitude) ? switchDetail['location'].longitude : 0 }}</p>\r\n     <label class=\"col-sm-2 col-form-label\">Street:</label>\r\n      <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail['location'] && (switchDetail['location'].street) !='undefined' && switchDetail['location'].street != '') ? switchDetail['location'].street || \"-\" : \"-\" }}</p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-2 col-form-label\">City:</label>\r\n      <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail['location'] && (switchDetail['location'].city) != 'undefined' && switchDetail['location'].city != '') ? switchDetail['location'].city || \"-\" : \"-\"  }}</p>\r\n       <label class=\"col-sm-2 col-form-label\">Country:</label>\r\n      <p  class=\"col-sm-4  col-form-label break-word\" >{{ (switchDetail['location'] && (switchDetail['location'].country) !='undefined' && switchDetail['location'].country != '') ? switchDetail['location'].country || \"-\" : \"-\"  }}</p>\r\n    </div>\r\n     <div class=\"row\" *ngIf=\"hasStoreSetting\">\r\n      <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">Serial:</label>\r\n      <p *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['serial-number'] || '-' }}</p>\r\n      \r\n      <label class=\"col-sm-2 col-form-label\">Ref URL:</label>\r\n      <p class=\"col-sm-4 switchdetails_div_address col-form-label\">\r\n        <a *ngIf=\"!switchDetail['reference-url']\">-</a>\r\n        <a *ngIf=\"switchDetail['reference-url']\" href=\"{{ switchDetail['reference-url'] }}\" target=\"blank\">{{ switchDetail['reference-url'] }}</a>\r\n      </p>\r\n   </div>\r\n     <div class=\"row\">\r\n      <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">Rack Location:</label>\r\n      <p *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['rack-location'] || '-' }}</p>\r\n    \r\n      <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">Model:</label>\r\n      <p  *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['model'] || '-' }}</p>\r\n     </div>\r\n     <div class=\"row\">\r\n      <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">Pop Location :</label>\r\n      <p *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['pop-location'] && switchDetail['pop-location']['pop-code'] ? switchDetail['pop-location']['pop-code'] : '-'}}</p>\r\n    \r\n      <label *ngIf=\"hasStoreSetting\" class=\"col-sm-2 col-form-label\">Rack Number:</label>\r\n      <p *ngIf=\"hasStoreSetting\" class=\"col-sm-4 copy_to_clipBoard switchdetails_div_name col-form-label\">{{ switchDetail['rack-number'] || '-' }}</p>\r\n    </div>\r\n      </div>\r\n    </div>\r\n    <!-- HERE -->\r\n    <div class=\"row\">\r\n      <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n        <ul class=\"nav nav-pills\">\r\n          <li [ngClass]=\"{'active': openedTab == 'port'}\">\r\n            <a href=\"javascript:void(0)\" (click)=\"toggleTab('port',true)\" data-toggle=\"tab\">PORT DETAILS</a>\r\n          </li>\r\n          <li *ngIf=\"commonService.hasPermission('sw_permission_rules')\" [ngClass]=\"{'active': openedTab == 'rules'}\">\r\n            <a href=\"javascript:void(0)\" (click)=\"toggleTab('rules')\" data-toggle=\"tab\" id=\"flow-list\">RULES</a>\r\n          </li>\r\n          <li *ngIf=\"commonService.hasPermission('sw_switch_meters')\" [ngClass]=\"{'active': openedTab == 'meters'}\">\r\n            <a href=\"javascript:void(0)\" (click)=\"toggleTab('meters')\" data-toggle=\"tab\" id=\"meters-list\">METERS</a>\r\n          </li>\r\n          <li  *ngIf=\"commonService.hasPermission('menu_flows')\"  [ngClass]=\"{'active': openedTab == 'flows'}\">\r\n            <a href=\"javascript:void(0)\" (click)=\"toggleTab('flows')\" data-toggle=\"tab\" id=\"flow-list\">FLOWS</a>\r\n          </li>\r\n          <li *ngIf=\"hasStoreSetting && statusDescrepancy\" [ngClass]=\"{'active': openedTab == 'descripancy'}\">\r\n            <a href=\"javascript:void(0)\" (click)=\"toggleTab('descripancy')\" data-toggle=\"tab\" id=\"descripancy-list\">DISCREPANCY</a>\r\n          </li>\r\n         \r\n        </ul>\r\n        <div class=\"tab-content clearfix\">\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'port'}\" id=\"1a\">\r\n            <app-port-list [loadinterval]=\"isLoaderActive\" [switch]=\"switchId\" ></app-port-list>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'rules'}\" id=\"2a\">\r\n            <app-rule-details *ngIf=\"openedTab == 'rules'\"></app-rule-details>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'meters'}\" >\r\n            <app-switch-meters *ngIf=\"openedTab == 'meters'\"></app-switch-meters>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'flows'}\" >\r\n              <app-switch-flows  [data]=\"switchFlows\" *ngIf=\"openedTab == 'flows' && loadswitchFlows\"></app-switch-flows>\r\n          </div>\r\n            <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'descripancy'}\" id=\"a\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"row-border hover dataTable no-footer\">\r\n                  <thead class=\"thead-light\"><tr class=\"tableHeading\"><th>Discrepancy</th><th>Kilda Controller</th><th>Switch Store</th></tr></thead>\r\n                <tbody>\r\n                  <tr *ngIf=\"statusDescrepancy\" >\r\n                    <td class=\"divTableCell\">Status</td>\r\n                    <td class=\"divTableCell\">{{ descrepancyData.status.controller}}</td>\r\n                    <td class=\"divTableCell\">{{ descrepancyData.status.inventory}}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div class=\"note-container\">\r\n              <p class=\"col-md-6 alert alert-warning\" *ngIf=\"(descrepancyData.status.controller =='-' && descrepancyData.status.inventory != '-')\">\r\n                 <strong>*Note:</strong> Switch doesn't exist in the controller</p>\r\n                 \r\n                 <p class=\"col-md-6 alert alert-warning\" *ngIf=\"(descrepancyData.status.inventory == '-' ) \">\r\n                  <strong>*Note:</strong> Switch doesn't exist in the inventory</p>\r\n                  <p class=\"col-md-6 alert alert-warning\" *ngIf=\"(descrepancyData.status.inventory != '-' && descrepancyData.status.controller != '-') && (descrepancyData.status.inventory != descrepancyData.status.controller) \">\r\n                    <strong>*Note:</strong> There is descrepancy in switch status</p>\r\n  \r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- END -->\r\n  <!-- Switch Details -->\r\n</div>\r\n\r\n<div *ngIf=\"currentRoute == 'port-details'\">\r\n  <!-- <div> -->\r\n <router-outlet></router-outlet> \r\n</div>\r\n\r\n\r\n\r\n<context-menu #copySrcSwitch>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitch');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copyTrgSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'targetSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n\r\n<context-menu #copySrcSwitchName>\r\n  <ng-template contextMenuItem (execute)=\"copyToClip($event,'sourceSwitchName');\">\r\n    Copy to Clipboard\r\n  </ng-template>\r\n</context-menu>\r\n"

/***/ }),

/***/ "./src/app/modules/switches/switch-detail/switch-detail.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/switch-detail/switch-detail.component.ts ***!
  \***************************************************************************/
/*! exports provided: SwitchDetailComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchDetailComponent", function() { return SwitchDetailComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/pipes/switchidmask.pipe */ "./src/app/common/pipes/switchidmask.pipe.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! src/app/common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var src_app_common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/common/components/islmaintenancemodal/islmaintenancemodal.component */ "./src/app/common/components/islmaintenancemodal/islmaintenancemodal.component.ts");
/* harmony import */ var _common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../common/components/modal/modal.component */ "./src/app/common/components/modal/modal.component.ts");
/* harmony import */ var _common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../../common/components/otp/otp.component */ "./src/app/common/components/otp/otp.component.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
/* harmony import */ var src_app_common_components_switchupdatemodal_switchupdatemodal_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! src/app/common/components/switchupdatemodal/switchupdatemodal.component */ "./src/app/common/components/switchupdatemodal/switchupdatemodal.component.ts");




















let SwitchDetailComponent = class SwitchDetailComponent {
    constructor(switchService, maskPipe, toastr, router, route, loaderService, clipboardService, titleService, commonService, storeSwitchService, formBuilder, modalService) {
        this.switchService = switchService;
        this.maskPipe = maskPipe;
        this.toastr = toastr;
        this.router = router;
        this.route = route;
        this.loaderService = loaderService;
        this.clipboardService = clipboardService;
        this.titleService = titleService;
        this.commonService = commonService;
        this.storeSwitchService = storeSwitchService;
        this.formBuilder = formBuilder;
        this.modalService = modalService;
        this.switchDetail = {};
        this.loadswitchFlows = false;
        this.switchFlows = [];
        this.openedTab = 'port';
        this.isSwitchNameEdit = false;
        this.isStorageDBType = false;
        this.evacuate = false;
        this.flowBandwidthSum = 0;
        this.flowBandwidthFlag = false;
        this.currentRoute = 'switch-details';
        this.switchFlowFlag = 'controller';
        this.clipBoardItems = {
            sourceSwitchName: "",
            sourceSwitch: "",
            targetSwitchName: ""
        };
        this.switchId = null;
        this.settingSubscriber = null;
        this.descrepancyData = {
            status: {
                controller: "-",
                inventory: "-"
            }
        };
        this.isLoaderActive = true;
        this.statusDescrepancy = false;
        this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
    }
    ;
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - View Switch');
        this.route.params.subscribe(params => {
            this.switchId = params['id'];
            var filter = localStorage.getItem("switchFilterFlag");
            this.switchFlowFlag = filter;
            localStorage.removeItem('portLoaderEnabled');
            this.getSwitchDetail(params['id'], filter);
        });
        if (this.router.url.includes("/port")) {
            this.router.navigated = false;
            this.router.navigate([this.router.url]);
        }
        this.router.events
            .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_5__["NavigationEnd"])).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["filter"])(event => event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_5__["NavigationEnd"]))
            .subscribe(event => {
            let tempRoute = event;
            if (tempRoute.url.includes("/port")) {
                this.currentRoute = 'port-details';
            }
            else {
                this.currentRoute = 'switch-details';
            }
        });
        this.switchNameForm = this.formBuilder.group({
            name: [""]
        });
    }
    maskSwitchId(switchType, e) {
        if (e.target.checked) {
            this.switchDetail.switch_id = this.maskPipe.transform(this.switchDetail.switch_id, 'legacy');
        }
        else {
            this.switchDetail.switch_id = this.maskPipe.transform(this.switchDetail.switch_id, 'kilda');
        }
        this.clipBoardItems.sourceSwitch = this.switchDetail.switch_id;
    }
    deleteSwitch() {
        let is2FaEnabled = localStorage.getItem('is2FaEnabled');
        var self = this;
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_14__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Delete Switch";
        modalReff.componentInstance.content = 'Are you sure you want to perform delete action ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                if (is2FaEnabled == 'true') {
                    const modalRef = this.modalService.open(_common_components_otp_otp_component__WEBPACK_IMPORTED_MODULE_17__["OtpComponent"]);
                    modalRef.componentInstance.emitService.subscribe(otp => {
                        if (otp) {
                            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].deleting_switch);
                            this.switchService.deleteSwitch(this.switchId, { code: otp }, response => {
                                modalRef.close();
                                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].switch_deleted, "Success!");
                                this.loaderService.hide();
                                localStorage.removeItem('switchDetailsJSON');
                                localStorage.removeItem('SWITCHES_LIST');
                                localStorage.removeItem('switchPortDetail');
                                this.router.navigate(["/switches"]);
                            }, error => {
                                this.loaderService.hide();
                                this.toastr.error(error["error-auxiliary-message"], "Error!");
                            });
                        }
                        else {
                            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].otp_not_detected, "Error!");
                        }
                    }, error => {
                    });
                }
                else {
                    const modalRef2 = this.modalService.open(_common_components_modal_modal_component__WEBPACK_IMPORTED_MODULE_16__["ModalComponent"]);
                    modalRef2.componentInstance.title = "Warning";
                    modalRef2.componentInstance.content = src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].not_authorised_to_delete_switch;
                }
            }
        });
    }
    toggleTab(tab, enableLoader = false) {
        this.openedTab = tab;
        if (tab == 'flows') {
            if (this.switchFlows && this.switchFlows.length) {
            }
            else {
                this.loadSwitchFlows(this.switchDetail.switch_id, true);
            }
        }
        else if (enableLoader) {
            this.isLoaderActive = true;
        }
        else {
            this.isLoaderActive = false;
        }
    }
    loadSwitchFlows(switchId, loader) {
        if (loader) {
            this.loaderService.show('Loading Flows..');
        }
        var filter = this.switchFlowFlag == 'inventory';
        this.loadswitchFlows = false;
        this.flowBandwidthFlag = true;
        this.switchService.getSwitchFlows(switchId, filter, null).subscribe(data => {
            this.switchFlows = data;
            if (this.switchFlows && this.switchFlows.length) {
                for (let flow of this.switchFlows) {
                    this.flowBandwidthSum = this.flowBandwidthSum + (flow.maximum_bandwidth / 1000);
                }
            }
            else {
                if (this.switchFlows == null) {
                    this.switchFlows = [];
                }
            }
            if (this.flowBandwidthSum) {
                this.flowBandwidthSum = this.flowBandwidthSum.toFixed(3);
            }
            this.loadswitchFlows = true;
            this.loaderService.hide();
            this.flowBandwidthFlag = false;
        }, error => {
            this.loaderService.hide();
            this.switchFlows = [];
            this.flowBandwidthFlag = false;
            this.loadswitchFlows = true;
        });
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    editSwitchName() {
        this.isSwitchNameEdit = true;
    }
    cancelSwitchName() {
        this.isSwitchNameEdit = false;
    }
    saveSwitchName() {
        const modalReff = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_14__["ModalconfirmationComponent"]);
        modalReff.componentInstance.title = "Confirmation";
        modalReff.componentInstance.content = 'Are you sure you want to update switch name ?';
        modalReff.result.then((response) => {
            if (response && response == true) {
                this.isSwitchNameEdit = false;
                var self = this;
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].saving_switchname);
                let name = this.switchNameForm.controls['name'].value;
                let switchId = this.switch_id;
                this.switchService.saveSwitcName(name, switchId).subscribe((response) => {
                    self.loaderService.hide();
                    self.name = response.name;
                    self.switchDetail.name = response.name;
                    let retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON'));
                    localStorage.removeItem('switchDetailsJSON');
                    retrievedSwitchObject.name = response.name;
                    localStorage.setItem('switchDetailsJSON', JSON.stringify(retrievedSwitchObject));
                    localStorage.removeItem('SWITCHES_LIST');
                }, (error) => {
                    this.toastr.error(error.error['error-message']);
                    this.loaderService.hide();
                });
            }
        });
    }
    ngAfterViewInit() {
    }
    getSwitchDetail(switchId, filter) {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].loading_switch_detail);
        this.settingSubscriber = this.storeSwitchService.switchSettingReceiver.subscribe(setting => {
            this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
            let switchDetail = null;
            if (filter == 'controller') {
                var switchData = JSON.parse(localStorage.getItem('SWITCHES_LIST')) || {};
                let switchList = typeof (switchData.list_data) != 'undefined' ? switchData.list_data : [];
                if (switchList && switchList.length) {
                    switchList.forEach(element => {
                        if (element.switch_id == switchId) {
                            switchDetail = element;
                            return;
                        }
                    });
                }
            }
            else {
                var switchData = JSON.parse(localStorage.getItem('SWITCHES_LIST_ALL')) || {};
                let switchList = typeof (switchData.list_data) != 'undefined' ? switchData.list_data : [];
                if (switchList && switchList.length) {
                    switchList.forEach(element => {
                        if (element.switch_id == switchId) {
                            switchDetail = element;
                            return;
                        }
                    });
                }
            }
            if (switchDetail && switchDetail.switch_id) {
                this.switchDetail = switchDetail;
                this.switch_id = switchDetail.switch_id;
                this.switchNameForm.controls['name'].setValue(switchDetail.name);
                this.name = switchDetail.name;
                this.address = switchDetail.address;
                this.hostname = switchDetail.hostname;
                this.description = switchDetail.description;
                this.state = switchDetail.state;
                this.underMaintenance = switchDetail["under_maintenance"];
                this.clipBoardItems = Object.assign(this.clipBoardItems, {
                    sourceSwitchName: switchDetail.name,
                    sourceSwitch: this.switch_id,
                    targetSwitchName: switchDetail.hostname
                });
                this.loaderService.hide();
                if (switchDetail['discrepancy'] && (switchDetail['discrepancy']['status'])) {
                    if (switchDetail['discrepancy']['status']) {
                        this.statusDescrepancy = true;
                        this.descrepancyData.status.controller = (typeof (switchDetail['discrepancy']['status-value']['controller-status']) != 'undefined') ? switchDetail['discrepancy']['status-value']['controller-status'] : "-";
                        this.descrepancyData.status.inventory = (typeof (switchDetail['discrepancy']['status-value']['inventory-status']) != 'undefined') ? switchDetail['discrepancy']['status-value']['inventory-status'] : "-";
                    }
                }
                this.loadSwitchFlows(this.switchDetail.switch_id, false);
            }
            else {
                this.switchService.getSwitchDetail(switchId, filter).subscribe((retrievedSwitchObject) => {
                    if (!retrievedSwitchObject) {
                        this.loaderService.hide();
                        this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].no_switch_found, 'Error');
                        this.router.navigate([
                            "/switches"
                        ]);
                    }
                    else {
                        this.switchDetail = retrievedSwitchObject;
                        this.switch_id = retrievedSwitchObject.switch_id;
                        this.switchNameForm.controls['name'].setValue(retrievedSwitchObject.name);
                        this.name = retrievedSwitchObject.name;
                        this.address = retrievedSwitchObject.address;
                        this.hostname = retrievedSwitchObject.hostname;
                        this.description = retrievedSwitchObject.description;
                        this.state = retrievedSwitchObject.state;
                        this.underMaintenance = retrievedSwitchObject["under_maintenance"];
                        this.clipBoardItems = Object.assign(this.clipBoardItems, {
                            sourceSwitchName: retrievedSwitchObject.name,
                            sourceSwitch: this.switch_id,
                            targetSwitchName: retrievedSwitchObject.hostname
                        });
                        this.loaderService.hide();
                        if (retrievedSwitchObject['discrepancy'] && (retrievedSwitchObject['discrepancy']['status'])) {
                            if (retrievedSwitchObject['discrepancy']['status']) {
                                this.statusDescrepancy = true;
                                this.descrepancyData.status.controller = (typeof (retrievedSwitchObject['discrepancy']['status-value']['controller-status']) != 'undefined') ? retrievedSwitchObject['discrepancy']['status-value']['controller-status'] : "-";
                                this.descrepancyData.status.inventory = (typeof (retrievedSwitchObject['discrepancy']['status-value']['inventory-status']) != 'undefined') ? retrievedSwitchObject['discrepancy']['status-value']['inventory-status'] : "-";
                            }
                        }
                    }
                    this.loadSwitchFlows(this.switchDetail.switch_id, false);
                }, err => {
                    this.loaderService.hide();
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].no_switch_found, 'Error');
                    this.router.navigate(['/switches']);
                });
            }
        });
        let query = { _: new Date().getTime() };
        this.storeSwitchService.checkSwitchStoreDetails(query);
    }
    editSwitchLocation() {
        var self = this;
        var locationData = this.switchDetail.location;
        locationData['pop'] = this.switchDetail.pop;
        const modalRef = this.modalService.open(src_app_common_components_switchupdatemodal_switchupdatemodal_component__WEBPACK_IMPORTED_MODULE_19__["SwitchupdatemodalComponent"]);
        modalRef.componentInstance.title = "Update Switch Location";
        modalRef.componentInstance.data = locationData;
        modalRef.result.then((response) => {
        }, error => {
        });
        modalRef.componentInstance.emitService.subscribe(data => {
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].apply_changes);
            this.switchService.updateSwitch(data, this.switchId).subscribe((response) => {
                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].switch_updated_success, 'Success');
                this.loaderService.hide();
                modalRef.componentInstance.activeModal.close(true);
                this.switchDetail.pop = response.pop;
                this.switchDetail.location = response.location;
            }, error => {
                this.loaderService.hide();
                var message = (error && error.error && typeof error.error["error-auxiliary-message"] != 'undefined') ? error.error["error-auxiliary-message"] : src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].switch_updated_error;
                this.toastr.error(message, 'Error');
            });
        }, error => {
        });
    }
    switchMaintenance(e) {
        const modalRef = this.modalService.open(src_app_common_components_islmaintenancemodal_islmaintenancemodal_component__WEBPACK_IMPORTED_MODULE_15__["IslmaintenancemodalComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.isMaintenance = !this.underMaintenance;
        modalRef.componentInstance.content = 'Are you sure ?';
        this.underMaintenance = e.target.checked;
        modalRef.result.then((response) => {
            if (!response) {
                this.underMaintenance = false;
            }
        }, error => {
            this.underMaintenance = false;
        });
        modalRef.componentInstance.emitService.subscribe(evacuate => {
            var data = { "under_maintenance": e.target.checked, "evacuate": evacuate };
            this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].apply_changes);
            this.switchService.switchMaintenance(data, this.switchId).subscribe((response) => {
                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].maintenance_mode_changed, 'Success');
                this.loaderService.hide();
                this.underMaintenance = e.target.checked;
                if (evacuate) {
                    location.reload();
                }
            }, error => {
                this.loaderService.hide();
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].error_im_maintenance_mode, 'Error');
            });
        }, error => {
        });
    }
    evacuateSwitch(e) {
        const modalRef = this.modalService.open(src_app_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_14__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        this.evacuate = e.target.checked;
        if (this.evacuate) {
            modalRef.componentInstance.content = 'Are you sure you want to evacuate all flows?';
        }
        else {
            modalRef.componentInstance.content = 'Are you sure ?';
        }
        modalRef.result.then((response) => {
            if (response && response == true) {
                var data = { "under_maintenance": this.underMaintenance, "evacuate": e.target.checked };
                this.switchService.switchMaintenance(data, this.switchId).subscribe((serverResponse) => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].flows_evacuated, 'Success');
                    location.reload();
                }, error => {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_18__["MessageObj"].error_flows_evacuated, 'Error');
                });
            }
            else {
                this.evacuate = false;
            }
        }, error => {
            this.evacuate = false;
        });
    }
    ngOnDestroy() {
        if (this.settingSubscriber) {
            this.settingSubscriber.unsubscribe();
            this.settingSubscriber = null;
        }
    }
};
SwitchDetailComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-detail',
        template: __webpack_require__(/*! ./switch-detail.component.html */ "./src/app/modules/switches/switch-detail/switch-detail.component.html"),
        styles: [__webpack_require__(/*! ./switch-detail.component.css */ "./src/app/modules/switches/switch-detail/switch-detail.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"],
        _common_pipes_switchidmask_pipe__WEBPACK_IMPORTED_MODULE_3__["SwitchidmaskPipe"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_8__["ClipboardService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_9__["Title"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_10__["CommonService"],
        src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_11__["StoreSettingtService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_12__["FormBuilder"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_13__["NgbModal"]])
], SwitchDetailComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-flows/switch-flows.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/switches/switch-flows/switch-flows.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "table.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9zd2l0Y2gtZmxvd3Mvc3dpdGNoLWZsb3dzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoLWZsb3dzL3N3aXRjaC1mbG93cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUuZGF0YVRhYmxlIGkuZmF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6MTJweDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/switches/switch-flows/switch-flows.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/switch-flows/switch-flows.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group input-group-sm\">\r\n                     <input type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                 </div>\r\n            </div>\r\n            <div class=\"col-sm-8 text-right text-filters mb-3\" id=\"buttons\">\r\n                  \r\n            </div>\r\n         </div>\r\n         \r\n     </div>\r\n    <div class=\"clear clearfix\"></div>\r\n  </div>\r\n  <div class=\"flow-table-wrapper\" [hidden]=\"!wrapperHide\"></div>\r\n  <table id=\"switchflowDataTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n    <thead>\r\n      <tr class=\"tableHeading\">\r\n        <th class=\"\">\r\n          <span title=\"Flow ID\"> Flow ID </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedFlowId')\"></i>\r\n          <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedFlowId\" id=\"expandedFlowId\"/>\r\n        </th>\r\n        <th class=\"\" >\r\n           <span title=\"Source Switch\">Src Switch</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n            <input  value=\"{{ srcSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchName\" id=\"expandedSrcSwitchName\"/>\r\n         </th>\r\n        <th> <span title=\"Source Switch\">Src Switch ID</span></th>\r\n        <th >\r\n          <span title=\"Source Port\">\r\n            Src Port\r\n          </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchPort')\"></i>\r\n            <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\"  [hidden]=\"!expandedSrcSwitchPort\"id=\"expandedSrcSwitchPort\"/>\r\n        </th>\r\n        <th>\r\n            <span title=\"Source VLAN\"> Src VLAN</span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchVlan')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedSrcSwitchVlan\" id=\"expandedSrcSwitchVlan\"/>\r\n        </th>\r\n        <th class=\"\">\r\n          <span title=\"Destination Switch\">  Dst Switch</span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchName')\"></i>\r\n            <input  value=\"{{ dstSwitch }}\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchName\" id=\"expandedTargetSwitchName\"/>\r\n         </th>\r\n        <th > <span  title=\"Destination Switch\">Dst Switch ID</span></th>\r\n        <th >\r\n          <span title=\"Destination Port\">  Dst Port </span>\r\n            <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchPort')\"></i>\r\n            <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchPort\" id=\"expandedTargetSwitchPort\"/>\r\n        </th>\r\n        <th >\r\n            <span title=\"Destination VLAN\"> Dst VLAN   </span>\r\n          <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedTargetSwitchVlan')\"></i>\r\n          <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedTargetSwitchVlan\" id=\"expandedTargetSwitchVlan\"/>\r\n         </th>\r\n        <th >\r\n            <span title=\"Bandwidth (Mbps)\"> Bandwidth (Mbps)</span>\r\n                <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedBandwidth')\"></i>\r\n                <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedBandwidth\" id=\"expandedBandwidth\"/>\r\n        </th>\r\n        <th >\r\n            <span title=\"State\"> Status</span>\r\n             <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n             <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedState\" id=\"expandedState\"/>\r\n         </th>\r\n       \r\n        <th >\r\n            <span title=\"Description\">   Description </span>\r\n                 <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDescription')\"></i>\r\n                 <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" [hidden]=\"!expandedDescription\" id=\"expandedDescription\"/>\r\n         </th>\r\n        <th >\r\n          <span title=\"type\">  type  </span>\r\n        </th>        \r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let row of data; let i = index\" (click)=\"showFlow(row)\"  class=\"flowDataRow\"   [class.down-state]=\"!(row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED')\" [class.up-state]=\"row.status == 'CACHED' || row.status == 'UP' || row.status == 'ALLOCATED'\" >\r\n        <td class=\"divTableCell\" title=\"{{row.flowid }}\"> \r\n          {{row.flowid || \"-\"}} \r\n        \r\n         </td>\r\n        <td title=\"{{row.source_switch_name}}\" >\r\n          {{row.source_switch_name || \"-\"}}\r\n        \r\n        </td>\r\n        <td title=\"{{row.src_switch}}\">{{row.source_switch || \"-\"}}</td>\r\n        <td title=\"{{row.src_port}}\">{{row.src_port || \"-\"}}</td>\r\n        <td>{{row.src_vlan || \"-\"}}</td>\r\n        <td title=\"{{row.target_switch_name}}\">\r\n          {{row.target_switch_name || \"-\"}}\r\n          \r\n        </td>\r\n         <td title=\"{{row.target_switch}}\">{{row.target_switch || \"-\"}}</td>\r\n        <td>{{row.dst_port || \"-\"}}</td>\r\n        <td>{{row.dst_vlan || \"-\"}}</td>\r\n        <td>{{row.maximum_bandwidth / 1000  || \"-\"}}</td>\r\n        <td title=\"{{row.status || row.state ||  '-'}}\">{{ row.status || row.state ||  \"-\"}}</td>\r\n        <td title=\"{{row.description}}\">{{row.description || \"-\"}}</td>\r\n        <td >{{ descrepancyString(row) }}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>"

/***/ }),

/***/ "./src/app/modules/switches/switch-flows/switch-flows.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/switches/switch-flows/switch-flows.component.ts ***!
  \*************************************************************************/
/*! exports provided: SwitchFlowsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchFlowsComponent", function() { return SwitchFlowsComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");






let SwitchFlowsComponent = class SwitchFlowsComponent {
    constructor(renderer, loaderService, router, route) {
        this.renderer = renderer;
        this.loaderService = loaderService;
        this.router = router;
        this.route = route;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_2__["Subject"]();
        this.wrapperHide = true;
        this.expandedSrcSwitchName = false;
        this.expandedSrcSwitchPort = false;
        this.expandedSrcSwitchVlan = false;
        this.expandedTargetSwitchName = false;
        this.expandedTargetSwitchPort = false;
        this.expandedTargetSwitchVlan = false;
        this.expandedBandwidth = false;
        this.expandedFlowId = false;
        this.expandedState = false;
        this.expandedStatus = false;
        this.expandedDescription = false;
    }
    ngOnInit() {
        this.route.params.subscribe(params => {
            this.switchId = params['id'];
        });
        var ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            language: {
                searchPlaceholder: "Search"
            },
            buttons: {
                buttons: [
                    { extend: 'csv', text: 'Export', className: 'btn btn-dark' }
                ]
            },
            drawCallback: function () {
                if (jQuery('#switchflowDataTable tbody tr').length < 10) {
                    jQuery('#switchflowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#switchflowDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '15%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '13%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '9%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '10%' },
                { sWidth: '1%', "bSortable": false },
            ],
            columnDefs: [
                {
                    "targets": [2],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [6],
                    "visible": false,
                    "searchable": true
                },
                { "targets": [12], "visible": false },
            ],
            initComplete: function (settings, json) {
                var timer = (ref.data && ref.data.length) ? ref.data.length / 2 : 0;
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = false;
                }, timer);
            }
        };
    }
    descrepancyString(row) {
        let text = [];
        if (row.hasOwnProperty('controller-flow')) {
            if (row['controller-flow']) {
                text.push("controller:true");
            }
            else {
                text.push("controller:false");
            }
        }
        else {
            text.push("controller:false");
        }
        if (row.hasOwnProperty('inventory-flow')) {
            if (row['inventory-flow']) {
                text.push("inventory:true");
            }
            else {
                text.push("inventory:false");
            }
        }
        else {
            text.push("inventory:false");
        }
        return text.join(", ");
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that.search(this['value']).draw();
                    }
                });
            });
        });
        this.enableButtons();
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    ngOnChanges(change) {
        if (change.data) {
            if (change.data.currentValue) {
                this.data = change.data.currentValue;
            }
        }
    }
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
    showFlow(flowObj) {
        this.router.navigate(['/flows/details/' + flowObj.flowid]);
    }
    fulltextSearch(e) {
        var value = e.target.value;
        console.log('value', value);
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.search(value)
                .draw();
        });
    }
    enableButtons() {
        setTimeout(() => {
            this.datatableElement.dtInstance.then((dtInstance) => {
                var buttons = new jQuery.fn.dataTable.Buttons(dtInstance, {
                    buttons: [
                        { extend: 'csv', text: 'Export', className: 'btn btn-dark' }
                    ]
                }).container().appendTo($('#buttons'));
            });
        });
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], SwitchFlowsComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SwitchFlowsComponent.prototype, "data", void 0);
SwitchFlowsComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-flows',
        template: __webpack_require__(/*! ./switch-flows.component.html */ "./src/app/modules/switches/switch-flows/switch-flows.component.html"),
        styles: [__webpack_require__(/*! ./switch-flows.component.css */ "./src/app/modules/switches/switch-flows/switch-flows.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["ActivatedRoute"]])
], SwitchFlowsComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-layout/switch-layout.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/switch-layout/switch-layout.component.ts ***!
  \***************************************************************************/
/*! exports provided: SwitchLayoutComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchLayoutComponent", function() { return SwitchLayoutComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SwitchLayoutComponent = class SwitchLayoutComponent {
    constructor() { }
    ngOnInit() {
    }
};
SwitchLayoutComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-layout',
        template: '<router-outlet></router-outlet>'
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], SwitchLayoutComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-list/switch-list.component.css":
/*!************************************************************************!*\
  !*** ./src/app/modules/switches/switch-list/switch-list.component.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoLWxpc3Qvc3dpdGNoLWxpc3QuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/switches/switch-list/switch-list.component.html":
/*!*************************************************************************!*\
  !*** ./src/app/modules/switches/switch-list/switch-list.component.html ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-4\">\r\n                <div class=\"form-group input-group-sm\">\r\n                     <input id=\"search-input\" type=\"text\" class=\"form-control\" (keyup)=\"fulltextSearch($event)\" placeholder=\"Search\"/>\r\n                 </div>\r\n            </div>\r\n              <div class=\"col-sm-8 text-right text-filters mb-3\">\r\n                  <div *ngIf=\"hasStoreSetting && commonService.hasPermission('sw_switch_inventory')\" class=\"btn-group btn-group-sm btn-group-toggle mr-1\" data-toggle=\"buttons\">\r\n                      <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : switchFilterFlag == 'all','btn-dark': switchFilterFlag != 'all'}\">\r\n                        <input type=\"radio\" (click)=\"loadSwitchList('all')\" name=\"options\" id=\"option1\" autocomplete=\"off\" checked> All\r\n                      </label>\r\n                      <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : switchFilterFlag == 'controller','btn-dark': switchFilterFlag != 'controller'}\">\r\n                        <input type=\"radio\"  (click)=\"loadSwitchList('controller')\" name=\"options\" id=\"option2\" autocomplete=\"off\"> Controller\r\n                      </label>\r\n                      <label class=\"btn\"  [ngClass]=\"{ 'btn-secondary' : switchFilterFlag == 'inventory','btn-dark': switchFilterFlag != 'inventory'}\">\r\n                        <input type=\"radio\" (click)=\"loadSwitchList('inventory')\" name=\"options\" id=\"option3\" autocomplete=\"off\"> Inventory\r\n                      </label>\r\n                      <a *ngIf=\"hasStoreSetting\" class=\"mr-1\"> &nbsp;| </a>\r\n                    </div>\r\n                    \r\n                 <a class=\"cursor-pointer\" (click)=\"getSwitchList(switchFilterFlag)\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n              </div>\r\n         </div>\r\n         \r\n     </div>\r\n    <div class=\"clear clearfix\"></div>\r\n  </div>\r\n\r\n<app-switch-datatable [data]=\"dataSet\" [textSearch]=\"textSearch\" [switchFilterFlag]=\"switchFilterFlag\"  *ngIf=\"!loadingData\"></app-switch-datatable>"

/***/ }),

/***/ "./src/app/modules/switches/switch-list/switch-list.component.ts":
/*!***********************************************************************!*\
  !*** ./src/app/modules/switches/switch-list/switch-list.component.ts ***!
  \***********************************************************************/
/*! exports provided: SwitchListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchListComponent", function() { return SwitchListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! src/app/common/services/store-setting.service */ "./src/app/common/services/store-setting.service.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let SwitchListComponent = class SwitchListComponent {
    constructor(router, switchService, toastr, loaderService, titleService, renderer, storeSwitchService, commonService) {
        this.router = router;
        this.switchService = switchService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.titleService = titleService;
        this.renderer = renderer;
        this.storeSwitchService = storeSwitchService;
        this.commonService = commonService;
        this.dataSet = [];
        this.loadingData = true;
        this.hasStoreSetting = false;
        this.settingSubscriber = null;
        this.switchFilterFlag = localStorage.getItem('switchFilterFlag') || 'controller';
    }
    ngOnInit() {
        let ref = this;
        this.titleService.setTitle("OPEN KILDA - Switches");
        this.getStoreSwitchSettings();
    }
    ngAfterViewInit() { }
    loadSwitchList(filter) {
        this.dataSet = [];
        this.loadingData = true;
        if (filter != null) {
            this.switchFilterFlag = filter;
        }
        var switchListData = {};
        if (this.switchFilterFlag == 'controller') {
            switchListData = JSON.parse(localStorage.getItem("SWITCHES_LIST"));
        }
        else {
            switchListData = JSON.parse(localStorage.getItem("SWITCHES_LIST_ALL"));
        }
        if (switchListData) {
            var storageTime = switchListData.timeStamp;
            var startTime = new Date(storageTime).getTime();
            var lastTime = new Date().getTime();
            let timeminDiff = lastTime - startTime;
            var diffMins = Math.round(((timeminDiff % 86400000) % 3600000) / 60000);
            ;
            var switchList = switchListData.list_data;
            if (switchList && diffMins < 5) {
                this.dataSet = switchList;
                if (this.switchFilterFlag == 'inventory') {
                    this.dataSet = this.dataSet.filter((d) => {
                        return d['inventory-switch'];
                    });
                }
                setTimeout(() => {
                    this.loadingData = false;
                }, 100);
            }
            else {
                this.getSwitchList(this.switchFilterFlag);
            }
        }
        else {
            this.getSwitchList(this.switchFilterFlag);
        }
    }
    fulltextSearch(e) {
        this.textSearch = e.target.value || ' ';
    }
    getSwitchList(filter) {
        if (filter != null) {
            this.switchFilterFlag = filter;
        }
        this.loadingData = true;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].loading_switches);
        let query = { controller: this.switchFilterFlag == 'controller', _: new Date().getTime(), storeConfigurationStatus: this.hasStoreSetting };
        this.switchService.getSwitchList(query).subscribe((data) => {
            var switchListData = JSON.stringify({ 'timeStamp': new Date().getTime(), "list_data": data });
            if (this.switchFilterFlag == 'controller') {
                localStorage.setItem("SWITCHES_LIST", switchListData);
            }
            else {
                localStorage.setItem("SWITCHES_LIST_ALL", switchListData);
            }
            if (!data || data.length == 0) {
                this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].no_switch_available, "Information");
                this.dataSet = [];
            }
            else {
                this.dataSet = data;
                if (this.switchFilterFlag == 'inventory') {
                    this.dataSet = this.dataSet.filter((d) => {
                        return d['inventory-switch'];
                    });
                }
            }
            this.loadingData = false;
        }, error => {
            this.loaderService.hide();
            this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].no_switch_available, "Information");
            this.dataSet = [];
            this.loadingData = false;
        });
    }
    getStoreSwitchSettings() {
        let query = { _: new Date().getTime() };
        this.settingSubscriber = this.storeSwitchService.switchSettingReceiver.subscribe(setting => {
            this.hasStoreSetting = localStorage.getItem('hasSwtStoreSetting') == '1' ? true : false;
            this.loadSwitchList(this.switchFilterFlag);
        });
        this.storeSwitchService.checkSwitchStoreDetails(query);
    }
    ngOnDestroy() {
        if (this.settingSubscriber) {
            this.settingSubscriber.unsubscribe();
            this.settingSubscriber = null;
        }
    }
};
SwitchListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-switch-list",
        template: __webpack_require__(/*! ./switch-list.component.html */ "./src/app/modules/switches/switch-list/switch-list.component.html"),
        styles: [__webpack_require__(/*! ./switch-list.component.css */ "./src/app/modules/switches/switch-list/switch-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"],
        _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        src_app_common_services_store_setting_service__WEBPACK_IMPORTED_MODULE_7__["StoreSettingtService"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
], SwitchListComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.css":
/*!****************************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters-table/switch-meters-table.component.css ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "table.dataTable tbody td {\r\n    padding: 10px 20px 10px 18px;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy9zd2l0Y2hlcy9zd2l0Y2gtbWV0ZXJzLXRhYmxlL3N3aXRjaC1tZXRlcnMtdGFibGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDRCQUE0QjtBQUNoQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoLW1ldGVycy10YWJsZS9zd2l0Y2gtbWV0ZXJzLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5kYXRhVGFibGUgdGJvZHkgdGQge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4IDEwcHggMThweDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.html":
/*!*****************************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters-table/switch-meters-table.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"table-responsive\">\r\n    <table class=\"row-border hover dataTable no-footer margin-top-zero\">\r\n        <thead class=\"thead-light\">\r\n          <tr class=\"tableHeading\">\r\n            <th>Meter Id</th>\r\n            <th>Rate</th>\r\n            <th>Burst size</th>\r\n            <th>Version</th>\r\n            <th>Flags</th>\r\n          </tr>\r\n        </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let row of data; let i = index\" >\r\n          <td class=\"divTableCell\">{{row['meter_id'] || '-'}}</td>\r\n          <td class=\"divTableCell\">{{row['rate'] || '-'}}</td>\r\n          <td class=\"divTableCell\">{{row['burst_size'] || '-'}}</td>\r\n          <td class=\"divTableCell\">{{row['version'] || '-'}}</td>\r\n          <td class=\"divTableCell\">{{row['flags'].join(', ') || '-'}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>"

/***/ }),

/***/ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters-table/switch-meters-table.component.ts ***!
  \***************************************************************************************/
/*! exports provided: SwitchMetersTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchMetersTableComponent", function() { return SwitchMetersTableComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");


let SwitchMetersTableComponent = class SwitchMetersTableComponent {
    constructor() {
        this.data = [];
    }
    ngOnInit() {
    }
    ngOnChanges(change) {
        if (change.data && change.data.currentValue) {
            this.data = change.data.currentValue;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], SwitchMetersTableComponent.prototype, "data", void 0);
SwitchMetersTableComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-meters-table',
        template: __webpack_require__(/*! ./switch-meters-table.component.html */ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.html"),
        styles: [__webpack_require__(/*! ./switch-meters-table.component.css */ "./src/app/modules/switches/switch-meters-table/switch-meters-table.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [])
], SwitchMetersTableComponent);



/***/ }),

/***/ "./src/app/modules/switches/switch-meters/switch-meters.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters/switch-meters.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoLW1ldGVycy9zd2l0Y2gtbWV0ZXJzLmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/switches/switch-meters/switch-meters.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters/switch-meters.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row switch_rules\">\r\n  <div class=\"col-lg-12 text-right\" style=\"padding-bottom: 10px;margin-top:-20px; margin-bottom: 10px;\">\r\n      <a class=\"cursor-pointer pull-right\"  style=\"font-size:16px;\" id=\"switch_rules_btn\" (click)=\"switchMeters()\"><i class=\"fa fa-refresh\"></i>  Refresh</a>\r\n      <div class=\"pull-right\" [hidden]=\"showMetersJSON\" style=\"margin-right:10px; margin-top:-4px;\">\r\n        <input type=\"hidden\" class=\"on-off-switch\" value=\"0\" style=\"display: none;\">\r\n        <div class=\"pull-left\">\r\n          <div class=\"onoffswitch onoffswitch-meter\">\r\n            <input type=\"checkbox\" (change)=\"toggleView($event)\" name=\"onoffswitch\" class=\"onoffswitch-checkbox\" id=\"onoffswitchsourcemeter\">\r\n            <label class=\"onoffswitch-label\" for=\"onoffswitchsourcemeter\">\r\n              <span class=\"onoffswitch-inner onoffswitch-inner-kilda-switch-meter\"></span>\r\n              <span class=\"onoffswitch-switch onoffswitch-switch-meter\"></span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>      \r\n   </div>\r\n  <div id=\"switch_rules_loader\" class=\"bg-data-loader\" style=\"bottom:1px;display:none;\">\r\n    <div class=\"loader\"></div>\r\n  </div>\r\n  <div *ngIf=\"loading\" class=\"component-loader\"></div>\r\n  <div class=\" col-lg-12\" [hidden]=\"showMetersJSON\">\r\n    <pre *ngIf=\"jsonViewer\" [contextMenu]=\"switchMeterVal\" class=\"code\"  style=\"height: 500px;\">{{switchedMeters | json}}</pre>\r\n    <app-switch-meters-table *ngIf=\"tabularViewer\"  [data]=\"switchedMeters['meters']\"></app-switch-meters-table>\r\n  </div>\r\n</div>\r\n\r\n<context-menu #switchMeterVal>\r\n<ng-template contextMenuItem (execute)=\"copyToClipHtml($event,'switchMeterVal');\">\r\n  Copy to Clipboard\r\n</ng-template>\r\n</context-menu>\r\n"

/***/ }),

/***/ "./src/app/modules/switches/switch-meters/switch-meters.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/modules/switches/switch-meters/switch-meters.component.ts ***!
  \***************************************************************************/
/*! exports provided: SwitchMetersComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchMetersComponent", function() { return SwitchMetersComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../common/services/common.service */ "./src/app/common/services/common.service.ts");







let SwitchMetersComponent = class SwitchMetersComponent {
    constructor(switchService, toastr, loaderService, clipboardService, commonService) {
        this.switchService = switchService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.clipboardService = clipboardService;
        this.commonService = commonService;
        this.showMetersJSON = true;
        this.jsonViewer = true;
        this.tabularViewer = false;
        this.property = 'jsonViewer';
        this.loading = false;
        this.clipBoardItems = {
            switchMeterVal: ""
        };
    }
    ngOnInit() {
        let retrievedSwitchObject = JSON.parse(localStorage.getItem('switchDetailsJSON'));
        this.switch_id = retrievedSwitchObject.switch_id;
        this.tabularViewer = false;
        this.switchMeters();
    }
    switchMeters() {
        this.loading = true;
        if (this.property == 'tabularViewer') {
            this.tabularViewer = true;
            this.jsonViewer = false;
        }
        else {
            this.tabularViewer = false;
            this.jsonViewer = true;
        }
        this.switchService.getSwitchMetersList(this.switch_id).subscribe(data => {
            this.switchedMeters = data;
            this.clipBoardItems.switchMeterVal = data;
            this.showMetersJSON = false;
            this.loading = false;
        }, error => {
            this.loading = false;
            this.toastr.error(error['error'] && error['error']["error-auxiliary-message"] ? error['error']["error-auxiliary-message"] : 'Error in api response', "Error!");
        });
    }
    showMenu(e) {
        e.preventDefault();
        $('.clip-board-button').hide();
        $('.clip-board-button').css({
            top: e.pageY + 'px',
            left: (e.pageX - 220) + 'px',
            "z-index": 2,
        }).toggle();
    }
    copyToClip(event, copyItem) {
        this.clipboardService.copyFromContent(this.clipBoardItems[copyItem]);
    }
    copyToClipHtml(event, copyHtmlItem) {
        this.clipboardService.copyFromContent(jQuery('.code').text());
    }
    toggleView(e) {
        if (e.target.checked) {
            this.property = 'tabularViewer';
            this.jsonViewer = false;
        }
        else {
            this.property = 'jsonViewer';
            this.tabularViewer = false;
        }
        this[this.property] = true;
    }
};
SwitchMetersComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switch-meters',
        template: __webpack_require__(/*! ./switch-meters.component.html */ "./src/app/modules/switches/switch-meters/switch-meters.component.html"),
        styles: [__webpack_require__(/*! ./switch-meters.component.css */ "./src/app/modules/switches/switch-meters/switch-meters.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_5__["LoaderService"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_4__["ClipboardService"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"]])
], SwitchMetersComponent);



/***/ }),

/***/ "./src/app/modules/switches/switches.component.css":
/*!*********************************************************!*\
  !*** ./src/app/modules/switches/switches.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvc3dpdGNoZXMvc3dpdGNoZXMuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/switches/switches.component.html":
/*!**********************************************************!*\
  !*** ./src/app/modules/switches/switches.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<app-switch-list></app-switch-list>"

/***/ }),

/***/ "./src/app/modules/switches/switches.component.ts":
/*!********************************************************!*\
  !*** ./src/app/modules/switches/switches.component.ts ***!
  \********************************************************/
/*! exports provided: SwitchesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SwitchesComponent", function() { return SwitchesComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");






let SwitchesComponent = class SwitchesComponent {
    constructor(commonService, toastr, router) {
        this.commonService = commonService;
        this.toastr = toastr;
        this.router = router;
        this.openedTab = 'search';
        if (!this.commonService.hasPermission('menu_switches')) {
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_5__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
    }
    openTab(tab) {
        this.openedTab = tab;
    }
};
SwitchesComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-switches',
        template: __webpack_require__(/*! ./switches.component.html */ "./src/app/modules/switches/switches.component.html"),
        styles: [__webpack_require__(/*! ./switches.component.css */ "./src/app/modules/switches/switches.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_2__["CommonService"], ngx_toastr__WEBPACK_IMPORTED_MODULE_3__["ToastrService"], _angular_router__WEBPACK_IMPORTED_MODULE_4__["Router"]])
], SwitchesComponent);



/***/ }),

/***/ "./src/app/modules/topology/affected-isl/affected-isl.component.css":
/*!**************************************************************************!*\
  !*** ./src/app/modules/topology/affected-isl/affected-isl.component.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n    top: 12px !important;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS9hZmZlY3RlZC1pc2wvYWZmZWN0ZWQtaXNsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztJQUNkLG9CQUFvQjtBQUN4Qjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxpQ0FBaUM7SUFDakMsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7O0FBRUE7R0FDRyw2QkFBNkI7QUFDaEM7O0FBRUE7UUFDUSw2QkFBNkI7QUFDckMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3RvcG9sb2d5L2FmZmVjdGVkLWlzbC9hZmZlY3RlZC1pc2wuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhVGFibGUgdGZvb3Qge1xyXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgaS5mYXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZToxMnB4O1xyXG4gICAgdG9wOiAxMnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LnVwLXN0YXRlIC5kaXZUYWJsZUNlbGw6Zmlyc3QtY2hpbGQ6YmVmb3JlIHtcclxuICAgIHdpZHRoOiA4cHg7XHJcbiAgICBoZWlnaHQ6IDhweDtcclxuICAgIGJhY2tncm91bmQ6ICMxOWIzNjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMTBweDtcclxuICAgIHRvcDogMDtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSAuZmxvd0RhdGFSb3cuZG93bi1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjYjY0NTQ1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRoZWFkIHRoIHNwYW4ge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyNXB4KTtcclxuICAgIGxpbmUtaGVpZ2h0OiBub3JtYWw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIHRkIHtcclxuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCAxMHB4O1xyXG4gICAgICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDE4cHg7XHJcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgXHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0Ym9keSB0ciB0ZDpmaXJzdC1jaGlsZCB7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDI1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmRhdGFUYWJsZXNfd3JhcHBlciAuZGF0YVRhYmxlc19maWx0ZXIgaW5wdXQge1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FhYSAhaW1wb3J0YW50O1xyXG4gICAgaGVpZ2h0OiAzMHB4ICFpbXBvcnRhbnQ7XHJcbiAgICB3aWR0aDogMjQwcHggIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQob2RkKXtcclxuICAgYmFja2dyb3VuZDojZjFmMWYxICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRib2R5IHRyOm50aC1jaGlsZChldmVuKXtcclxuICAgICAgICBiYWNrZ3JvdW5kOiNmZmZmZmYgIWltcG9ydGFudDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/topology/affected-isl/affected-isl.component.html":
/*!***************************************************************************!*\
  !*** ./src/app/modules/topology/affected-isl/affected-isl.component.html ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\"><span class=\"affected_isl_icon_large\"></span><span class=\"ml-1\">AFFECTED ISL's</span></h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n<div class=\"row\">\r\n  <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n    <ul class=\"nav nav-pills\">\r\n      <li [ngClass]=\"{'active': openedTab == 'failed'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('failed')\" data-toggle=\"tab\">FAILED</a>\r\n      </li>\r\n      <li [ngClass]=\"{'active': openedTab == 'unidirectional'}\">\r\n        <a href=\"javascript:void(0)\" (click)=\"toggleTab('unidirectional')\" data-toggle=\"tab\" id=\"flow-list\">UNIDIRECTIONAL</a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"tab-content clearfix\">\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'failed'}\" id=\"1a\">\r\n        \r\n        <app-failed-isl ></app-failed-isl>\r\n      </div>\r\n      <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'unidirectional'}\" id=\"2a\">\r\n        <app-unidirectional-isl ></app-unidirectional-isl>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/topology/affected-isl/affected-isl.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/modules/topology/affected-isl/affected-isl.component.ts ***!
  \*************************************************************************/
/*! exports provided: AffectedIslComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AffectedIslComponent", function() { return AffectedIslComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");



let AffectedIslComponent = class AffectedIslComponent {
    constructor(activeModal) {
        this.activeModal = activeModal;
        this.openedTab = 'failed';
    }
    ngOnInit() { }
    toggleTab(tab) {
        if (tab === 'failed') {
            this.openedTab = 'failed';
        }
        else {
            this.openedTab = 'unidirectional';
        }
    }
};
AffectedIslComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-affected-isl',
        template: __webpack_require__(/*! ./affected-isl.component.html */ "./src/app/modules/topology/affected-isl/affected-isl.component.html"),
        styles: [__webpack_require__(/*! ./affected-isl.component.css */ "./src/app/modules/topology/affected-isl/affected-isl.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"]])
], AffectedIslComponent);



/***/ }),

/***/ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/modules/topology/export-topology-setting/export-topology-setting.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdG9wb2xvZ3kvZXhwb3J0LXRvcG9sb2d5LXNldHRpbmcvZXhwb3J0LXRvcG9sb2d5LXNldHRpbmcuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/topology/export-topology-setting/export-topology-setting.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n    <h4 class=\"modal-title\"><span class=\"export_setting_large\"></span> <span class=\"ml-1\">Export Topology Settings</span></h4>\r\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n  <div class=\"modal-body\">\r\n  <div class=\"row\">\r\n     <div class=\"col-sm-12\">\r\n         <a [href]=\"downloadCoordinatesHref\" download=\"topologysetting.json\" class=\"btn btn-sm btn-dark\" >Save to .json file</a>\r\n         <button type=\"button\"  class=\"btn btn-dark ml-3\" (click)=\"enableViewJson()\">View JSON</button>\r\n         <pre [contextMenu]=\"copyJsonSetting\" *ngIf=\"viewJson\" class=\"code mt-3\">{{settings | json}}</pre>\r\n      </div>\r\n  </div>\r\n  </div>\r\n\r\n  <context-menu #copyJsonSetting>\r\n    <ng-template contextMenuItem (execute)=\"copyToClip();\">\r\n      Copy to Clipboard\r\n    </ng-template>\r\n  </context-menu>\r\n\r\n "

/***/ }),

/***/ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/topology/export-topology-setting/export-topology-setting.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: ExportTopologySettingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ExportTopologySettingComponent", function() { return ExportTopologySettingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! src/app/common/services/topology.service */ "./src/app/common/services/topology.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var ngx_clipboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-clipboard */ "./node_modules/ngx-clipboard/fesm2015/ngx-clipboard.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");







let ExportTopologySettingComponent = class ExportTopologySettingComponent {
    constructor(topologyService, sanitizer, activeModal, clipboardService, toastr) {
        this.topologyService = topologyService;
        this.sanitizer = sanitizer;
        this.activeModal = activeModal;
        this.clipboardService = clipboardService;
        this.toastr = toastr;
        this.viewJson = false;
    }
    ngOnInit() {
        this.settings = this.topologyService.getCoordinates();
        var theJSON = JSON.stringify(this.settings);
        var uri = this.sanitizer.bypassSecurityTrustUrl("data:text/json;charset=UTF-8," + encodeURIComponent(theJSON));
        this.downloadCoordinatesHref = uri;
    }
    enableViewJson() {
        this.viewJson = true;
    }
    copyToClip() {
        let dataToCopy = JSON.stringify(this.settings);
        this.clipboardService.copyFromContent(dataToCopy);
        this.toastr.success('Copied');
    }
};
ExportTopologySettingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-export-topology-setting',
        template: __webpack_require__(/*! ./export-topology-setting.component.html */ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.html"),
        styles: [__webpack_require__(/*! ./export-topology-setting.component.css */ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__["TopologyService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__["DomSanitizer"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbActiveModal"],
        ngx_clipboard__WEBPACK_IMPORTED_MODULE_5__["ClipboardService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"]])
], ExportTopologySettingComponent);



/***/ }),

/***/ "./src/app/modules/topology/failed-isl/failed-isl.component.css":
/*!**********************************************************************!*\
  !*** ./src/app/modules/topology/failed-isl/failed-isl.component.css ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n    top: 12px !important;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS9mYWlsZWQtaXNsL2ZhaWxlZC1pc2wuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixjQUFjO0lBQ2Qsb0JBQW9CO0FBQ3hCOztBQUdBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsTUFBTTtJQUNOLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0ksVUFBVTtJQUNWLFdBQVc7SUFDWCxtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsTUFBTTtJQUNOLFNBQVM7SUFDVCxZQUFZO0lBQ1osV0FBVztBQUNmOztBQUdBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIscUJBQXFCO0lBQ3JCLHdCQUF3QjtJQUN4QixtQkFBbUI7SUFDbkIsc0JBQXNCO0FBQzFCOztBQUdBO1FBQ1Esa0JBQWtCO1FBQ2xCLHVCQUF1QjtRQUN2QixtQkFBbUI7UUFDbkIsK0JBQStCO1FBQy9CLDRCQUE0QjtRQUM1QixnQkFBZ0I7UUFDaEIsc0JBQXNCOztBQUU5Qjs7QUFFQTtJQUNJLDZCQUE2QjtBQUNqQzs7QUFFQTtJQUNJLGlDQUFpQztJQUNqQyx1QkFBdUI7SUFDdkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtBQUMzQjs7QUFFQTtHQUNHLDZCQUE2QjtBQUNoQzs7QUFFQTtRQUNRLDZCQUE2QjtBQUNyQyIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdG9wb2xvZ3kvZmFpbGVkLWlzbC9mYWlsZWQtaXNsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YVRhYmxlIHRmb290IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWhlYWRlci1ncm91cDtcclxufVxyXG5cclxudGFibGUuZGF0YVRhYmxlIGkuZmF7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICBmb250LXNpemU6MTJweDtcclxuICAgIHRvcDogMTJweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy51cC1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTliMzY1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2I2NDU0NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0aCBzcGFuIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0ZCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIFxyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdHIgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kYXRhVGFibGVzX3dyYXBwZXIgLmRhdGFUYWJsZXNfZmlsdGVyIGlucHV0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNhYWEgIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogMzBweCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI0MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxudGJvZHkgdHI6bnRoLWNoaWxkKG9kZCl7XHJcbiAgIGJhY2tncm91bmQ6I2YxZjFmMSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQoZXZlbil7XHJcbiAgICAgICAgYmFja2dyb3VuZDojZmZmZmZmICFpbXBvcnRhbnQ7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/topology/failed-isl/failed-isl.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/modules/topology/failed-isl/failed-isl.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = " <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"failed-isl-table\" class=\"isl-table-popup\" cellspacing=\"0\" width=\"100%\">\r\n<thead>\r\n    <tr class=\"tableHeading\">\r\n      \r\n      <th >\r\n        <span title=\"Source Switch\">\r\n        Src Switch\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcSwitchName')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedSrcSwitchName\" [hidden]=\"!expandedSrcSwitchName\" />\r\n      </th>\r\n      <th ></th>\r\n    \r\n      <th><span title=\"Source Port\">Src Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSrcPort')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedSrcPort\" [hidden]=\"!expandedSrcPort\"/>\r\n      </th>\r\n      \r\n      <th><span title=\"Destination Switch\">Dst Switch </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDestinationSwitchName')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedDestinationSwitchName\" [hidden]=\"!expandedDestinationSwitchName\"/>\r\n      </th>\r\n      <th ></th>\r\n      <th><span title=\"Destination Port\">Dst Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDestinationPort')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedDestinationPort\" [hidden]=\"!expandedDestinationPort\"/>\r\n      </th>\r\n      <th><span title=\"Cost\">Cost </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedCost')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedCost\" [hidden]=\"!expandedCost\"/>\r\n      </th>\r\n      <th><span title=\"State\">State </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedState')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedState\" [hidden]=\"!expandedState\"/>\r\n      </th>\r\n      <th ><span title=\"Speed(Mbps)\">Speed</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedSpeed')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedSpeed\" [hidden]=\"!expandedSpeed\"/>\r\n      </th>\r\n      <th ><span title=\"Available Bandwidth(Mbps)\">Available Bandwidth(Mbps) </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedAvailableBandwidth')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedAvailableBandwidth\" [hidden]=\"!expandedAvailableBandwidth\"/>\r\n      </th>\r\n      <th ><span title=\"Latency\">Latency</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedLatency')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedLatency\" [hidden]=\"!expandedLatency\"/>\r\n      </th>\r\n      \r\n  </thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n          <tr *ngFor=\"let row of failedISL; let i = index\" >\r\n              <td title=\"{{row.source_switch_name}}\"  class=\"divTableCell\">{{row.source_switch_name || \"-\"}}</td>\r\n              <td title=\"{{row.source_switch}}\" class=\"divTableCell\">{{row.source_switch || \"-\"}}</td>\r\n              <td title=\"{{row.src_port}}\" class=\"divTableCell\">{{row.src_port || \"-\"}}</td>\r\n              <td title=\"{{row.target_switch_name}}\"  class=\"divTableCell\">{{row.target_switch_name || \"-\"}}</td>\r\n              <td title=\"{{row.target_switch}}\" class=\"divTableCell\">{{row.target_switch || \"-\"}}</td>\r\n              <td title=\"{{row.dst_port}}\" class=\"divTableCell\">{{row.dst_port || \"-\"}}</td>\r\n              <td title=\"{{row.cost}}\" class=\"divTableCell\">{{row.cost || \"-\"}}</td>\r\n              <td title=\"{{row.state}}\" class=\"divTableCell\">{{row.state || \"-\"}}</td>\r\n              <td title=\"{{row.speed}}\" class=\"divTableCell\">{{row.speed || \"-\"}}</td>\r\n              <td title=\"{{row.available_bandwidth}}\" class=\"divTableCell\">{{row.available_bandwidth || \"-\"}}</td>\r\n              <td title=\"{{row.latency}}\" class=\"divTableCell\">{{row.latency || \"-\" }}</td>\r\n            </tr>\r\n      </tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/topology/failed-isl/failed-isl.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/modules/topology/failed-isl/failed-isl.component.ts ***!
  \*********************************************************************/
/*! exports provided: FailedIslComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FailedIslComponent", function() { return FailedIslComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/topology.service */ "./src/app/common/services/topology.service.ts");






let FailedIslComponent = class FailedIslComponent {
    constructor(switchService, renderer, topologyService) {
        this.switchService = switchService;
        this.renderer = renderer;
        this.topologyService = topologyService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.expandedSrcSwitchName = false;
        this.expandedSrcPort = false;
        this.expandedDestinationSwitchName = false;
        this.expandedDestinationPort = false;
        this.expandedCost = false;
        this.expandedState = false;
        this.expandedSpeed = false;
        this.expandedAvailableBandwidth = false;
        this.expandedLatency = false;
        this.failedISL = topologyService.getFailedIsls();
    }
    ngOnInit() {
        this.dtOptions = {
            "iDisplayLength": 8,
            "bLengthChange": false,
            retrieve: true,
            autoWidth: false,
            colResize: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            language: {
                searchPlaceholder: "Search"
            },
            drawCallback: function () {
                if (jQuery('#failed-isl-table tbody tr').length < 10) {
                    jQuery('#failed-isl-table_next').addClass('disabled');
                }
                else {
                    jQuery('#failed-isl-table_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '14%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '14%' },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '7%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '8%' }
            ],
            "columnDefs": [
                {
                    "targets": [1],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [4],
                    "visible": false,
                    "searchable": true
                }
            ]
        };
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            try {
                this.dtTrigger.next();
            }
            catch (err) { }
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], FailedIslComponent.prototype, "datatableElement", void 0);
FailedIslComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-failed-isl',
        template: __webpack_require__(/*! ./failed-isl.component.html */ "./src/app/modules/topology/failed-isl/failed-isl.component.html"),
        styles: [__webpack_require__(/*! ./failed-isl.component.css */ "./src/app/modules/topology/failed-isl/failed-isl.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_5__["TopologyService"]])
], FailedIslComponent);



/***/ }),

/***/ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/modules/topology/import-topology-setting/import-topology-setting.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdG9wb2xvZ3kvaW1wb3J0LXRvcG9sb2d5LXNldHRpbmcvaW1wb3J0LXRvcG9sb2d5LXNldHRpbmcuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/topology/import-topology-setting/import-topology-setting.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"modal-header\">\r\n  <h4 class=\"modal-title\"><span class=\"import_setting_large\"></span>\r\n    <span class=\"ml-1\">\r\n        Import Topology Settings\r\n    </span></h4>\r\n  <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\r\n    <span aria-hidden=\"true\">&times;</span>\r\n  </button>\r\n</div>\r\n<div class=\"modal-body\">\r\n<div class=\"row\">\r\n  <form  [formGroup]=\"importsettingForm\" id=\"importsetting\" (ngSubmit)=\"submitForm()\" novalidate #importsetting=\"ngForm\" enctype=\"multipart/form-data\" class=\"w-100\">\r\n    <div *ngIf=\"!importsettingForm.controls['files'].value && !importsettingForm.controls['jsondata'].value && formSubmitted \" class=\"invalid-feedback mb-3 ml-3\"> You should either provide a json file or paste json string in textarea.</div>  \r\n    <div *ngIf=\"(importsettingForm.controls['files'].value || importsettingForm.controls['jsondata'].value) && invalidJson && formSubmitted\" class=\"invalid-feedback mb-3 ml-3\">The json in the file or textarea should be a valid json!</div>\r\n    <div class=\"col-sm-12\">\r\n      <div class=\"upload_file_div\">\r\n          <button type=\"button\" [disabled]=\"importsettingForm.controls['jsondata'].value\" class=\"btn btn-sm btn-dark\" (click)=\"file.click()\">Upload .json file</button>\r\n           <span *ngIf=\"importsettingForm.controls['files'].value\" class=\"ml-2\" >{{(files && files.length) ?  files[0].name: ''}} <i (click)=\"emptyFile()\" style=\"position: absolute;\" class=\"close\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n           </i></span>\r\n            <input id=\"file\" #file type=\"file\" style=\"visibility:hidden;\" formControlName=\"files\" name=\"files\" value=\"Upload File\" (change)=\"getFile($event)\" />\r\n      </div>\r\n      <div class=\"paste_json_div\">\r\n        <div class=\"form-group\">\r\n              <label class=\"mt-3 mb-1\"> <b>Or Paste</b></label>\r\n              <textarea style=\"height:250px; background:#f5f5f5;\" (change)=\"disableField('files','jsondata')\" name=\"jsondata\" formControlName=\"jsondata\" class=\"form-control\"></textarea>\r\n          </div>\r\n        <div class=\"form-group\">           \r\n            <button type=\"submit\" class=\"btn btn-sm btn-dark\"> Save </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/topology/import-topology-setting/import-topology-setting.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: ImportTopologySettingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportTopologySettingComponent", function() { return ImportTopologySettingComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");







let ImportTopologySettingComponent = class ImportTopologySettingComponent {
    constructor(activeModal, userService, toastr, modalService, formBuilder) {
        this.activeModal = activeModal;
        this.userService = userService;
        this.toastr = toastr;
        this.modalService = modalService;
        this.formBuilder = formBuilder;
        this.formSubmitted = false;
        this.invalidJson = false;
    }
    ngOnInit() {
        this.importsettingForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormGroup"]({
            files: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](null),
            jsondata: new _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormControl"](null)
        });
    }
    getFile(e) {
        this.files = e.target.files;
        if (this.files && this.files.length) {
            let reader = new FileReader();
            let self = this;
            reader.onloadend = function (x) {
                self.jsondata = reader.result;
            };
            reader.readAsText(this.files[0]);
            this.disableField('jsondata', 'files');
        }
        else {
            this.enableField('jsondata');
            this.enableField('files');
        }
    }
    emptyFile() {
        this.formSubmitted = false;
        this.importsettingForm.controls['files'].setValue(null);
        this.disableField('jsondata', 'files');
    }
    enableField(field) {
        this.importsettingForm.controls[field].enable();
    }
    disableField(field, enablefield) {
        if (this.importsettingForm.controls[enablefield].value) {
            this.importsettingForm.controls[field].disable();
            this.enableField(enablefield);
        }
        else {
            this.enableField(field);
            this.enableField(enablefield);
        }
    }
    submitForm() {
        this.formSubmitted = true;
        if (this.jsondata && this.importsettingForm.value.files) {
            this.jsondata = JSON.parse(this.jsondata);
        }
        else {
            this.jsondata = (this.importsettingForm && this.importsettingForm.value && this.importsettingForm.value.jsondata) ? this.importsettingForm.value.jsondata : null;
        }
        this.invalidJson = !this.IsJsonString(this.jsondata);
        if (this.jsondata && !this.invalidJson) {
            this.userService
                .saveSettings(this.jsondata)
                .subscribe(() => {
                this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].import_setting_saved);
                this.modalService.dismissAll();
                let url = "topology";
                window.location.href = url;
            }, error => {
            });
        }
        return false;
    }
    IsJsonString(str) {
        try {
            if (typeof (str) == 'object') {
                str = JSON.stringify(str);
            }
            JSON.parse(str);
        }
        catch (e) {
            return false;
        }
        return true;
    }
};
ImportTopologySettingComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-import-topology-setting',
        template: __webpack_require__(/*! ./import-topology-setting.component.html */ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.html"),
        styles: [__webpack_require__(/*! ./import-topology-setting.component.css */ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbActiveModal"],
        _common_services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_2__["NgbModal"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_5__["FormBuilder"]])
], ImportTopologySettingComponent);



/***/ }),

/***/ "./src/app/modules/topology/topology-menu/topology-menu.component.css":
/*!****************************************************************************!*\
  !*** ./src/app/modules/topology/topology-menu/topology-menu.component.css ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".isl_switch_icon, .refresh_toggle, .switch_icon,.affected-isl,.import-setting,.export-setting {\r\n    font-size: 20px;\r\n    margin-right: 20px;\r\n    margin-top: -4px;\r\n    cursor: pointer;\r\n    bottom: -2px;\r\n    color: #1b1f26;\r\n    position: relative;\r\n}\r\n.isl_flow_switch {\r\n    margin-bottom: -10px;\r\n    margin-top: -7px;\r\n}\r\n.isl_flow_switch ul.refresh_list {\r\n    width: 130px;\r\n    background: #fff;\r\n    float: left;\r\n    border: 1px solid #ddd;\r\n    right: 26px;\r\n    position: absolute;\r\n    margin-top: 2px;\r\n    z-index: 9;\r\n    box-shadow: 0 2px 10px rgba(0,0,0,.2);\r\n    padding:0px;\r\n}\r\n.isl_flow_switch ul.refresh_list li.active, .isl_flow_switch ul.refresh_list li:hover {\r\n    background: #1b1f26!important;\r\n    color: #fff;\r\n}\r\n.isl_flow_switch ul.refresh_list li.stop_refresh {\r\n    margin-top: 0;\r\n}\r\n.isl_flow_switch ul.refresh_list li {\r\n    display: block;\r\n    float: none;\r\n    background: #ddd;\r\n    padding: 10px;\r\n    margin-top: 1px;\r\n    margin-right: 0;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    color: #333;\r\n    \r\n}\r\n.isl_flow_switch span{\r\n    margin: 0 12px;\r\n    vertical-align: middle;\r\n    line-height: 1.5;\r\n}\r\n.isl_flow_switch ul.refresh_list li{\r\n    font-size: 15px;\r\n    font-weight: 400;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS90b3BvbG9neS1tZW51L3RvcG9sb2d5LW1lbnUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGVBQWU7SUFDZixZQUFZO0lBQ1osY0FBYztJQUNkLGtCQUFrQjtBQUN0QjtBQUNBO0lBQ0ksb0JBQW9CO0lBQ3BCLGdCQUFnQjtBQUNwQjtBQUVBO0lBQ0ksWUFBWTtJQUNaLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFVBQVU7SUFDVixxQ0FBcUM7SUFDckMsV0FBVztBQUNmO0FBRUE7SUFDSSw2QkFBNkI7SUFDN0IsV0FBVztBQUNmO0FBRUE7SUFDSSxhQUFhO0FBQ2pCO0FBQ0E7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2IsZUFBZTtJQUNmLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLFdBQVc7O0FBRWY7QUFFQTtJQUNJLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsZ0JBQWdCO0FBQ3BCO0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS90b3BvbG9neS1tZW51L3RvcG9sb2d5LW1lbnUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5pc2xfc3dpdGNoX2ljb24sIC5yZWZyZXNoX3RvZ2dsZSwgLnN3aXRjaF9pY29uLC5hZmZlY3RlZC1pc2wsLmltcG9ydC1zZXR0aW5nLC5leHBvcnQtc2V0dGluZyB7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICBtYXJnaW4tdG9wOiAtNHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYm90dG9tOiAtMnB4O1xyXG4gICAgY29sb3I6ICMxYjFmMjY7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLmlzbF9mbG93X3N3aXRjaCB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAtMTBweDtcclxuICAgIG1hcmdpbi10b3A6IC03cHg7XHJcbn1cclxuXHJcbi5pc2xfZmxvd19zd2l0Y2ggdWwucmVmcmVzaF9saXN0IHtcclxuICAgIHdpZHRoOiAxMzBweDtcclxuICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XHJcbiAgICByaWdodDogMjZweDtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIG1hcmdpbi10b3A6IDJweDtcclxuICAgIHotaW5kZXg6IDk7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCAxMHB4IHJnYmEoMCwwLDAsLjIpO1xyXG4gICAgcGFkZGluZzowcHg7XHJcbn1cclxuXHJcbi5pc2xfZmxvd19zd2l0Y2ggdWwucmVmcmVzaF9saXN0IGxpLmFjdGl2ZSwgLmlzbF9mbG93X3N3aXRjaCB1bC5yZWZyZXNoX2xpc3QgbGk6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogIzFiMWYyNiFpbXBvcnRhbnQ7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxufVxyXG5cclxuLmlzbF9mbG93X3N3aXRjaCB1bC5yZWZyZXNoX2xpc3QgbGkuc3RvcF9yZWZyZXNoIHtcclxuICAgIG1hcmdpbi10b3A6IDA7XHJcbn1cclxuLmlzbF9mbG93X3N3aXRjaCB1bC5yZWZyZXNoX2xpc3QgbGkge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBmbG9hdDogbm9uZTtcclxuICAgIGJhY2tncm91bmQ6ICNkZGQ7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMXB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgICBcclxufVxyXG5cclxuLmlzbF9mbG93X3N3aXRjaCBzcGFue1xyXG4gICAgbWFyZ2luOiAwIDEycHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxufVxyXG5cclxuLmlzbF9mbG93X3N3aXRjaCB1bC5yZWZyZXNoX2xpc3QgbGl7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/topology/topology-menu/topology-menu.component.html":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/topology/topology-menu/topology-menu.component.html ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"isl_flow_switch\">\r\n  <input type=\"hidden\" id=\"auto_refresh\" value=\"false\">\r\n  <input type=\"hidden\" id=\"auto_refresh_interval\">\r\n  <input type=\"hidden\" id=\"m_s_dropdown\">\r\n  <input type=\"hidden\" id=\"switch\">\r\n\r\n  <span *ngIf=\"commonService.hasPermission('topology_world_map_view')\" class=\"world-map-view\" ngbPopover=\"{{worldMapText}}\" popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\" data-toggle=\"modal\" id=\"viewWorldMap\" (click)=\"showWorldMap()\">\r\n    <i class=\"fa fa-map-o\" aria-hidden=\"true\"></i>\r\n  </span>\r\n  <span *ngIf=\"!this.defaultSetting.WORLDMAP\" class=\"affected-isl\" ngbPopover=\"Affected ISL\" popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\" data-toggle=\"modal\" id=\"viewISL\" (click)=\"showAffectedISL()\">\r\n    <i class=\"icon-affected-isl\" aria-hidden=\"true\"></i>\r\n  </span>\r\n  <span *ngIf=\"!this.defaultSetting.WORLDMAP\" (click)=\"showSwitch()\" ngbPopover=\"Show Switch\" popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\" class=\"switch_icon custom-icon\" id=\"switch_icon\">\r\n\r\n    <i [class.icon-switch]=\"this.defaultSetting.SWITCH_CHECKED\" [class.inactive-icon-switch]=\"!this.defaultSetting.SWITCH_CHECKED\"\r\n      aria-hidden=\"true\"></i>\r\n  </span>\r\n  <span *ngIf=\"this.defaultSetting.FLOW_CHECKED && !this.defaultSetting.WORLDMAP\" (click)=\"showIsl()\" data-balloon-pos=\"down\" ngbPopover=\"Show ISL\"\r\n    popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\" class=\"isl_switch_icon custom-icon\"\r\n    id=\"logical\">\r\n    <i class=\"icon-isl\" aria-hidden=\"true\"></i></span>\r\n\r\n  <span *ngIf=\"this.defaultSetting.ISL_CHECKED && !this.defaultSetting.WORLDMAP\" (click)=\"showFlow()\" data-balloon-pos=\"down\" ngbPopover=\"Show Flows\" popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\" class=\"isl_switch_icon custom-icon\" id=\"physical\" style=\"\">\r\n\r\n    <i class=\"icon-flows\" aria-hidden=\"true\"></i>\r\n  </span>\r\n  <div *ngIf=\"!this.defaultSetting.WORLDMAP\" class=\"import-export-setting d-inline-block align-middle\" ngbDropdown placement=\"bottom-right\" >\r\n    <span  id=\"dropdownBasic1\" ngbDropdownToggle><i class=\"icon-import-export-setting\" aria-hidden=\"true\"></i></span>\r\n    <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n      <button (click)=\"exportSetting()\" class=\"dropdown-item export-setting\">\r\n          <i class=\"icon-export-setting\" aria-hidden=\"true\"></i>  &nbsp; Export\r\n      </button>\r\n      <button class=\"dropdown-item import-setting\"  (click)=\"importSettingModal()\">\r\n        <i class=\"icon-import-setting\" aria-hidden=\"true\"></i>  &nbsp; Import\r\n      </button>\r\n     </div>\r\n  </div>\r\n  \r\n\r\n  <span *ngIf=\"!this.defaultSetting.WORLDMAP\" (clickOutside)=\"onClickedOutside($event,'refreshMenu')\" ngbPopover=\"Refresh\" popoverClass=\"popover-sm\" placement=\"bottom\" container=\"body\" triggers=\"mouseenter:mouseleave\"\r\n    class=\"refresh_toggle custom-icon\" (click)=\"toggleRefreshMenu()\">\r\n    <i class=\"icon-refresh-kilda\" [class.active]=\"defaultSetting.REFRESH_CHECKED\"></i>\r\n  </span>\r\n  <ul *ngIf=\"!this.defaultSetting.WORLDMAP\" class=\"refresh_list\" [@changeState]=\"refreshMenu\">\r\n    <li class=\"stop_refresh\" [class.active]=\"!defaultSetting.REFRESH_CHECKED\" (click)=\"stopAutoRefresh()\"><i class=\"fa fa-check\"></i> STOP</li>\r\n    <li *ngFor=\"let interval of refreshIntervals\" [class.active]=\"defaultSetting.REFRESH_CHECKED && defaultSetting.REFRESH_INTERVAL== interval.value\" class=\"refresh_option\" (click)=\"setAutoRefresh(interval.value)\"><i class=\"fa fa-check\"></i> {{interval.label}}</li>\r\n   </ul>\r\n  <span (clickOutside)=\"onClickedOutside($event,'showInfoFlag')\" (click)=\"showInfo()\" class=\"refresh_toggle custom-icon\"><i class=\"info-icon\" aria-hidden=\"true\"></i></span>\r\n  </div>\r\n<div *ngIf=\"!this.defaultSetting.WORLDMAP\" class=\"topology-txt\" id=\"topology-txt\" [@changeState]=\"showInfoFlag\">\r\n  <h1 align=\"center\">Information</h1>\r\n  <p> 1. Graph represents all logical (Flows) and physical (ISLs) links between switches and their state.</p>\r\n  <p> 2. One can drag the switches in any direction to have a better view of the connections.</p>\r\n  <p> 3. Hovering over a switch or a physical link will show the details, resp.</p>\r\n  <p> 4. Single click in case of physical link and double click in case of switch will redirect one to the details page of the clicked object.</p>\r\n  <p> 5. Clicking on the physical link will redirect one to the details page of the ISL along with the graph of data being transferred through it.</p>\r\n  <p> 6. Clicking on logical link will redirect one to the Flows LIST page that lists all the flows, present between the two switches, and their details in a tabular form.</p>\r\n  <p> 7. Number mentioned on logical link represents the number of flows present between two switches.</p>\r\n  <p> 8. Clicking, twice, on the switch will redirect one to the Switch details page along with the PORT DETAILS.</p>\r\n  <p> 9. One can perform the following operations by using the button menu on the mid-right corner of the Canvas:</p>\r\n    <p> >> Search for the desired switch.</p>\r\n    <p> >> Maximize or Minimize the topology.</p>\r\n    <p> >> Reset the topology to its initial state.</p>\r\n  <div class=\"clear clearfix\"></div>\r\n</div>\r\n\r\n \r\n"

/***/ }),

/***/ "./src/app/modules/topology/topology-menu/topology-menu.component.ts":
/*!***************************************************************************!*\
  !*** ./src/app/modules/topology/topology-menu/topology-menu.component.ts ***!
  \***************************************************************************/
/*! exports provided: TopologyMenuComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopologyMenuComponent", function() { return TopologyMenuComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/topology.service */ "./src/app/common/services/topology.service.ts");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm2015/animations.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _affected_isl_affected_isl_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../affected-isl/affected-isl.component */ "./src/app/modules/topology/affected-isl/affected-isl.component.ts");
/* harmony import */ var _import_topology_setting_import_topology_setting_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../import-topology-setting/import-topology-setting.component */ "./src/app/modules/topology/import-topology-setting/import-topology-setting.component.ts");
/* harmony import */ var _export_topology_setting_export_topology_setting_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../export-topology-setting/export-topology-setting.component */ "./src/app/modules/topology/export-topology-setting/export-topology-setting.component.ts");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");









let TopologyMenuComponent = class TopologyMenuComponent {
    constructor(topologyService, modalService, commonService) {
        this.topologyService = topologyService;
        this.modalService = modalService;
        this.commonService = commonService;
        this.refreshMenu = "hide";
        this.showInfoFlag = "hide";
        this.worldMapText = "World Map View";
        this.submenu = '';
        this.refreshIntervals = [
            { label: "30 SECONDS", value: 30 },
            { label: "45 SECONDS", value: 45 },
            { label: "1 MINUTE", value: 60 },
            { label: "2 MINUTES", value: 120 },
            { label: "3 MINUTES", value: 180 },
            { label: "5 MINUTES", value: 300 },
            { label: "10 MINUTES", value: 600 },
            { label: "15 MINUTES", value: 900 },
            { label: "30 MINUTES", value: 1800 },
        ];
        this.linksdata = [];
        this.setAutoRefresh = (refreshInterval) => {
            let currentSettings = this.defaultSetting;
            currentSettings.REFRESH_INTERVAL = refreshInterval; /** Interval in seconds */
            currentSettings.REFRESH_CHECKED = 1;
            this.topologyService.setAutoRefreshSetting(currentSettings);
            this.toggleRefreshMenu();
        };
        this.stopAutoRefresh = () => {
            let currentSettings = this.defaultSetting;
            currentSettings.REFRESH_CHECKED = 0;
            currentSettings.REFRESH_INTERVAL = 0;
            this.topologyService.setAutoRefreshSetting(currentSettings);
            this.toggleRefreshMenu();
        };
        this.showInfo = () => {
            this.showInfoFlag = this.showInfoFlag == "hide" ? "show" : "hide";
        };
    }
    ngOnInit() {
        this.defaultSetting = this.topologyService.getViewOptions();
        if (!this.commonService.hasPermission('topology_world_map_view')) {
            this.defaultSetting.WORLDMAP = 0;
        }
        if (this.defaultSetting.WORLDMAP) {
            this.worldMapText = "Topology View";
        }
        else {
            this.worldMapText = "World Map View";
        }
        this.topologyService.settingReceiver.subscribe((data) => {
            this.defaultSetting = data;
        });
        this.topologyService.autoRefreshReceiver.subscribe((data) => {
            this.defaultSetting = data;
        });
    }
    toggleRefreshMenu() {
        this.refreshMenu = this.refreshMenu == "hide" ? "show" : "hide";
    }
    showWorldMap() {
        let settings = this.topologyService.getViewOptions();
        var val = (settings.WORLDMAP == 0) ? 1 : 0;
        if (val) {
            this.worldMapText = "Topology View";
        }
        else {
            this.worldMapText = "World Map View";
        }
        settings.WORLDMAP = val;
        this.topologyService.setViewOptinos(settings);
    }
    showIsl() {
        let settings = this.defaultSetting;
        settings.ISL_CHECKED = 1;
        settings.FLOW_CHECKED = 0;
        this.topologyService.setViewOptinos(settings);
    }
    openSubmenu(id) {
        if (this.submenu == id) {
            this.submenu = '';
        }
        else {
            this.submenu = id;
        }
    }
    showFlow() {
        let settings = this.defaultSetting;
        settings.ISL_CHECKED = 0;
        settings.FLOW_CHECKED = 1;
        this.topologyService.setViewOptinos(settings);
    }
    showSwitch() {
        let settings = this.defaultSetting;
        settings.SWITCH_CHECKED = settings.SWITCH_CHECKED ? 0 : 1;
        this.topologyService.setViewOptinos(settings);
    }
    importSettingModal() {
        const modalRef = this.modalService.open(_import_topology_setting_import_topology_setting_component__WEBPACK_IMPORTED_MODULE_6__["ImportTopologySettingComponent"], { size: 'lg', windowClass: 'modal-import-setting slideInUp' });
    }
    showAffectedISL() {
        const modalRef = this.modalService.open(_affected_isl_affected_isl_component__WEBPACK_IMPORTED_MODULE_5__["AffectedIslComponent"], { size: 'lg', windowClass: 'modal-isl slideInUp' });
    }
    exportSetting() {
        const modalRef = this.modalService.open(_export_topology_setting_export_topology_setting_component__WEBPACK_IMPORTED_MODULE_7__["ExportTopologySettingComponent"], { size: 'lg', windowClass: 'modal-import-setting slideInUp' });
    }
    onClickedOutside(e, type) {
        this[type] = "hide";
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], TopologyMenuComponent.prototype, "currentState", void 0);
TopologyMenuComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-topology-menu",
        template: __webpack_require__(/*! ./topology-menu.component.html */ "./src/app/modules/topology/topology-menu/topology-menu.component.html"),
        animations: [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["trigger"])("changeState", [
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["state"])("show", Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["style"])({
                    opacity: 1,
                    display: "block",
                    "min-height": "200px",
                    transition: "all 0.4s ease-in-out"
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["state"])("hide", Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["style"])({
                    opacity: 0,
                    display: "none",
                    height: "0px",
                    transition: "all 0.4s ease-in-out"
                })),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["transition"])("show=>hide", Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["animate"])("30ms")),
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["transition"])("hide=>show", Object(_angular_animations__WEBPACK_IMPORTED_MODULE_3__["animate"])("30ms"))
            ])
        ],
        styles: [__webpack_require__(/*! ./topology-menu.component.css */ "./src/app/modules/topology/topology-menu/topology-menu.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__["TopologyService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_4__["NgbModal"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"]])
], TopologyMenuComponent);



/***/ }),

/***/ "./src/app/modules/topology/topology.component.css":
/*!*********************************************************!*\
  !*** ./src/app/modules/topology/topology.component.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".check-connections {\r\n    margin-top: 10px;\r\n    float: right;\r\n    width: 135px;\r\n    clear: both;\r\n}\r\n\r\n.checkbox-btns {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 3px;\r\n    z-index: 3;\r\n    top: 0;\r\n    height: 184px;\r\n    background: rgba(0,0,0,0.75);\r\n    margin: auto;\r\n    color: #fff;\r\n    padding: 2px;\r\n    border-radius: 3px;\r\n}\r\n\r\n#ui-container {\r\n    position: relative;\r\n}\r\n\r\n#ui-container #search {\r\n    height: 45px;\r\n    padding: 0 10px;\r\n    position: relative;\r\n    z-index: 1;\r\n    color: #333;\r\n    right: 0;\r\n    border: 1px solid #ccc;\r\n    border-right: none;\r\n    width: calc(100% - 45px);\r\n    float: left;\r\n    border-radius: 3px 0 0 3px;\r\n}\r\n\r\n#ui-container.active .search-container {\r\n    display: block;\r\n    position: absolute;\r\n    right: 100%;\r\n    height: 45px;\r\n    width: 220px;\r\n}\r\n\r\n#ui-container.active .search-container input {\r\n    height: 45px;\r\n    width: 100%;\r\n    padding: 0 10px;\r\n}\r\n\r\n#ui-container .search-container {\r\n    display: none;\r\n}\r\n\r\n.checkbox-btns i:hover, #ui-container.active i {\r\n    background: rgba(255,255,255,0.25);\r\n}\r\n\r\nsvg:not(:root) {\r\n    overflow: hidden;\r\n}\r\n\r\nsvg {\r\n    width: 100% !important;\r\n    height: 100% !important;\r\n    z-index: 2;\r\n    left: 0;\r\n    right: 0;\r\n    top: 50px;\r\n    position: absolute;\r\n    /*padding-top:80px;*/\r\n}\r\n\r\n.search-container .ta-results{\r\n    widows: 100%;\r\n\r\n}\r\n\r\n.search-container .ta-results button{\r\n    padding: 6px;\r\n}\r\n\r\n.links line {\r\n    stroke: #76963e;\r\n    stroke-width: 1.0px;\r\n    stroke-opacity: 1.5;\r\n  }\r\n\r\n.nodes circle {\r\n    stroke: green;\r\n    stroke-width: 0.5px;\r\n  }\r\n\r\n#ib-d3-graph-div {\r\n    height: 500px;\r\n    width: 960px;\r\n  }\r\n\r\n#testSvgId {\r\n    height: 500px;\r\n    width: 960px;\r\n  }\r\n\r\n#backgroundId {\r\n    height: 500px;\r\n    width: 960px;\r\n  }\r\n\r\ntext {\r\n    font: bold 12px monospace;\r\n  }\r\n  \r\n  \r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS90b3BvbG9neS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osV0FBVztBQUNmOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFNBQVM7SUFDVCxVQUFVO0lBQ1YsVUFBVTtJQUNWLE1BQU07SUFDTixhQUFhO0lBQ2IsNEJBQTRCO0lBQzVCLFlBQVk7SUFDWixXQUFXO0lBQ1gsWUFBWTtJQUNaLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFHQTtJQUNJLFlBQVk7SUFDWixlQUFlO0lBQ2Ysa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixXQUFXO0lBQ1gsUUFBUTtJQUNSLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsd0JBQXdCO0lBQ3hCLFdBQVc7SUFDWCwwQkFBMEI7QUFDOUI7O0FBQ0E7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLFVBQVU7SUFDVixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7SUFDVCxrQkFBa0I7SUFDbEIsb0JBQW9CO0FBQ3hCOztBQUdBO0lBQ0ksWUFBWTs7QUFFaEI7O0FBQ0E7SUFDSSxZQUFZO0FBQ2hCOztBQUdBO0lBQ0ksZUFBZTtJQUNmLG1CQUFtQjtJQUNuQixtQkFBbUI7RUFDckI7O0FBRUE7SUFDRSxhQUFhO0lBQ2IsbUJBQW1CO0VBQ3JCOztBQUVBO0lBQ0UsYUFBYTtJQUNiLFlBQVk7RUFDZDs7QUFFQTtJQUNFLGFBQWE7SUFDYixZQUFZO0VBQ2Q7O0FBRUE7SUFDRSxhQUFhO0lBQ2IsWUFBWTtFQUNkOztBQUVBO0lBQ0UseUJBQXlCO0VBQzNCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS90b3BvbG9neS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoZWNrLWNvbm5lY3Rpb25zIHtcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgICB3aWR0aDogMTM1cHg7XHJcbiAgICBjbGVhcjogYm90aDtcclxufVxyXG5cclxuLmNoZWNrYm94LWJ0bnMge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgcmlnaHQ6IDNweDtcclxuICAgIHotaW5kZXg6IDM7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBoZWlnaHQ6IDE4NHB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgwLDAsMCwwLjc1KTtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcGFkZGluZzogMnB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xyXG59XHJcblxyXG4jdWktY29udGFpbmVyIHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuXHJcbiN1aS1jb250YWluZXIgI3NlYXJjaCB7XHJcbiAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICBwYWRkaW5nOiAwIDEwcHg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB6LWluZGV4OiAxO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgICByaWdodDogMDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gNDVweCk7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDNweCAwIDAgM3B4O1xyXG59XHJcbiN1aS1jb250YWluZXIuYWN0aXZlIC5zZWFyY2gtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICB3aWR0aDogMjIwcHg7XHJcbn1cclxuXHJcbiN1aS1jb250YWluZXIuYWN0aXZlIC5zZWFyY2gtY29udGFpbmVyIGlucHV0IHtcclxuICAgIGhlaWdodDogNDVweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogMCAxMHB4O1xyXG59XHJcblxyXG4jdWktY29udGFpbmVyIC5zZWFyY2gtY29udGFpbmVyIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi5jaGVja2JveC1idG5zIGk6aG92ZXIsICN1aS1jb250YWluZXIuYWN0aXZlIGkge1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsMjU1LDI1NSwwLjI1KTtcclxufVxyXG5cclxuc3ZnOm5vdCg6cm9vdCkge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuc3ZnIHtcclxuICAgIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICAgIHotaW5kZXg6IDI7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB0b3A6IDUwcHg7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAvKnBhZGRpbmctdG9wOjgwcHg7Ki9cclxufVxyXG5cclxuXHJcbi5zZWFyY2gtY29udGFpbmVyIC50YS1yZXN1bHRze1xyXG4gICAgd2lkb3dzOiAxMDAlO1xyXG5cclxufVxyXG4uc2VhcmNoLWNvbnRhaW5lciAudGEtcmVzdWx0cyBidXR0b257XHJcbiAgICBwYWRkaW5nOiA2cHg7XHJcbn1cclxuXHJcblxyXG4ubGlua3MgbGluZSB7XHJcbiAgICBzdHJva2U6ICM3Njk2M2U7XHJcbiAgICBzdHJva2Utd2lkdGg6IDEuMHB4O1xyXG4gICAgc3Ryb2tlLW9wYWNpdHk6IDEuNTtcclxuICB9XHJcbiAgXHJcbiAgLm5vZGVzIGNpcmNsZSB7XHJcbiAgICBzdHJva2U6IGdyZWVuO1xyXG4gICAgc3Ryb2tlLXdpZHRoOiAwLjVweDtcclxuICB9XHJcbiAgXHJcbiAgI2liLWQzLWdyYXBoLWRpdiB7XHJcbiAgICBoZWlnaHQ6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDk2MHB4O1xyXG4gIH1cclxuICAgIFxyXG4gICN0ZXN0U3ZnSWQge1xyXG4gICAgaGVpZ2h0OiA1MDBweDtcclxuICAgIHdpZHRoOiA5NjBweDtcclxuICB9XHJcbiAgICBcclxuICAjYmFja2dyb3VuZElkIHtcclxuICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICB3aWR0aDogOTYwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIHRleHQge1xyXG4gICAgZm9udDogYm9sZCAxMnB4IG1vbm9zcGFjZTtcclxuICB9XHJcbiAgXHJcbiAgXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/modules/topology/topology.component.html":
/*!**********************************************************!*\
  !*** ./src/app/modules/topology/topology.component.html ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"row\">\r\n  <div id=\"switchesgraph\" class=\"topology-container\" [hidden]=\"showWorldMap\">\r\n    <div class=\"graph-wrapper\" [hidden]=\"graphShow\"></div>\r\n  <svg id=\"topology_graph\" width=\"1100\" height=\"450\"></svg>\r\n</div>\r\n  <div class=\"row\">\r\n    <ng-template #itemTpl let-result>\r\n        <span> {{ result.result }}</span>\r\n    </ng-template>\r\n  <div class=\"checkbox-wrapper pull-right\" [hidden]=\"showWorldMap\">\r\n    <div class=\"check-connections\">\r\n      <div class=\"checkbox-btns\">\r\n        <div id=\"ui-container\" class=\"ui-widget\" [class.active]=\"searchView\">\r\n          <div class=\"search-container\"><input  id=\"search-bar\" placeholder=\"Search\" [(ngModel)]=\"searchModel\" (selectItem)=\"searchNode($event.item)\" (focusout)=\"searchHidden = true\" [ngbTypeahead]=\"search\"></div>\r\n        </div>\r\n        <i id=\"searchbox\" (click)=\"toggleSearch()\" class=\"fa fa-search\" title=\"Search\"></i>\r\n        <i id=\"zoom_in\" (click)=\"zoomFn(1)\" title=\"Zoom In\">+</i>\r\n        <i id=\"zoom_out\" (click)=\"zoomFn(-1)\" title=\"Zoom Out\">-</i>\r\n        <i id=\"reset\" class=\"fa fa-undo\" (click)=\"zoomReset()\" title=\"Reset\"></i>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n<div id=\"topology-click-txt\">\r\n  <button id=\"close_switch_detail\" style=\"margin-right:5px;\" type=\"button\" class=\"close right\" aria-label=\"Close\">\r\n    <span aria-hidden=\"true\">×</span>\r\n  </button>\r\n  <div class=\"form-wrapper\" id=\"switch_click\" style=\"display:none\">\r\n\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Name:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_click_switch_name\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">SwitchId:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_click_name\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">State:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_click_state\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Address:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_click_address\"></p>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Description:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_click_desc\"></p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"topology-hover-txt\" style=\"display: none; top: 339.089px; left: 596.811px;\" class=\"\">\r\n\t\t\r\n  <div class=\"form-wrapper\" id=\"switch_hover\" style=\"display: none;\">\r\n\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Name:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_switch_name\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">SwitchId:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_name\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">State:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_state\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Address:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_address\"></p>\r\n    </div>\r\n    \r\n    <div class=\"row\">\r\n      <label class=\"col-sm-3 col-form-label\" style=\"font-weight: bold;\">Description:</label>\r\n      <p class=\"col-sm-9 switchdetails_div_desc\"></p>\r\n    </div>\r\n  </div>\r\n  \r\n  <div class=\"form-wrapper\" id=\"isl_hover\" style=\"display: none;\">\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Src Switch:</label>\r\n      <p class=\"col-sm-6 isldetails_div_source_switch\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Src Port:</label>\r\n      <p class=\"col-sm-6 isldetails_div_source_port\"></p>\r\n    </div>\r\n    <div class=\" row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Dst Switch:</label>\r\n      <p class=\"col-sm-6 isldetails_div_destination_switch\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Dst Port:</label>\r\n      <p class=\"col-sm-6 isldetails_div_destination_port\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Cost:</label>\r\n      <p class=\"col-sm-6 isldetails_div_cost\"></p>\r\n    </div>\r\n      <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">State:</label>\r\n      <p class=\"col-sm-6 isldetails_div_state\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Max Bandwidth:</label>\r\n      <p class=\"col-sm-6 isldetails_div_speed\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Under Maintenance:</label>\r\n      <p class=\"col-sm-6 isldetails_div_maintenance\"></p>\r\n    </div>\r\n    <div class=\"row\">\r\n      <label class=\"col-sm-5 col-form-label\" style=\"font-weight: bold;\">Available Bandwidth:</label>\r\n      <p class=\"col-sm-6 isldetails_div_bandwidth\"></p>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n</div>\r\n\r\n<div id=\"worldmap\" class=\"world-map-container\" [hidden]=\"!showWorldMap\">  \r\n  <app-world-map-view [data]=\"graphdata\" *ngIf=\"showWorldMap\"></app-world-map-view>\r\n</div>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/topology/topology.component.ts":
/*!********************************************************!*\
  !*** ./src/app/modules/topology/topology.component.ts ***!
  \********************************************************/
/*! exports provided: TopologyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TopologyComponent", function() { return TopologyComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/services/topology.service */ "./src/app/common/services/topology.service.ts");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/enums/isl.enum */ "./src/app/common/enums/isl.enum.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! d3 */ "./node_modules/d3/index.js");
/* harmony import */ var _common_services_flows_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../common/services/flows.service */ "./src/app/common/services/flows.service.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm2015/operators/index.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");
















let TopologyComponent = class TopologyComponent {
    constructor(topologyService, switchService, userService, commonService, flowService, renderer, router, appLoader, toaster, titleService) {
        this.topologyService = topologyService;
        this.switchService = switchService;
        this.userService = userService;
        this.commonService = commonService;
        this.flowService = flowService;
        this.renderer = renderer;
        this.router = router;
        this.appLoader = appLoader;
        this.toaster = toaster;
        this.titleService = titleService;
        this.nodes = [];
        this.links = [];
        this.flows = [];
        this.searchCase = false;
        this.searchView = false;
        this.searchModel = "";
        this.searchHidden = false;
        this.showWorldMap = false;
        this.graphShow = false;
        this.loadWorldMap = false;
        this.min_zoom = 0.15;
        this.scaleLimit = 0.05;
        this.max_zoom = 3;
        this.zoomLevel = 0.15;
        this.zoomStep = 0.15;
        this.translateX = 0;
        this.translateY = 0;
        this.linksSourceArr = [];
        this.new_nodes = false;
        this.optArray = [];
        this.mLinkNum = {};
        this.linkedByIndex = {};
        this.isDragMove = true;
        this.flagHover = true;
        this.graphdata = { switch: [], isl: [], flow: [] };
        this.syncCoordinates = null;
        this.graphOptions = {
            radius: 35,
            text_center: false,
            nominal_text_size: 10,
            nominal_base_node_size: 40,
            nominal_stroke: 1.5,
            max_stroke: 4.5,
            max_base_node_size: 36,
            max_text_size: 24
        };
        this.search = (text$) => text$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__["debounceTime"])(200), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_9__["map"])(term => term.length < 1 ? []
            : this.optArray.filter(v => v.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)));
        this.loadSwitchList = () => {
            this.switchService.getSwitchList().subscribe(switches => {
                this.graphdata.switch = switches || [];
                if (this.graphdata.switch.length > 0) {
                    this.loadSwitchLinks();
                }
                else {
                    this.toaster.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].no_switch_available, "Information");
                    this.appLoader.hide();
                }
            }, err => {
                this.appLoader.hide();
                this.toaster.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].no_switch_available, "Information");
            });
        };
        this.loadSwitchLinks = () => {
            this.switchService.getSwitchLinks().subscribe(links => {
                try {
                    if (links) {
                        this.graphdata.isl = links || [];
                        this.topologyService.setLinksData(links);
                    }
                    if (this.viewOptions.FLOW_CHECKED) {
                        this.loadFlowCount();
                    }
                    else {
                        this.initGraph();
                    }
                }
                catch (err) {
                    this.initGraph();
                }
            }, error => {
                this.loadFlowCount();
            });
        };
        this.loadFlowCount = () => {
            this.flowService.getFlowCount().subscribe(flow => {
                this.graphdata.flow = flow || [];
                this.initGraph();
            }, error => {
                this.initGraph();
            });
        };
        this.initGraph = () => {
            let ref = this;
            if (this.graphdata.switch.length == 0 &&
                this.graphdata.isl.length == 0 &&
                this.graphdata.flow.length == 0) {
                this.appLoader.hide();
            }
            /*
                 * A force layout requires two data arrays. The first array, here named
                 * nodes, contains the object that are the focal point of the visualization.
                 * The second array, called links below, identifies all the links between
                 * the nodes.
                 */
            this.nodes = this.graphdata.switch;
            this.links = this.graphdata.isl;
            this.flows = this.graphdata.flow;
            this.linksSourceArr = [];
            var linksArr = [];
            if (this.nodes.length < 50) {
                this.min_zoom = 0.5;
                this.zoom.scaleExtent([this.scaleLimit, this.max_zoom]);
            }
            if (this.links.length > 0) {
                try {
                    var result = this.commonService.groupBy(this.links, function (item) {
                        return [item.source_switch, item.target_switch];
                    });
                    for (var i = 0, len = result.length; i < len; i++) {
                        var row = result[i];
                        if (row.length >= 1) {
                            for (var j = 0, len1 = row.length; j < len1; j++) {
                                var key = row[j].source_switch + "_" + row[j].target_switch;
                                var key1 = row[j].target_switch + "_" + row[j].source_switch;
                                var prcessKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
                                if (typeof this.linksSourceArr[prcessKey] !== "undefined") {
                                    this.linksSourceArr[prcessKey].push(row[j]);
                                }
                                else {
                                    this.linksSourceArr[key] = [];
                                    this.linksSourceArr[key].push(row[j]);
                                }
                            }
                        }
                    }
                }
                catch (e) { }
            }
            if (this.flows.length > 0) {
                this.links = this.links.concat(this.flows);
            }
            this.optArray = this.optArray.sort();
            // calculating nodes
            var nodelength = this.nodes.length;
            var linklength = this.links.length;
            for (var i = 0; i < nodelength; i++) {
                this.optArray.push((this.nodes[i].name));
                for (var j = 0; j < linklength; j++) {
                    if (this.nodes[i].switch_id == this.links[j]["source_switch"] &&
                        this.nodes[i].switch_id == this.links[j]["target_switch"]) {
                        this.links[j].source = i;
                        this.links[j].target = i;
                    }
                    else {
                        var key = this.links[j]["source_switch"] + "_" + this.links[j]["target_switch"];
                        var key1 = this.links[j]["target_switch"] + "_" + this.links[j]["source_switch"];
                        var processKey = this.linksSourceArr && typeof this.linksSourceArr[key] != 'undefined' ? key : key1;
                        var sourceObj = processKey.split("_")[0];
                        var targetObj = processKey.split("_")[1];
                        if (this.nodes[i].switch_id == sourceObj) {
                            this.links[j].source = i;
                        }
                        else if (this.nodes[i].switch_id == targetObj) {
                            this.links[j].target = i;
                        }
                    }
                }
            }
            this.sortLinks();
            this.setLinkIndexAndNum();
            this.forceSimulation.nodes(this.nodes);
            this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_7__["forceLink"]().links(this.links).distance((d) => {
                let distance = 150;
                try {
                    if (!d.flow_count) {
                        if (d.speed == "40000000") {
                            distance = 100;
                        }
                        else {
                            distance = 300;
                        }
                    }
                }
                catch (e) { }
                return distance;
            }).strength(0.1));
            this.forceSimulation.stop();
            this.forceSimulation.on("tick", () => {
                this.repositionNodes();
                this.tick();
            });
            this.drag = d3__WEBPACK_IMPORTED_MODULE_7__["drag"]()
                .on("start", this.dragStart)
                .on("drag", this.dragging)
                .on("end", this.dragEnd);
            this.insertLinks(this.links);
            this.insertNodes(this.nodes);
            this.insertCircles();
            this.svgElement.call(this.zoom);
            this.svgElement.on("dblclick.zoom", null);
            this.forceSimulation.restart();
            this.forceSimulation.on("end", () => {
                this.appLoader.hide();
                this.graphShow = true;
                this.onViewSettingUpdate(this.viewOptions, true);
                this.zoomFit();
                let positions = this.topologyService.getCoordinates();
                if (!positions) {
                    this.zoomReset();
                }
            });
        };
        this.repositionNodes = () => {
            let positions = this.topologyService.getCoordinates();
            if (positions) {
                d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"]("g.node").attr("transform", function (d) {
                    try {
                        d.x = positions[d.switch_id][0];
                        d.y = positions[d.switch_id][1];
                    }
                    catch (e) { }
                    if (d.x && d.y)
                        return "translate(" + d.x + "," + d.y + ")";
                });
            }
        };
        this.tick = () => {
            let ref = this;
            var lookup = {};
            this.graphLink.attr("d", d => {
                var islCount = 0;
                var matchedIndex = 1;
                var key = d.source_switch + "_" + d.target_switch;
                var key1 = d.target_switch + "_" + d.source_switch;
                var processKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
                if (this.linksSourceArr &&
                    typeof this.linksSourceArr[processKey] !== "undefined") {
                    islCount = this.linksSourceArr[processKey].length;
                }
                if (islCount > 1) {
                    this.linksSourceArr[processKey].map(function (o, i) {
                        if (ref.isObjEquivalent(o, d)) {
                            matchedIndex = i + 1;
                            return;
                        }
                    });
                }
                var x1 = d.source.x, y1 = d.source.y, x2 = d.target.x, y2 = d.target.y, dx = x2 - x1, dy = y2 - y1, dr = Math.sqrt(dx * dx + dy * dy), 
                // Defaults for normal edge.
                drx = dr, dry = dr, xRotation = 0, // degrees
                largeArc = 0, // 1 or 0
                sweep = 1; // 1 or 0
                var lTotalLinkNum = this.mLinkNum[d.source.index + "," + d.target.index] ||
                    this.mLinkNum[d.target.index + "," + d.source.index];
                if (lTotalLinkNum > 1) {
                    dr = dr / (1 + (1 / lTotalLinkNum) * (d.linkindex - 1));
                }
                // generate svg path
                lookup[d.key] = d.flow_count;
                if (lookup[d.Key] == undefined) {
                    if (islCount == 1) {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "L" +
                            d.target.x +
                            "," +
                            d.target.y);
                    }
                    else {
                        if (islCount % 2 != 0 && matchedIndex == 1) {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "L" +
                                d.target.x +
                                "," +
                                d.target.y);
                        }
                        else if (matchedIndex % 2 == 0) {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 1," +
                                d.target.x +
                                "," +
                                d.target.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 0," +
                                d.source.x +
                                "," +
                                d.source.y);
                        }
                        else {
                            return ("M" +
                                d.source.x +
                                "," +
                                d.source.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 0," +
                                d.target.x +
                                "," +
                                d.target.y +
                                "A" +
                                dr +
                                "," +
                                dr +
                                " 0 0 1," +
                                d.source.x +
                                "," +
                                d.source.y);
                        }
                    }
                }
                else {
                    if (d.source_switch == d.target_switch) {
                        // Self edge.
                        if (x1 === x2 && y1 === y2) {
                            // Fiddle with this angle to get loop oriented.
                            xRotation = -45;
                            // Needs to be 1.
                            largeArc = 1;
                            // Change sweep to change orientation of loop.
                            //sweep = 0;
                            // Make drx and dry different to get an ellipse
                            // instead of a circle.
                            drx = 50;
                            dry = 20;
                            // For whatever reason the arc collapses to a point if the beginning
                            // and ending points of the arc are the same, so kludge it.
                            x2 = x2 + 1;
                            y2 = y2 + 1;
                        }
                        return ("M" +
                            x1 +
                            "," +
                            y1 +
                            "A" +
                            drx +
                            "," +
                            dry +
                            " " +
                            xRotation +
                            "," +
                            largeArc +
                            "," +
                            sweep +
                            " " +
                            x2 +
                            "," +
                            y2);
                    }
                    else {
                        return ("M" +
                            d.source.x +
                            "," +
                            d.source.y +
                            "L" +
                            d.target.x +
                            "," +
                            d.target.y);
                    }
                }
            });
            this.graphNode.attr("transform", function (d) {
                if (d.x && d.y) {
                    return "translate(" + d.x + "," + d.y + ")";
                }
            });
            this.graphFlowCount.attr("transform", function (d, index) {
                var xvalue = (d.source.y + d.target.y) / 2;
                var yvalue = (d.source.x + d.target.x) / 2;
                if (d.source_switch == d.target_switch) {
                    return "translate(" + (yvalue + 70) + "," + (xvalue - 70) + ")";
                }
                else {
                    return "translate(" + yvalue + "," + xvalue + ")";
                }
            });
        };
        this.updateCoordinates = () => {
            var coordinates = {};
            this.nodes.forEach(function (d) {
                coordinates[d.switch_id] = [
                    Math.round(d.x * 100) / 100,
                    Math.round(d.y * 100) / 100
                ];
            });
            this.topologyService.setCoordinates(coordinates);
            this.syncUserCoordinatesChanges();
        };
        this.dragStart = () => {
            if (!d3__WEBPACK_IMPORTED_MODULE_7__["event"].active)
                this.forceSimulation.alphaTarget(1).stop();
            jQuery('#topology-hover-txt').hide();
            jQuery('#topology-click-txt').hide();
        };
        this.dragging = (d, i) => {
            jQuery('#topology-hover-txt').hide();
            jQuery('#topology-click-txt').hide();
            this.isDragMove = true;
            d.py += d3__WEBPACK_IMPORTED_MODULE_7__["event"].dy;
            d.x += d3__WEBPACK_IMPORTED_MODULE_7__["event"].dx;
            d.y += d3__WEBPACK_IMPORTED_MODULE_7__["event"].dy;
            this.tick();
        };
        this.dragEnd = (d, i) => {
            if (!d3__WEBPACK_IMPORTED_MODULE_7__["event"].active)
                this.forceSimulation.alphaTarget(0);
            this.flagHover = false;
            d.fixed = true; // of course set the node to fixed so the force doesn't include the node in its auto positioning stuff
            this.tick();
            this.updateCoordinates();
        };
        this.horizontallyBound = (parentDiv, childDiv) => {
            let parentRect = parentDiv.getBoundingClientRect();
            let childRect = childDiv.getBoundingClientRect();
            return (parentRect.left <= childRect.left && parentRect.right >= childRect.right);
        };
        this.showFlowDetails = d => {
            let url = "flows?src=" + d.source_switch_name + "&dst=" + d.target_switch_name;
            window.location.href = url;
        };
        this.showSwitchDetails = d => {
            localStorage.setItem("switchDetailsJSON", JSON.stringify(d));
            window.location.href = "switches/details/" + d.switch_id;
        };
        this.showLinkDetails = d => {
            localStorage.setItem("linkData", JSON.stringify(d));
            let url = "isl/switch/isl/" + d.source_switch + "/" + d.src_port + "/" + d.target_switch + "/" + d.dst_port;
            window.location.href = url;
        };
        this.zoomFn = direction => {
            if (direction == 1) {
                this.forceSimulation.stop();
                if (this.zoomLevel + this.zoomStep <= this.max_zoom) {
                    this.svgElement
                        .transition()
                        .duration(350)
                        .call(this.zoom.scaleTo, this.zoomLevel + this.zoomStep);
                }
            }
            else if (direction == -1) {
                this.forceSimulation.stop();
                if (this.zoomLevel - this.zoomStep >= this.scaleLimit) {
                    this.svgElement
                        .transition()
                        .duration(350)
                        .call(this.zoom.scaleTo, this.zoomLevel - this.zoomStep);
                }
            }
        };
        this.randomPoint = (min, max) => {
            let num1 = Math.random() * (max - min) + min;
            var num = Math.floor(Math.random() * 99) + 1;
            return (num1 *= Math.floor(Math.random() * 2) == 1 ? 1 : -1);
        };
        this.zoomReset = () => {
            this.topologyService.setCoordinates(null);
            let coordinates = {};
            this.forceSimulation = d3__WEBPACK_IMPORTED_MODULE_7__["forceSimulation"]()
                .velocityDecay(0.2)
                .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_7__["forceManyBody"]().strength(-1000))
                .force("xPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceX"](this.width / 2))
                .force("yPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceY"](this.height / 2));
            this.forceSimulation.nodes(this.nodes);
            this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_7__["forceLink"]().links(this.links).distance((d) => {
                let distance = 150;
                try {
                    if (!d.flow_count) {
                        if (d.speed == "40000000") {
                            distance = 100;
                        }
                        else {
                            distance = 300;
                        }
                    }
                }
                catch (e) { }
                return distance;
            }).strength(0.1));
            this.forceSimulation.stop();
            this.insertLinks(this.links);
            this.insertNodes(this.nodes);
            this.insertCircles();
            this.forceSimulation.restart();
            this.zoomFit();
            this.forceSimulation.on("tick", () => {
                this.tick();
                this.zoomFit();
                this.updateCoordinates();
                let positions = this.topologyService.getCoordinates();
                this.topologyService.setCoordinates(positions);
            });
            setTimeout(() => {
                this.forceSimulation.stop();
                this.zoomFit();
            }, 500);
        };
        this.zoomFit = () => {
            var bounds = this.g.node().getBBox();
            var parent = this.g.node().parentElement;
            var fullWidth = $(parent).width(), fullHeight = $(parent).height();
            var width = bounds.width, height = bounds.height;
            var midX = (bounds.x + width) / 2, midY = (bounds.y + height) / 2;
            if (width == 0 || height == 0)
                return;
            if (this.nodes.length >= 50) {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_7__["zoomIdentity"]
                    .scale(this.min_zoom)
                    .translate((fullWidth / 2 - this.min_zoom * midX) / this.min_zoom, (fullHeight / 2 - this.min_zoom * midY) / this.min_zoom);
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
            else {
                let newtranformation = d3__WEBPACK_IMPORTED_MODULE_7__["zoomIdentity"]
                    .scale(this.min_zoom)
                    .translate(((fullWidth / 2 - this.min_zoom * midX) / this.min_zoom) - bounds.x, ((fullHeight / 2 - this.min_zoom * midY) / this.min_zoom));
                this.svgElement.transition().duration(300).call(this.zoom.transform, newtranformation);
            }
        };
        this.toggleSearch = () => {
            this.searchView = this.searchView ? false : true;
            this.searchModel = '';
            if (this.searchView) {
                const element = this.renderer.selectRootElement("#search-bar");
                setTimeout(() => element.focus(), 0);
                this.searchHidden = false;
            }
            else {
                this.searchHidden = true;
            }
        };
        this.searchNode = (selectedVal) => {
            this.searchView = false;
            selectedVal = $.trim(selectedVal);
            this.searchModel = '';
            if ($.inArray(selectedVal, this.optArray) > -1) {
                var node = this.svgElement.selectAll(".node");
                if (selectedVal == "none") {
                    //node.style("stroke", "#666").style("stroke-width", "1");
                }
                else {
                    d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"]("g.node").each(function (d) {
                        var element = document.getElementById("circle_" + d.switch_id);
                        var classes = "circle blue";
                        if (d.state && d.state.toLowerCase() == "deactivated") {
                            classes = "circle red";
                        }
                        element.setAttribute("class", classes);
                    });
                    var unmatched = node.filter(function (d, i) {
                        return d.name != selectedVal;
                    });
                    var matched = node.filter(function (d, i) {
                        return d.name == selectedVal;
                    });
                    unmatched.style("opacity", "0");
                    matched.filter(function (d, index) {
                        var element = document.getElementById("circle_" + d.switch_id);
                        var classes = "circle blue hover";
                        if (d.state && d.state.toLowerCase() == "deactivated") {
                            classes = "circle red hover";
                        }
                        element.setAttribute("class", classes);
                    });
                    var link = this.svgElement.selectAll(".link");
                    link.style("opacity", "0");
                    var circle = this.svgElement.selectAll(".flow-circle");
                    circle.style("opacity", "0");
                    d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"](".node, .link, .flow-circle")
                        .transition()
                        .duration(5000)
                        .style("opacity", 1);
                }
            }
        };
        this.onViewSettingUpdate = (setting, initialLoad = false) => {
            if (setting.SWITCH_CHECKED) {
                $(".switchname").removeClass("hide");
            }
            else {
                $(".switchname").addClass("hide");
            }
            if (setting.ISL_CHECKED) {
                d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"](".physical")
                    .transition()
                    .duration(500)
                    .style("visibility", "visible");
            }
            else {
                d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"](".physical")
                    .transition()
                    .duration(500)
                    .style("visibility", "hidden");
            }
            if (setting.FLOW_CHECKED) {
                d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"](".logical,.flow-circle")
                    .transition()
                    .duration(500)
                    .style("opacity", 1)
                    .style("visibility", "visible");
                if (!initialLoad && this.graphdata.flow.length == 0) {
                    this.graphShow = true;
                    window.location.reload();
                }
            }
            else {
                d3__WEBPACK_IMPORTED_MODULE_7__["selectAll"](".logical,.flow-circle")
                    .transition()
                    .duration(500)
                    .style("opacity", 0)
                    .style("visibility", "hidden");
            }
            if (setting.WORLDMAP) {
                this.showWorldMap = true;
                this.addOverlayHtml();
            }
            else {
                this.showWorldMap = false;
            }
            this.onAutoRefreshSettingUpdate(setting);
        };
        this.onAutoRefreshSettingUpdate = (setting) => {
            if (this.autoRefreshTimerInstance) {
                clearInterval(this.autoRefreshTimerInstance);
            }
            if (setting.REFRESH_CHECKED) {
                this.restartAutoRefreshWithNewSettings(setting.REFRESH_INTERVAL);
            }
        };
        this.saveCoordinates = () => {
            if (this.topologyService.isCoordinatesChanged()) {
                let coordinates = this.topologyService.getCoordinates();
                if (coordinates) {
                    this.userService
                        .saveSettings(coordinates)
                        .subscribe(() => { this.topologyService.setCoordinateChangeStatus('NO'); }, error => { });
                }
            }
        };
        this.dblclick = (d, index) => {
            var element = document.getElementById("circle_" + d.switch_id);
            var classes = "circle blue";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red";
            }
            element.setAttribute("class", classes);
            this.showSwitchDetails(d);
        };
        if (!this.commonService.hasPermission('menu_topology')) {
            this.toaster.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    onBlur(event) {
        event.stopImmediatePropagation();
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Topology');
        this.appLoader.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].loading_topology);
        this.viewOptions = this.topologyService.getViewOptions();
        this.forceSimulation = this.initSimulation();
        let query = { _: new Date().getTime() };
        this.userService.getSettings(query).subscribe(coordinates => {
            this.topologyService.setCoordinates(coordinates);
            this.topologyService.setCoordinateChangeStatus('NO');
            this.loadSwitchList();
        }, error => {
            this.topologyService.setCoordinates(null);
            this.topologyService.setCoordinateChangeStatus('NO');
            this.loadSwitchList();
        });
        this.topologyService.setCoordinateChangeStatus('NO');
        this.topologyService.settingReceiver.subscribe(this.onViewSettingUpdate);
        this.topologyService.autoRefreshReceiver.subscribe(this.onAutoRefreshSettingUpdate);
    }
    initSimulation() {
        this.width = window.innerWidth;
        this.height = window.innerHeight;
        this.svgElement = d3__WEBPACK_IMPORTED_MODULE_7__["select"]("svg");
        this.svgElement.style('cursor', 'move');
        this.svgElement.attr("width", this.width);
        this.svgElement.attr("height", this.height);
        this.g = this.svgElement.append("g");
        this.graphLinkGroup = this.g
            .append("g")
            .attr("id", `links`)
            .attr("class", "links");
        this.graphNodeGroup = this.g
            .append("g")
            .attr("id", `nodes`)
            .attr("class", "nodes");
        this.graphFlowGroup = this.g
            .append("g")
            .attr("id", `flowcounts`)
            .attr("class", "flowcounts");
        this.zoom = d3__WEBPACK_IMPORTED_MODULE_7__["zoom"]()
            .scaleExtent([this.scaleLimit, this.max_zoom])
            .extent([[0, 0], [this.width, this.height]])
            .on("zoom", () => {
            // this.forceSimulation.stop();
            this.g.attr("transform", "translate(" +
                d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.x +
                "," +
                d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.y +
                ") scale(" +
                d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.k +
                ")");
            this.zoomLevel = Math.round(d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.k * 100) / 100;
            this.translateX = d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.x;
            this.translateY = d3__WEBPACK_IMPORTED_MODULE_7__["event"].transform.y;
            this.isDragMove = true;
            $("#topology-hover-txt, #switch_hover").css("display", "none");
            $("#topology-click-txt").css("display", "none");
        });
        this.size = d3__WEBPACK_IMPORTED_MODULE_7__["scalePow"]()
            .exponent(1)
            .domain(d3__WEBPACK_IMPORTED_MODULE_7__["range"](1));
        let result = d3__WEBPACK_IMPORTED_MODULE_7__["forceSimulation"]()
            .velocityDecay(0.2)
            .force('collision', d3__WEBPACK_IMPORTED_MODULE_7__["forceCollide"]().radius(function (d) {
            return 20;
        }))
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_7__["forceManyBody"]().strength(-1000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceX"](this.width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceY"](this.height / 2));
        return result;
    }
    insertNodes(nodes) {
        let ref = this;
        let graphNodesData = this.graphNodeGroup
            .selectAll("g.node")
            .data(nodes, d => d.switch_id);
        let graphNodeElement = graphNodesData
            .enter()
            .append("g")
            .attr("class", "node")
            .on("dblclick", this.dblclick)
            .call(d3__WEBPACK_IMPORTED_MODULE_7__["drag"]()
            .on("start", this.dragStart)
            .on("drag", this.dragging)
            .on("end", this.dragEnd));
        graphNodesData.exit().remove();
        graphNodeElement
            .append("circle")
            .attr("r", this.graphOptions.radius)
            .attr("class", function (d, index) {
            var classes = "circle blue";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red";
            }
            return classes;
        })
            .attr("id", function (d, index) {
            return "circle_" + d.switch_id;
        })
            .style("cursor", "move");
        let text = graphNodeElement
            .append("text")
            .attr("dy", ".35em")
            .style("font-size", this.graphOptions.nominal_text_size + "px")
            .attr("class", "switchname hide");
        if (this.graphOptions.text_center) {
            text
                .text(function (d) {
                return d.name;
            })
                .style("text-anchor", "middle");
        }
        else {
            text
                .attr("dx", function (d) {
                return ref.size(d.size) || ref.graphOptions.nominal_base_node_size;
            })
                .text(function (d) {
                return d.name;
            });
        }
        let images = graphNodeElement
            .append("svg:image")
            .attr("xlink:href", function (d) {
            return _environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].assetsPath + "/images/switch.png";
        })
            .attr("x", function (d) {
            return -29;
        })
            .attr("y", function (d) {
            return -29;
        })
            .attr("height", 58)
            .attr("width", 58)
            .attr("id", function (d, index) {
            return "image_" + index;
        })
            .attr("cursor", "pointer")
            .on("mouseover", function (d, index) {
            $("#isl_hover").css("display", "none");
            var element = document.getElementById("circle_" + d.switch_id);
            var classes = "circle blue hover";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red hover";
            }
            element.setAttribute("class", classes);
            var rec = element.getBoundingClientRect();
            $("#topology-hover-txt, #switch_hover").css("display", "block");
            $("#topology-hover-txt").css("top", rec.y + "px");
            $("#topology-hover-txt").css("left", (rec.x) + "px");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_switch_name").html("<span>" + d.name + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_controller").html("<span>" + d.switch_id + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_state").html("<span>" + d.state + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_address").html("<span>" + d.address + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_name").html("<span>" + d.switch_id + "</span>");
            d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_desc").html("<span>" + d.description + "</span>");
            var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-hover-txt"));
            if (bound) {
                $("#topology-hover-txt").removeClass("left");
            }
            else {
                var left = rec.x - (300 + 100); // subtract width of tooltip box + circle radius
                $("#topology-hover-txt").css("left", left + "px");
                $("#topology-hover-txt").addClass("left");
            }
        })
            .on("mouseout", function (d, index) {
            if (this.flagHover == false) {
                this.flagHover = true;
            }
            else {
                var element = document.getElementById("circle_" + d.switch_id);
                var classes = "circle blue";
                if (d.state && d.state.toLowerCase() == "deactivated") {
                    classes = "circle red";
                }
                element.setAttribute("class", classes);
            }
            if (!$("#topology-hover-txt").is(":hover")) {
                $("#topology-hover-txt, #switch_hover").css("display", "none");
            }
        })
            .on("click", function (d, index) {
            $("#topology-hover-txt").css("display", "none");
            var cName = document.getElementById("circle_" + d.switch_id).className;
            let circleClass = cName; //cName.baseVal;
            var element = document.getElementById("circle_" + d.switch_id);
            var classes = "circle blue hover";
            if (d.state && d.state.toLowerCase() == "deactivated") {
                classes = "circle red hover";
            }
            element.setAttribute("class", classes);
            var rec = element.getBoundingClientRect();
            if (!ref.isDragMove) {
                $("#topology-click-txt, #switch_click").css("display", "block");
                $("#topology-click-txt").css("top", rec.y + "px");
                $("#topology-click-txt").css("left", rec.x + "px");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_switch_name").html("<span>" + d.name + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_controller").html("<span>" + d.switch_id + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_state").html("<span>" + d.state + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_address").html("<span>" + d.address + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_name").html("<span>" + d.switch_id + "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".switchdetails_div_click_desc").html("<span>" + d.description + "</span>");
                var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-click-txt"));
                if (bound) {
                    $("#topology-click-txt").removeClass("left");
                }
                else {
                    var left = rec.x - (300 + 80); // subtract width of tooltip box + circle radius
                    $("#topology-click-txt").css("left", left + "px");
                    $("#topology-click-txt").addClass("left");
                }
                $("#topology-hover-txt").css("display", "none");
            }
            else {
                ref.isDragMove = false;
            }
        });
        this.graphNode = graphNodeElement.merge(graphNodesData);
    }
    insertLinks(links) {
        let ref = this;
        let graphLinksData = this.graphLinkGroup.selectAll("path.link").data(links);
        let graphNewLink = graphLinksData
            .enter()
            .append("path")
            .attr("class", function (d, index) {
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                return "link logical";
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            return "link physical  orange_percentage dashed_maintenance_path";
                        }
                        return "link physical  dashed_maintenance_path";
                    }
                    else if (d.affected) {
                        return "link physical  dashed_path";
                    }
                    else {
                        return "link physical";
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            return "link physical dashed_maintenance_path orange_percentage";
                        }
                        return "link physical  dashed_maintenance_path";
                    }
                    else if (d.affected) {
                        return "link physical dashed_path";
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            return "link physical orange_percentage";
                        }
                        return "link physical";
                    }
                }
            }
        })
            .attr("id", (d, index) => {
            return "link" + index;
        })
            .on("mouseover", function (d, index) {
            $("#switch_hover").css("display", "none");
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                if (d.under_maintenance) {
                    element.setAttribute("class", "link logical overlay dashed_maintenance_path");
                }
                else if (d.affected) {
                    element.setAttribute("class", "link logical overlay dashed_path");
                }
                else {
                    element.setAttribute("class", "link logical overlay");
                }
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical dashed_maintenance_path orange_percentage pathoverlay");
                        }
                        else {
                            element.setAttribute("class", "link physical dashed_maintenance_path pathoverlay");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical dashed_path pathoverlay");
                    }
                    else {
                        if (parseInt(percentage) < 50 && d.state.toLowerCase() != 'failed' && !d.unidirectional) {
                            element.setAttribute("class", "link physical orange_percentage overlay");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay");
                        }
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical overlay orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical overlay dashed_path");
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical orange_percentage overlay");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay");
                        }
                    }
                }
                $(element).on("mousemove", function (e) {
                    $("#topology-hover-txt").css("top", (e.pageY - 30) + "px");
                    $("#topology-hover-txt").css("left", (e.pageX) + "px");
                    var bound = ref.horizontallyBound(document.getElementById("switchesgraph"), document.getElementById("topology-hover-txt"));
                    if (bound) {
                        $("#topology-hover-txt").removeClass("left");
                    }
                    else {
                        var left = e.pageX - (300 + 100); // subtract width of tooltip box + circle radius
                        $("#topology-hover-txt").css("left", left + "px");
                        $("#topology-hover-txt").addClass("left");
                    }
                });
                var rec = element.getBoundingClientRect();
                $("#topology-hover-txt, #isl_hover").css("display", "block");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_source_port").html("<span>" +
                    (d.src_port == "" || d.src_port == undefined ? "-" : d.src_port) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_maintenance").html("<span>" +
                    (d.under_maintenance == "" || d.under_maintenance == undefined ? "false" : d.under_maintenance) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_destination_port").html("<span>" +
                    (d.dst_port == "" || d.dst_port == undefined ? "-" : d.dst_port) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_source_switch").html("<span>" +
                    (d.source_switch_name == "" || d.source_switch_name == undefined
                        ? "-"
                        : d.source_switch_name) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_destination_switch").html("<span>" +
                    (d.target_switch_name == "" || d.target_switch_name == undefined
                        ? "-"
                        : d.target_switch_name) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_speed").html("<span>" +
                    (d.max_bandwidth == "" || d.max_bandwidth == undefined ? "-" : d.max_bandwidth / 1000) +
                    " Mbps</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_state").html("<span>" +
                    (d.state == "" || d.state == undefined ? "-" : d.state) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_latency").html("<span>" +
                    (d.latency == "" || d.latency == undefined ? "-" : d.latency) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_bandwidth").html("<span>" +
                    (d.available_bandwidth == "" || d.available_bandwidth == undefined
                        ? "-"
                        : d.available_bandwidth / 1000) +
                    " Mbps (" +
                    percentage +
                    "%)</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_unidirectional").html("<span>" +
                    (d.unidirectional == "" || d.unidirectional == undefined
                        ? "-"
                        : d.unidirectional) +
                    "</span>");
                d3__WEBPACK_IMPORTED_MODULE_7__["select"](".isldetails_div_cost").html("<span>" +
                    (d.cost == "" || d.cost == undefined ? "-" : d.cost) +
                    "</span>");
            }
        })
            .on("mouseout", function (d, index) {
            $("#topology-hover-txt, #isl_hover").css("display", "none");
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                if (d.under_maintenance) {
                    element.setAttribute("class", "link logical dashed_maintenance_path");
                }
                else if (d.affected) {
                    element.setAttribute("class", "link logical dashed_path");
                }
                else {
                    element.setAttribute("class", "link logical");
                }
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical  orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical  dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical  dashed_path");
                    }
                    else {
                        element.setAttribute("class", "link physical ");
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical dashed_path");
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical orange_percentage ");
                        }
                        else {
                            element.setAttribute("class", "link physical ");
                        }
                    }
                }
            }
            if (!$("#topology-hover-txt").is(":hover")) {
                $("#topology-hover-txt, #isl_hover").css("display", "none");
            }
        })
            .on("click", function (d, index) {
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                if (d.under_maintenance) {
                    element.setAttribute("class", "link logical overlay dashed_maintenance_path");
                }
                else if (d.affected) {
                    element.setAttribute("class", "link logical overlay dashed_path");
                }
                else {
                    element.setAttribute("class", "link logical overlay");
                }
                ref.showFlowDetails(d);
            }
            else {
                if ((d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") ||
                    (d.state && d.state.toLowerCase() == "failed")) {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical pathoverlay orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical pathoverlay dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical pathoverlay dashed_path");
                    }
                    else {
                        element.setAttribute("class", "link physical pathoverlay");
                    }
                }
                else {
                    if (d.under_maintenance) {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical overlay orange_percentage dashed_maintenance_path");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay dashed_maintenance_path");
                        }
                    }
                    else if (d.affected) {
                        element.setAttribute("class", "link physical overlay dashed_path");
                    }
                    else {
                        if (parseInt(percentage) < 50) {
                            element.setAttribute("class", "link physical orange_percentage overlay");
                        }
                        else {
                            element.setAttribute("class", "link physical overlay");
                        }
                    }
                }
                ref.showLinkDetails(d);
            }
        })
            .attr("stroke", function (d, index) {
            if (d.hasOwnProperty("flow_count")) {
                return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].FLOWCOUNT;
            }
            else {
                if (d.unidirectional &&
                    d.state &&
                    d.state.toLowerCase() == "discovered") {
                    return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].UNIDIR;
                }
                else if (d.state && d.state.toLowerCase() == "discovered") {
                    return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].DISCOVERED;
                }
                else if (d.state && d.state.toLowerCase() == "moved") {
                    return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].MOVED;
                }
                return _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].FAILED;
            }
        });
        graphLinksData.exit().remove();
        this.graphLink = graphNewLink.merge(graphLinksData);
    }
    insertCircles() {
        let ref = this;
        var filteredLinks = [];
        this.links.map(function (l, i) {
            if (l && l.hasOwnProperty("flow_count")) {
                var obj = l;
                obj.index = i;
                filteredLinks.push(obj);
            }
        });
        let graphFlowCountData = this.graphFlowGroup
            .selectAll("g.flow-circle")
            .data(filteredLinks);
        let graphCountElement = graphFlowCountData
            .enter()
            .append("g")
            .attr("class", "flow-circle");
        graphFlowCountData.exit().remove();
        graphCountElement
            .append("circle")
            .attr("dy", ".35em")
            .style("font-size", this.graphOptions.nominal_text_size + "px")
            .attr("r", function (d, index) {
            let r;
            var element = $("#link" + d.index)[0];
            var f = d.flow_count;
            if (element.getAttribute("stroke") == "#228B22" ||
                element.getAttribute("stroke") == "green") {
                if (f < 10) {
                    r = 10;
                }
                else if (f >= 10 && f < 100) {
                    r = 12;
                }
                else {
                    r = 16;
                }
                return r;
            }
        })
            .on("mouseover", function (d, index) {
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            let classes = "";
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                classes = "link logical overlay";
            }
            else {
                if (parseInt(percentage) < 50) {
                    classes = "link physical orange_percentage overlay";
                }
                else {
                    classes = "link physical overlay";
                }
            }
            element.setAttribute("class", classes);
        })
            .on("mouseout", function (d, index) {
            var element = $("#link" + index)[0];
            var availbandwidth = d.available_bandwidth;
            let classes = "";
            var max_bandwidth = d.max_bandwidth;
            var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
            if (d.hasOwnProperty("flow_count")) {
                classes = "link logical";
            }
            else {
                if (parseInt(percentage) < 50) {
                    classes = "link physical orange_percentage";
                }
                else {
                    classes = "link physical";
                }
            }
            element.setAttribute("class", classes);
        })
            .on("click", function (d, index) {
            ref.showFlowDetails(d);
        })
            .attr("class", "linecircle")
            .attr("id", function (d, index) {
            var id = "_" + index;
            return id;
        })
            .attr("fill", function (d) {
            return "#d3d3d3";
        })
            .call(this.drag);
        graphCountElement
            .append("text")
            .attr("dx", function (d) {
            let r;
            var f = d.flow_count;
            if (f < 10) {
                r = -3;
            }
            else if (f >= 10 && f < 100) {
                r = -6;
            }
            else {
                r = -9;
            }
            return r;
        })
            .attr("dy", function (d) {
            return 5;
        })
            .attr("fill", function (d) {
            return "black";
        })
            .text(function (d) {
            var value = d.flow_count;
            return value;
        });
        this.graphFlowCount = graphCountElement.merge(graphFlowCountData);
    }
    sortLinks() {
        this.links.sort(function (a, b) {
            if (a.source > b.source) {
                return 1;
            }
            else if (a.source < b.source) {
                return -1;
            }
            else {
                if (a.target > b.target) {
                    return 1;
                }
                if (a.target < b.target) {
                    return -1;
                }
                else {
                    return 0;
                }
            }
        });
    }
    setLinkIndexAndNum() {
        for (var i = 0; i < this.links.length; i++) {
            if (i != 0 &&
                this.links[i].source == this.links[i - 1].source &&
                this.links[i].target == this.links[i - 1].target) {
                this.links[i].linkindex = this.links[i - 1].linkindex + 1;
            }
            else {
                this.links[i].linkindex = 1;
            }
            // save the total number of links between two nodes
            if (this.mLinkNum[this.links[i].target + "," + this.links[i].source] !==
                undefined) {
                this.mLinkNum[this.links[i].target + "," + this.links[i].source] = this.links[i].linkindex;
            }
            else {
                this.mLinkNum[this.links[i].source + "," + this.links[i].target] = this.links[i].linkindex;
            }
        }
    }
    processNodesData(newNodes, removedNodes, response) {
        this.nodes.forEach(function (d) {
            for (var i = 0, len = response.length; i < len; i++) {
                if (d.switch_id == response[i].switch_id) {
                    d.state = response[i].state;
                    var classes = "circle blue";
                    if (d.state && d.state.toLowerCase() == "deactivated") {
                        classes = "circle red";
                    }
                    var element = document.getElementById("circle_" + d.switch_id);
                    if (element) {
                        element.setAttribute("class", classes);
                    }
                    break;
                }
            }
        });
        if ((newNodes && newNodes.length) ||
            (removedNodes && removedNodes.length)) {
            if (newNodes && newNodes.length) {
                this.nodes = this.nodes.concat(newNodes);
                this.new_nodes = true;
            }
            if (removedNodes && removedNodes.length) {
                this.new_nodes = true;
                this.nodes = this.nodes.filter(function (node) {
                    var foundFlag = false;
                    for (var i = 0; i < removedNodes.length; i++) {
                        if (removedNodes[i].switch_id == node.switch_id) {
                            foundFlag = true;
                            break;
                        }
                    }
                    return !foundFlag;
                });
            }
        }
        else {
            this.new_nodes = false;
        }
    }
    processLinksData(newLinks, removedLinks, response) {
        let ref = this;
        var classes = "";
        this.links.forEach(function (d, index) {
            for (var i = 0, len = response.length; i < len; i++) {
                if (d.source_switch == response[i].source_switch &&
                    d.target_switch == response[i].target_switch &&
                    d.src_port == response[i].src_port &&
                    d.dst_port == response[i].dst_port) {
                    d.available_bandwidth = response[i].available_bandwidth;
                    d.max_bandwidth = response[i].max_bandwidth;
                    d.state = response[i].state;
                    var availbandwidth = d.available_bandwidth;
                    var max_bandwidth = d.max_bandwidth;
                    var percentage = ref.commonService.getPercentage(availbandwidth, max_bandwidth);
                    if (response[i].affected) {
                        d["affected"] = response[i].affected;
                    }
                    else {
                        d["affected"] = false;
                    }
                    d.under_maintenance = response[i].under_maintenance;
                    d.unidirectional = response[i].unidirectional;
                    if (d.unidirectional ||
                        (d.state && d.state.toLowerCase() == "failed")) {
                        if (d.under_maintenance) {
                            classes = "link physical down dashed_maintenance_path";
                        }
                        else if (d.affected) {
                            classes = "link physical down dashed_path";
                        }
                        else {
                            classes = "link physical down";
                        }
                    }
                    else {
                        if (d.under_maintenance) {
                            classes = "link physical dashed_maintenance_path";
                            if (parseInt(percentage) < 50) {
                                classes = "link physical dashed_maintenance_path orange_percentage";
                            }
                        }
                        else if (d.affected) {
                            classes = "link physical dashed_path";
                        }
                        else {
                            if (parseInt(percentage) < 50) {
                                classes = "link physical orange_percentage";
                            }
                            else {
                                classes = "link physical ";
                            }
                        }
                    }
                    var element = document.getElementById("link" + index);
                    var stroke = _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].FAILED;
                    if (d.unidirectional &&
                        d.state &&
                        d.state.toLowerCase() == "discovered") {
                        stroke = _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].UNIDIR;
                    }
                    else if (d.state && d.state.toLowerCase() == "discovered") {
                        stroke = _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].DISCOVERED;
                    }
                    else if (d.state && d.state.toLowerCase() == "moved") {
                        stroke = _common_enums_isl_enum__WEBPACK_IMPORTED_MODULE_5__["ISL"].MOVED;
                    }
                    if (element) {
                        element.setAttribute("class", classes);
                        element.setAttribute("stroke", stroke);
                    }
                    break;
                }
            }
        });
        if ((newLinks && newLinks.length) ||
            (removedLinks && removedLinks.length) ||
            this.new_nodes) {
            this.new_nodes = false;
            this.restartGraphWithNewIsl(newLinks, removedLinks);
        }
    }
    getSwitchList() {
        this.switchService.getSwitchList().subscribe(response => {
            let switchArr = [];
            // new switch is added
            switchArr = this.getNewSwitch(this.nodes, response);
            var newNodes = switchArr["added"] || [];
            var removedNodes = switchArr["removed"] || [];
            this.processNodesData(newNodes, removedNodes, response);
        }, error => {
            this.appLoader.hide();
        });
    }
    getSwitchLinks() {
        this.switchService.getSwitchLinks().subscribe(response => {
            var linksArr = [];
            linksArr = this.getNewLinks(this.links, response);
            var newLinks = linksArr["added"] || [];
            var removedLinks = linksArr["removed"] || [];
            this.processLinksData(newLinks, removedLinks, response);
        }, error => { });
    }
    /** get removed and newly added switch list */
    getNewSwitch(nodes, response) {
        var nodesArr = { added: [], removed: [] };
        for (var i = 0; i < response.length; i++) {
            var foundFlag = false;
            for (var j = 0; j < nodes.length; j++) {
                if (nodes[j].switch_id == response[i].switch_id) {
                    foundFlag = true;
                }
            }
            if (!foundFlag) {
                nodesArr["added"].push(response[i]);
            }
        }
        for (var i = 0; i < nodes.length; i++) {
            var foundFlag = false;
            for (var j = 0; j < response.length; j++) {
                if (response[j].switch_id == nodes[i].switch_id) {
                    foundFlag = true;
                }
            }
            if (!foundFlag) {
                nodesArr["removed"].push(nodes[i]);
            }
        }
        return nodesArr;
    }
    /** get removed and newly added switch links  */
    getNewLinks(links, response) {
        var linksArr = { added: [], removed: [] };
        for (var i = 0; i < response.length; i++) {
            var foundFlag = false;
            for (var j = 0; j < links.length; j++) {
                if (links[j].source_switch == response[i].source_switch &&
                    links[j].target_switch == response[i].target_switch &&
                    links[j].src_port == response[i].src_port &&
                    links[j].dst_port == response[i].dst_port) {
                    foundFlag = true;
                }
            }
            if (!foundFlag) {
                linksArr["added"].push(response[i]);
            }
        }
        // checking for removed links
        for (var i = 0; i < links.length; i++) {
            var foundFlag = false;
            for (var j = 0; j < response.length; j++) {
                if (links[i].source_switch == response[j].source_switch &&
                    links[i].target_switch == response[j].target_switch &&
                    links[i].src_port == response[j].src_port &&
                    links[i].dst_port == response[j].dst_port) {
                    foundFlag = true;
                }
            }
            if (!foundFlag) {
                linksArr["removed"].push(links[i]);
            }
        }
        return linksArr;
    }
    restartGraphWithNewIsl(newLinks, removedLinks) {
        this.optArray = [];
        let ref = this;
        try {
            var result = this.commonService.groupBy(newLinks, function (item) {
                return [item.source_switch, item.target_switch];
            });
            for (var i = 0, len = result.length; i < len; i++) {
                var row = result[i];
                if (row.length >= 1) {
                    for (var j = 0, len1 = row.length; j < len1; j++) {
                        var key = row[j].source_switch + "_" + row[j].target_switch;
                        var key1 = row[j].target_switch + "_" + row[j].source_switch;
                        var prcessKey = (this.linksSourceArr && typeof this.linksSourceArr[key] !== "undefined") ? key : key1;
                        if (typeof this.linksSourceArr[prcessKey] !== "undefined") {
                            this.linksSourceArr[prcessKey].push(row[j]);
                        }
                        else {
                            this.linksSourceArr[key] = [];
                            this.linksSourceArr[key].push(row[j]);
                        }
                    }
                }
            }
        }
        catch (e) { }
        var nodelength = this.nodes.length;
        var linklength = newLinks.length;
        for (var i = 0; i < nodelength; i++) {
            this.optArray.push(this.nodes[i].name);
            for (var j = 0; j < linklength; j++) {
                if (this.nodes[i].switch_id == newLinks[j]["source_switch"] &&
                    this.nodes[i].switch_id == newLinks[j]["target_switch"]) {
                    newLinks[j].source = i;
                    newLinks[j].target = i;
                }
                else {
                    if (this.nodes[i].switch_id == newLinks[j]["source_switch"]) {
                        newLinks[j].source = i;
                    }
                    else if (this.nodes[i].switch_id == newLinks[j]["target_switch"]) {
                        newLinks[j].target = i;
                    }
                }
            }
        }
        this.links = this.links.concat(newLinks);
        // splice removed links
        if (removedLinks && removedLinks.length) {
            this.links = this.links.filter(function (d) {
                var foundFlag = false;
                for (var i = 0; i < removedLinks.length; i++) {
                    if (d.source_switch == removedLinks[i].source_switch &&
                        d.target_switch == removedLinks[i].target_switch &&
                        d.src_port == removedLinks[i].src_port &&
                        d.dst_port == removedLinks[i].dst_port) {
                        foundFlag = true;
                        var key = d.source_switch + "_" + d.target_switch;
                        try {
                            ref.linksSourceArr[key].splice(0, 1);
                        }
                        catch (err) {
                        }
                        break;
                    }
                }
                return !foundFlag;
            });
        }
        this.appLoader.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_15__["MessageObj"].reloading_topology_with_new_data);
        this.graphShow = false;
        this.forceSimulation = d3__WEBPACK_IMPORTED_MODULE_7__["forceSimulation"]()
            .velocityDecay(0.2)
            .force("charge_force", d3__WEBPACK_IMPORTED_MODULE_7__["forceManyBody"]().strength(-1000))
            .force("xPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceX"](this.width / 2))
            .force("yPos", d3__WEBPACK_IMPORTED_MODULE_7__["forceY"](this.height / 2));
        this.forceSimulation.nodes(this.nodes);
        this.forceSimulation.force("link", d3__WEBPACK_IMPORTED_MODULE_7__["forceLink"]().links(this.links).distance(200).strength(1));
        this.forceSimulation.stop();
        this.forceSimulation.on("tick", () => {
            this.repositionNodes();
            this.tick();
            this.zoomFit();
        });
        this.insertLinks(this.links);
        this.insertNodes(this.nodes);
        this.insertCircles();
        this.forceSimulation.restart();
        this.forceSimulation.on("end", () => {
            this.appLoader.hide();
            this.graphShow = true;
            this.onViewSettingUpdate(this.viewOptions, true);
            this.zoomFit();
        });
    }
    restartAutoRefreshWithNewSettings(duration) {
        this.autoRefreshTimerInstance = setInterval(() => {
            if (this.viewOptions.FLOW_CHECKED) {
                this.getSwitchList();
            }
            else {
                this.getSwitchList();
                this.getSwitchLinks();
            }
        }, duration * 1000);
    }
    isObjEquivalent(a, b) {
        // Create arrays of property names
        var aProps = Object.getOwnPropertyNames(a);
        var bProps = Object.getOwnPropertyNames(b);
        if (aProps.length != bProps.length) {
            return false;
        }
        for (var i = 0; i < aProps.length; i++) {
            var propName = aProps[i];
            if (a[propName] !== b[propName]) {
                return false;
            }
        }
        return true;
    }
    addOverlayHtml() {
        //var html = '<div #popup id="popup" class="ol-popup"><a  href="javascript:void(0)" id="popup-minimize" class="ol-popup-minimize"><a  href="javascript:void(0)" id="popup-maximize" class="ol-popup-maximize"><a  href="#" id="popup-closer" class="ol-popup-closer"></a>';
        var html = '<div #popup id="popup" class="ol-popup"><a  href="#" id="popup-closer" class="ol-popup-closer"></a>';
        html += '<div id="graph_loader" style="display:none;"><span style="padding:150px 180px;float:left;">Loading...</span></div> <div #content id="popup-content" ></div></div>';
        html += '<div #popinfoContainer id="popInfoContainer" class="ol-popup-info"><a  href="#" id="popInfocloser" class="ol-popup-closer"></a>';
        html += '<div #popInfocontent id="popInfocontent" ></div></div>';
        jQuery("#worldmap").append(html);
    }
    ngAfterViewInit() {
        setInterval(() => {
            if (this.searchHidden) {
                this.searchView = false;
                this.searchHidden = false;
                this.searchModel = '';
            }
        }, 1000);
        this.syncCoordinates = setInterval(() => {
            this.saveCoordinates();
        }, 30000);
        jQuery("#close_switch_detail").click(function () {
            jQuery("#topology-click-txt").css("display", "none");
        });
    }
    syncUserCoordinatesChanges() {
        if (this.syncCoordinates) {
            clearTimeout(this.syncCoordinates);
        }
        this.syncCoordinates = setTimeout(() => {
            this.saveCoordinates();
        }, 1500);
    }
    ngOnDestroy() {
        if (this.autoRefreshTimerInstance) {
            clearInterval(this.autoRefreshTimerInstance);
        }
        if (this.syncCoordinates) {
            clearTimeout(this.syncCoordinates);
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"])("blur", ["$event"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Function),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [Event]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:returntype", void 0)
], TopologyComponent.prototype, "onBlur", null);
TopologyComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: "app-topology",
        template: __webpack_require__(/*! ./topology.component.html */ "./src/app/modules/topology/topology.component.html"),
        styles: [__webpack_require__(/*! ./topology.component.css */ "./src/app/modules/topology/topology.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_topology_service__WEBPACK_IMPORTED_MODULE_2__["TopologyService"],
        _common_services_switch_service__WEBPACK_IMPORTED_MODULE_3__["SwitchService"],
        _common_services_user_service__WEBPACK_IMPORTED_MODULE_4__["UserService"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_6__["CommonService"],
        _common_services_flows_service__WEBPACK_IMPORTED_MODULE_8__["FlowsService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _angular_router__WEBPACK_IMPORTED_MODULE_14__["Router"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_11__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_12__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_13__["Title"]])
], TopologyComponent);



/***/ }),

/***/ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.css":
/*!**************************************************************************************!*\
  !*** ./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.css ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTable tfoot {\r\n    display: table-header-group;\r\n}\r\n\r\ntable.dataTable i.fa{\r\n    float: right;\r\n    font-size:12px;\r\n}\r\n\r\ntable.dataTable .flowDataRow.up-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #19b365;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable .flowDataRow.down-state .divTableCell:first-child:before {\r\n    width: 8px;\r\n    height: 8px;\r\n    background: #b64545;\r\n    border-radius: 100%;\r\n    position: absolute;\r\n    left: 10px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    content: \"\";\r\n}\r\n\r\ntable.dataTable thead th span {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    display: inline-block;\r\n    width: calc(100% - 25px);\r\n    line-height: normal;\r\n    vertical-align: middle;\r\n}\r\n\r\ntable.dataTable td {\r\n        position: relative;\r\n        text-overflow: ellipsis;\r\n        white-space: nowrap;\r\n        background-position: right 10px;\r\n        padding: 10px 20px 10px 18px;\r\n        overflow: hidden;\r\n        vertical-align: middle;\r\n    \r\n}\r\n\r\ntable.dataTable tbody tr td:first-child {\r\n    padding-left: 25px !important;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter input {\r\n    border: 1px solid #aaa !important;\r\n    height: 30px !important;\r\n    width: 240px !important;\r\n    padding: 5px !important;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS91bmlkaXJlY3Rpb25hbC1pc2wvdW5pZGlyZWN0aW9uYWwtaXNsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSwyQkFBMkI7QUFDL0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osY0FBYztBQUNsQjs7QUFHQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixrQkFBa0I7SUFDbEIsVUFBVTtJQUNWLE1BQU07SUFDTixTQUFTO0lBQ1QsWUFBWTtJQUNaLFdBQVc7QUFDZjs7QUFHQTtJQUNJLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHFCQUFxQjtJQUNyQix3QkFBd0I7SUFDeEIsbUJBQW1CO0lBQ25CLHNCQUFzQjtBQUMxQjs7QUFHQTtRQUNRLGtCQUFrQjtRQUNsQix1QkFBdUI7UUFDdkIsbUJBQW1CO1FBQ25CLCtCQUErQjtRQUMvQiw0QkFBNEI7UUFDNUIsZ0JBQWdCO1FBQ2hCLHNCQUFzQjs7QUFFOUI7O0FBRUE7SUFDSSw2QkFBNkI7QUFDakM7O0FBRUE7SUFDSSxpQ0FBaUM7SUFDakMsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2Qix1QkFBdUI7QUFDM0I7O0FBRUE7R0FDRyw2QkFBNkI7QUFDaEM7O0FBRUE7UUFDUSw2QkFBNkI7QUFDckMiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3RvcG9sb2d5L3VuaWRpcmVjdGlvbmFsLWlzbC91bmlkaXJlY3Rpb25hbC1pc2wuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYXRhVGFibGUgdGZvb3Qge1xyXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgaS5mYXtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIGZvbnQtc2l6ZToxMnB4O1xyXG59XHJcblxyXG5cclxudGFibGUuZGF0YVRhYmxlIC5mbG93RGF0YVJvdy51cC1zdGF0ZSAuZGl2VGFibGVDZWxsOmZpcnN0LWNoaWxkOmJlZm9yZSB7XHJcbiAgICB3aWR0aDogOHB4O1xyXG4gICAgaGVpZ2h0OiA4cHg7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMTliMzY1O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGxlZnQ6IDEwcHg7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBib3R0b206IDA7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBjb250ZW50OiBcIlwiO1xyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgLmZsb3dEYXRhUm93LmRvd24tc3RhdGUgLmRpdlRhYmxlQ2VsbDpmaXJzdC1jaGlsZDpiZWZvcmUge1xyXG4gICAgd2lkdGg6IDhweDtcclxuICAgIGhlaWdodDogOHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2I2NDU0NTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAxMHB4O1xyXG4gICAgdG9wOiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG4gICAgbWFyZ2luOiBhdXRvO1xyXG4gICAgY29udGVudDogXCJcIjtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0aCBzcGFuIHtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gMjVweCk7XHJcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSB0ZCB7XHJcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHggMTBweCAxOHB4O1xyXG4gICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIFxyXG59XHJcblxyXG50YWJsZS5kYXRhVGFibGUgdGJvZHkgdHIgdGQ6Zmlyc3QtY2hpbGQge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAyNXB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5kYXRhVGFibGVzX3dyYXBwZXIgLmRhdGFUYWJsZXNfZmlsdGVyIGlucHV0IHtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNhYWEgIWltcG9ydGFudDtcclxuICAgIGhlaWdodDogMzBweCAhaW1wb3J0YW50O1xyXG4gICAgd2lkdGg6IDI0MHB4ICFpbXBvcnRhbnQ7XHJcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcclxufVxyXG5cclxudGJvZHkgdHI6bnRoLWNoaWxkKG9kZCl7XHJcbiAgIGJhY2tncm91bmQ6I2YxZjFmMSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQoZXZlbil7XHJcbiAgICAgICAgYmFja2dyb3VuZDojZmZmZmZmICFpbXBvcnRhbnQ7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.html":
/*!***************************************************************************************!*\
  !*** ./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.html ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = " <table datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" id=\"unidirectional-isl-table\" class=\"isl-table-popup row-border hover\" cellspacing=\"0\">\r\n\t\t\t\t\t\t\t\t<thead>\r\n    <tr class=\"tableHeading\">\r\n        \r\n      <th >\r\n        <span title=\"Source Switch\">\r\n        Src Switch\r\n      </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedSrcSwitchName')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedSrcSwitchName\" [hidden]=\"!uexpandedSrcSwitchName\" />\r\n      </th>\r\n      <th ></th>\r\n    \r\n      <th><span title=\"Source Port\">Src Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedSrcPort')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedSrcPort\" [hidden]=\"!uexpandedSrcPort\"/>\r\n      </th>\r\n     \r\n      <th><span title=\"Destination Switch\">Dst Switch </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedDestinationSwitchName')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedDestinationSwitchName\" [hidden]=\"!uexpandedDestinationSwitchName\"/>\r\n      </th>\r\n      <th ></th>\r\n      <th><span title=\"Destination Port\">Dst Port </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedDestinationPort')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedDestinationPort\" [hidden]=\"!uexpandedDestinationPort\"/>\r\n      </th>\r\n      <th><span title=\"Cost\">Cost </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedCost')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedCost\" [hidden]=\"!uexpandedCost\"/>\r\n      </th>\r\n      <th><span title=\"State\">State </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedState')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedState\" [hidden]=\"!uexpandedState\"/>\r\n      </th>\r\n      <th ><span title=\"Speed(Mbps)\">Speed</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedSpeed')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedSpeed\" [hidden]=\"!uexpandedSpeed\"/>\r\n      </th>\r\n      <th ><span title=\"Available Bandwidth(Mbps)\">Available Bandwidth(Mbps) </span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedAvailableBandwidth')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedAvailableBandwidth\" [hidden]=\"!uexpandedAvailableBandwidth\"/>\r\n      </th>\r\n      <th ><span title=\"Latency\">Latency</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleuSearch($event,'uexpandedLatency')\"></i>\r\n        <input  class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"uexpandedLatency\" [hidden]=\"!uexpandedLatency\"/>\r\n      </th>\r\n      \r\n  </thead>\r\n\t\t\t\t\t\t\t\t<tbody>\r\n          <tr *ngFor=\"let row of unidirectionalISL; let i = index\">\r\n              <td title=\"{{row.source_switch_name}}\"  class=\"divTableCell\">{{row.source_switch_name || \"-\"}}</td>\r\n              <td title=\"{{row.source_switch}}\"  class=\"divTableCell\">{{row.source_switch || \"-\"}}</td>\r\n              <td title=\"{{row.src_port}}\"  class=\"divTableCell\">{{row.src_port || \"-\"}}</td>\r\n              <td title=\"{{row.target_switch_name}}\"  class=\"divTableCell\">{{row.target_switch_name || \"-\"}}</td>\r\n              <td title=\"{{row.target_switch}}\"  class=\"divTableCell\">{{row.target_switch || \"-\"}}</td>\r\n              <td title=\"{{row.dst_port}}\"  class=\"divTableCell\">{{row.dst_port || \"-\"}}</td>\r\n              <td title=\"{{row.cost}}\"  class=\"divTableCell\">{{row.cost || \"-\"}}</td>\r\n              <td title=\"{{row.state}}\"  class=\"divTableCell\">{{row.state || \"-\"}}</td>\r\n              <td title=\"{{row.speed}}\"  class=\"divTableCell\">{{row.speed || \"-\"}}</td>\r\n              <td title=\"{{row.available_bandwidth}}\"  class=\"divTableCell\">{{row.available_bandwidth || \"-\"}}</td>\r\n              <td title=\"{{row.latency}}\"  class=\"divTableCell\">{{row.latency || \"-\"}}</td>\r\n            </tr>\r\n      </tbody>\r\n\t\t\t\t\t\t\t</table>\r\n\r\n"

/***/ }),

/***/ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.ts":
/*!*************************************************************************************!*\
  !*** ./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.ts ***!
  \*************************************************************************************/
/*! exports provided: UnidirectionalIslComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnidirectionalIslComponent", function() { return UnidirectionalIslComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../common/services/switch.service */ "./src/app/common/services/switch.service.ts");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! src/app/common/services/topology.service */ "./src/app/common/services/topology.service.ts");






let UnidirectionalIslComponent = class UnidirectionalIslComponent {
    constructor(switchService, renderer, topologyService) {
        this.switchService = switchService;
        this.renderer = renderer;
        this.topologyService = topologyService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.uexpandedSrcSwitchName = false;
        this.uexpandedSrcPort = false;
        this.uexpandedDestinationSwitchName = false;
        this.uexpandedDestinationPort = false;
        this.uexpandedCost = false;
        this.uexpandedState = false;
        this.uexpandedSpeed = false;
        this.uexpandedAvailableBandwidth = false;
        this.uexpandedLatency = false;
        this.unidirectionalISL = topologyService.getUnidirectionalIsl();
    }
    ngOnInit() {
        this.dtOptions = {
            "iDisplayLength": 8,
            "bLengthChange": false,
            retrieve: true,
            autoWidth: false,
            colResize: false,
            lengthMenu: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            language: {
                searchPlaceholder: "Search"
            },
            drawCallback: function () {
                if (jQuery('#unidirectional-isl-table tbody tr').length < 10) {
                    jQuery('#unidirectional-isl-table_next').addClass('disabled');
                }
                else {
                    jQuery('#unidirectional-isl-table_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '14%', "sType": "name", "bSortable": true },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '14%' },
                { sWidth: '8%' },
                { sWidth: '8%' },
                { sWidth: '7%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '12%' },
                { sWidth: '8%' }
            ],
            "columnDefs": [
                {
                    "targets": [1],
                    "visible": false,
                    "searchable": true
                },
                {
                    "targets": [4],
                    "visible": false,
                    "searchable": true
                }
            ]
        };
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            try {
                this.dtTrigger.next();
            }
            catch (err) { }
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    toggleuSearch(e, inputContainer) {
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
        event.stopPropagation();
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_3__["DataTableDirective"])
], UnidirectionalIslComponent.prototype, "datatableElement", void 0);
UnidirectionalIslComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-unidirectional-isl',
        template: __webpack_require__(/*! ./unidirectional-isl.component.html */ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.html"),
        styles: [__webpack_require__(/*! ./unidirectional-isl.component.css */ "./src/app/modules/topology/unidirectional-isl/unidirectional-isl.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_switch_service__WEBPACK_IMPORTED_MODULE_2__["SwitchService"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"], src_app_common_services_topology_service__WEBPACK_IMPORTED_MODULE_5__["TopologyService"]])
], UnidirectionalIslComponent);



/***/ }),

/***/ "./src/app/modules/topology/world-map-view/world-map-view.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/modules/topology/world-map-view/world-map-view.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#world_map {\r\n    height: 700px;\r\n    width: 100%;\r\n  }\r\n .ol-rotate .ol-unselectable .ol-control .ol-hidden{\r\n \tdisplay:none!important;\r\n }\r\n .ol-attribution .ol-unselectable .ol-control .ol-uncollapsible{\r\n \tdisplay: none!important;\r\n }\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy90b3BvbG9neS93b3JsZC1tYXAtdmlldy93b3JsZC1tYXAtdmlldy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLFdBQVc7RUFDYjtDQUNEO0VBQ0Msc0JBQXNCO0NBQ3ZCO0NBQ0E7RUFDQyx1QkFBdUI7Q0FDeEIiLCJmaWxlIjoic3JjL2FwcC9tb2R1bGVzL3RvcG9sb2d5L3dvcmxkLW1hcC12aWV3L3dvcmxkLW1hcC12aWV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjd29ybGRfbWFwIHtcclxuICAgIGhlaWdodDogNzAwcHg7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbiAub2wtcm90YXRlIC5vbC11bnNlbGVjdGFibGUgLm9sLWNvbnRyb2wgLm9sLWhpZGRlbntcclxuIFx0ZGlzcGxheTpub25lIWltcG9ydGFudDtcclxuIH1cclxuIC5vbC1hdHRyaWJ1dGlvbiAub2wtdW5zZWxlY3RhYmxlIC5vbC1jb250cm9sIC5vbC11bmNvbGxhcHNpYmxle1xyXG4gXHRkaXNwbGF5OiBub25lIWltcG9ydGFudDtcclxuIH0iXX0= */"

/***/ }),

/***/ "./src/app/modules/topology/world-map-view/world-map-view.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/topology/world-map-view/world-map-view.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n<div class=\"row\">\r\n  <div tabindex=\"1\" id=\"world_map\"></div>\r\n  \r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/topology/world-map-view/world-map-view.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/topology/world-map-view/world-map-view.component.ts ***!
  \*****************************************************************************/
/*! exports provided: WorldMapViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WorldMapViewComponent", function() { return WorldMapViewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm2015/http.js");
/* harmony import */ var ol_Map__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ol/Map */ "./node_modules/ol/Map.js");
/* harmony import */ var ol_View__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ol/View */ "./node_modules/ol/View.js");
/* harmony import */ var ol_layer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ol/layer */ "./node_modules/ol/layer.js");
/* harmony import */ var ol_proj__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ol/proj */ "./node_modules/ol/proj.js");
/* harmony import */ var ol_source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ol/source */ "./node_modules/ol/source.js");
/* harmony import */ var ol_Feature__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ol/Feature */ "./node_modules/ol/Feature.js");
/* harmony import */ var ol_geom__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ol/geom */ "./node_modules/ol/geom.js");
/* harmony import */ var ol_Overlay__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ol/Overlay */ "./node_modules/ol/Overlay.js");
/* harmony import */ var ol_events_condition__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ol/events/condition */ "./node_modules/ol/events/condition.js");
/* harmony import */ var ol_style__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ol/style */ "./node_modules/ol/style.js");
/* harmony import */ var ol_interaction__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ol/interaction */ "./node_modules/ol/interaction.js");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../../../environments/environment */ "./src/environments/environment.ts");
/* harmony import */ var src_app_common_services_topology_graph_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! src/app/common/services/topology-graph.service */ "./src/app/common/services/topology-graph.service.ts");
















let WorldMapViewComponent = class WorldMapViewComponent {
    constructor(httpClient, topologyGraphService) {
        this.httpClient = httpClient;
        this.topologyGraphService = topologyGraphService;
        this.centerLng = 0;
        this.centerLat = 0;
        this.markers = [];
        this.pops = [];
        this.popLinks = [];
        this.markerSource = null;
        this.ClusterLinks = [];
        this.linkSource = null;
        this.clusterSource = null;
        this.linkFeatures = [];
        this.mouseCoordinates = null;
        this.clusterDistance = 50;
        this.container = document.getElementById('popup');
        this.content = document.getElementById('popup-content');
        this.closer = document.getElementById('popup-closer');
        this.popinfocontainer = document.getElementById('popInfoContainer');
        this.popinfocontent = document.getElementById('popInfocontent');
        this.popinfocloser = document.getElementById('popInfocloser');
        // minimise = document.getElementById('popup-minimize');
        // maximise = document.getElementById('popup-maximize');
        this.graph_loader = document.getElementById('graph_loader');
        this.default_location = {
            "pop": "Unknown",
            "datacenter": "Unknown",
            "latitude": 22.8951683,
            "longitude": 147.6138315,
            "country": "TPN",
            "city": "Atlantis"
        };
        this.selectSingleClick = new ol_interaction__WEBPACK_IMPORTED_MODULE_13__["Select"]({
            condition: ol_events_condition__WEBPACK_IMPORTED_MODULE_11__["singleClick"],
        });
        this.selectDoubleClick = new ol_interaction__WEBPACK_IMPORTED_MODULE_13__["Select"]({
            condition: ol_events_condition__WEBPACK_IMPORTED_MODULE_11__["doubleClick"],
        });
    }
    ngOnInit() {
    }
    getPopLinks(switches, links) {
        var switchIds = switches.map((d) => {
            return d.switch_id;
        });
        var isls = [];
        if (links && links.length) {
            links.forEach(link => {
                if (switchIds.indexOf(link.source_switch) > -1 && switchIds.indexOf(link.target_switch) > -1) {
                    isls.push(link);
                }
            });
        }
        return isls;
    }
    groupBy(objectArray, property) {
        var self = this;
        return objectArray.reduce((acc, obj) => {
            var keyValue = obj[property];
            if (!(keyValue.latitude && keyValue.longitude)) {
                obj[property] = self.default_location;
            }
            var key = obj[property].latitude + "_" + obj[property].longitude;
            if (!acc[key]) {
                acc[key] = [];
            }
            acc[key].push(obj);
            return acc;
        }, {});
    }
    checkIfAlreadyAdded(popLinks, linkObj) {
        var flag = false;
        for (var i = 0; i < popLinks.length; i++) {
            var src_dst_id = popLinks[i].src + "_" + popLinks[i].trgt;
            var dst_src_id = popLinks[i].trgt + "_" + popLinks[i].src;
            var linkSrc_dst_id = linkObj.src + "_" + linkObj.trgt;
            if (src_dst_id == linkSrc_dst_id || dst_src_id == linkSrc_dst_id) {
                flag = true;
                break;
            }
        }
        return flag;
    }
    ngOnChanges(change) {
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = JSON.parse(JSON.stringify(change.data.currentValue));
                if (this.data && this.data.switch && this.data.switch.length) {
                    this.links = this.data.isl;
                    this.switches = this.data.switch;
                    var popWiseData = this.groupBy(this.switches, 'location');
                    Object.keys(popWiseData).forEach((key) => {
                        var switchIds = popWiseData[key].map(s => { return s.switch_id; });
                        var pops = popWiseData[key].map(s => {
                            if (s.pop == '' || s.pop == 'undfined') {
                                return "Unknown";
                            }
                            return s.pop;
                        }).filter((value, i, self) => { return self.indexOf(value) === i; }).join(",");
                        var links = this.getPopLinks(popWiseData[key], this.links);
                        var d = { "id": key,
                            "pops": pops,
                            "switches": popWiseData[key],
                            "location": popWiseData[key][0].location,
                            "links": links,
                            "switchIds": switchIds
                        };
                        this.pops.push(d);
                    });
                    // fetching the links between pops
                    for (var i = 0; i < this.pops.length; i++) {
                        var sourcePop = this.pops[i];
                        for (var j = 0; j < this.pops.length; j++) {
                            if (i != j) {
                                var targetPop = this.pops[j];
                                var lnkObj = this.getLinkObjInPops(sourcePop, targetPop);
                                if (lnkObj && lnkObj.hasOwnProperty('source') && !this.checkIfAlreadyAdded(this.popLinks, lnkObj)) {
                                    this.popLinks.push(lnkObj);
                                }
                            }
                        }
                    }
                }
            }
            this.initMap();
        }
    }
    ngOnDestroy() {
    }
    ngAfterViewInit() {
        setTimeout(() => {
            this.map.updateSize();
        }, 100);
    }
    initMap() {
        this.overlay = new ol_Overlay__WEBPACK_IMPORTED_MODULE_10__["default"]({
            element: this.container,
            autoPan: true,
            autoPanAnimation: {
                duration: 250,
            },
        });
        this.popInfoOverlay = new ol_Overlay__WEBPACK_IMPORTED_MODULE_10__["default"]({
            element: this.popinfocontainer,
            autoPan: true,
            autoPanAnimation: {
                duration: 250,
            },
        });
        this.map = new ol_Map__WEBPACK_IMPORTED_MODULE_3__["default"]({
            layers: [
                new ol_layer__WEBPACK_IMPORTED_MODULE_5__["Tile"]({
                    source: new ol_source__WEBPACK_IMPORTED_MODULE_7__["OSM"]()
                })
            ],
            target: 'world_map',
            overlays: [this.overlay, this.popInfoOverlay],
            view: new ol_View__WEBPACK_IMPORTED_MODULE_4__["default"]({
                center: [0, 0],
                zoom: 2,
                minZoom: 2,
                maxZoom: 20,
            })
        });
        this.map.addInteraction(this.selectSingleClick);
        this.map.addInteraction(this.selectDoubleClick);
        var view = this.map.getView();
        view.setCenter(ol_proj__WEBPACK_IMPORTED_MODULE_6__["fromLonLat"]([this.centerLng, this.centerLat]));
        this.loadEvents();
        this.loadLinks(this.popLinks);
        this.loadMarkersClusters();
    }
    loadEvents() {
        var self = this;
        if (this.closer) {
            this.closer.onclick = (() => {
                this.overlay.setPosition(undefined);
                this.closer.blur();
                return false;
            });
        }
        if (this.popinfocloser) {
            this.popinfocloser.onclick = (() => {
                this.content.innerHTML = "";
                this.popInfoOverlay.setPosition(undefined);
                this.popinfocloser.blur();
                return false;
            });
        }
        // if(this.minimise){
        // 	this.minimise.onclick= (()=>{
        // 		console.log('here i m');
        // 		return false;	
        // 	});
        // }
        // if(this.maximise){
        // 	this.maximise.onclick= (()=>{
        // 		console.log('here i m max');
        // 		return false;	
        // 	});
        // }
        this.map.on('pointermove', (evt) => {
            var pixel = evt.pixel;
            var feature = this.map.forEachFeatureAtPixel(pixel, function (feature) {
                return feature;
            });
            if (feature && feature.values_ && typeof feature.values_.features != 'undefined' && feature.values_.features.length == 1) {
                var featureValues = feature.values_.features[0].values_;
                if (featureValues && featureValues.type == 'marker') {
                    var coordinate = feature.values_.features[0].getGeometry().getCoordinates();
                    self.popinfocontent.innerHTML = "";
                    var html = "<div class='col-md-12'><div class='form-group'><label><b>Pop: </b></label><span>" + featureValues.pop + "</span></div>";
                    html += "<div class='form-group'><label><b>City: </b></label><span>" + featureValues.city + "</span></div><div class='form-group'><label><b>Country: </b></label><span>" + featureValues.country + "</span></div></div>";
                    self.popinfocontent.innerHTML = html;
                    self.popInfoOverlay.setPosition(coordinate);
                }
            }
            else {
                self.popinfocontent.innerHTML = "";
                self.popInfoOverlay.setPosition(undefined);
            }
        });
        var currZoom = this.map.getView().getZoom();
        this.map.on('moveend', (e) => {
            var newZoom = this.map.getView().getZoom();
            if (currZoom != newZoom) {
                setTimeout(() => {
                    this.enableLinks();
                    this.loadCLusterLinks();
                }, 500);
            }
        });
        this.map.on('click', (evt) => {
            this.mouseCoordinates = evt.coordinate;
            if (this.overlay.getPosition()) {
                this.content.innerHTML = "";
                this.overlay.setPosition(undefined);
                this.closer.blur();
            }
        });
        this.selectDoubleClick.on('select', (evt) => {
            if (evt.target.getFeatures().getLength() > 0) {
                var features = evt.target.getFeatures().getArray();
                if (typeof features[0].values_.features != 'undefined' && features[0].values_.features.length > 1) {
                    var Clustercoordinate = features[0].getGeometry().getCoordinates();
                    var view = self.map.getView();
                    var zoomLevel = view.getZoom();
                    if (zoomLevel < 7) {
                        zoomLevel = 7;
                    }
                    else {
                        zoomLevel = zoomLevel + 1;
                    }
                    view.setZoom(zoomLevel);
                    view.setCenter(Clustercoordinate);
                }
            }
        });
        this.selectSingleClick.on('select', (evt) => {
            if (evt.target.getFeatures().getLength() > 0) {
                var features = evt.target.getFeatures().getArray();
                if (!(typeof features[0].values_.features != 'undefined' && features[0].values_.features.length > 1)) {
                    if (features[0].values_ && typeof features[0].values_.features != 'undefined') {
                        var featuresValues = features[0].values_.features[0].values_;
                        if (featuresValues.type == "marker") {
                            var coordinate = features[0].getGeometry().getCoordinates();
                            self.content.innerHTML = "";
                            self.graph_loader.style.display = "block";
                            self.overlay.setPosition(coordinate);
                            this.getPopupHtml(featuresValues.switches, featuresValues.links);
                        }
                    }
                    else if (features[0].values_ && typeof (features[0].values_.type) != 'undefined' && (features[0].values_.type == 'line' || features[0].values_.type == 'cluster_line')) {
                        var featuresValues = features[0].values_;
                        self.graph_loader.style.display = "none";
                        self.content.innerHTML = "";
                        self.content.innerHTML = this.getIslHtml(featuresValues);
                        self.overlay.setPosition(this.mouseCoordinates);
                    }
                }
            }
        });
    }
    getPopLinksStatus(features) {
        var featuresIds = [];
        if (features && features.length && features.length > 1) {
            features.forEach((f) => {
                var values = f.values_;
                var id = values.id;
                featuresIds.push(id);
            });
        }
        var status = "DISCOVERED";
        for (var i = 0; i < this.popLinks.length; i++) {
            var link = this.popLinks[i];
            if (featuresIds.indexOf(link.src) > -1 && featuresIds.indexOf(link.trgt) > -1) {
                status = link.status;
                if (status == "FAILED")
                    break;
            }
        }
        return status;
    }
    getStatusOfPops(features) {
        var status = "DISCOVERED";
        if (features && features.length) {
            features.forEach((f) => {
                var values = f.values_;
                var id = values.id;
                if (values.status == "FAILED") {
                    status = "FAILED";
                }
            });
        }
        return status;
    }
    getPopStatus(switches, links) {
        var state = "DISCOVERED";
        switches.forEach(s => {
            if (s.state == "DEACTIVATED") {
                state = "FAILED";
            }
        });
        links.forEach(l => {
            if (l.state == "FAILED") {
                state = "FAILED";
            }
        });
        return state;
    }
    loadMarkersClusters() {
        var self = this;
        if (this.pops && this.pops.length) {
            this.pops.forEach((data, i) => {
                var popState = this.getPopStatus(data.switches, data.links);
                this.markers[i] = new ol_Feature__WEBPACK_IMPORTED_MODULE_8__["default"]({
                    geometry: new ol_geom__WEBPACK_IMPORTED_MODULE_9__["Point"](ol_proj__WEBPACK_IMPORTED_MODULE_6__["fromLonLat"]([data.location.longitude, data.location.latitude])),
                    type: 'marker',
                    pop: data.pops,
                    id: data.id,
                    status: popState,
                    switches: data.switches,
                    links: data.links,
                    city: data.location.city,
                    country: data.location.country
                });
            });
        }
        this.markerSource = new ol_source__WEBPACK_IMPORTED_MODULE_7__["Vector"]({
            features: self.markers
        });
        this.clusterSource = new ol_source__WEBPACK_IMPORTED_MODULE_7__["Cluster"]({
            distance: parseInt(this.clusterDistance, 10),
            source: this.markerSource,
        });
        var vectorLayer = this.clusterLayer = new ol_layer__WEBPACK_IMPORTED_MODULE_5__["Vector"]({
            source: this.clusterSource,
            style: function (feature) {
                var size = feature.get('features').length;
                var status = "DISCOVERED";
                var statusPop = self.getStatusOfPops(feature.get('features'));
                if (size > 1) {
                    status = self.getPopLinksStatus(feature.get('features'));
                }
                if (statusPop == "FAILED") {
                    status = "FAILED";
                }
                if (size > 1) {
                    var icon = new ol_style__WEBPACK_IMPORTED_MODULE_12__["Icon"]({
                        src: _environments_environment__WEBPACK_IMPORTED_MODULE_14__["environment"].assetsPath + '/images/green.png',
                        scale: 0.4
                    });
                    if (status == "FAILED") {
                        icon = new ol_style__WEBPACK_IMPORTED_MODULE_12__["Icon"]({
                            src: _environments_environment__WEBPACK_IMPORTED_MODULE_14__["environment"].assetsPath + '/images/red.png',
                            scale: 0.4
                        });
                    }
                    var style = new ol_style__WEBPACK_IMPORTED_MODULE_12__["Style"]({
                        image: icon,
                        text: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Text"]({
                            text: size.toString(),
                            fill: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Fill"]({
                                color: '#000',
                            }),
                        }),
                    });
                }
                else {
                    var color = "black";
                    if (status == 'FAILED') {
                        color = 'red';
                    }
                    var style = new ol_style__WEBPACK_IMPORTED_MODULE_12__["Style"]({
                        image: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Circle"]({
                            radius: 5,
                            fill: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Fill"]({ color: 'white' }),
                            stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Stroke"]({
                                color: color,
                                width: 4,
                            })
                        }),
                    });
                }
                return style;
            },
        });
        this.map.addLayer(vectorLayer);
        vectorLayer.setZIndex(5, 10);
        setTimeout(() => {
            this.loadCLusterLinks();
        }, 500);
    }
    getIslHtml(values) {
        var linksData = typeof (values.linksData) != 'undefined' ? values.linksData : [];
        var html = "<div class='table-wrapper-scroll-y my-custom-scrollbar'><table  class='table table-bordered table-striped mb-0'><thead><th>Src Switch</th><th>Src Port</th><th>Dst Switch</th><th>Dst Port</th><th>Status</th><thead><tbody>";
        if (linksData.length > 0) {
            linksData.forEach(link => {
                var url = "isl/switch/isl/" + link.source_switch + "/" + link.src_port + "/" + link.target_switch + "/" + link.dst_port;
                html += "<tr  class='cursor-pointer islLink'><td><a href='" + url + "' target='_blank'>" + link.source_switch_name + "</a></td><td><a href='" + url + "' target='_blank'>" + link.src_port + "</a></td><td><a href='" + url + "' target='_blank'>" + link.target_switch_name + "</a></td><td><a href='" + url + "' target='_blank'>" + link.dst_port + "</a></td><td><a href='" + url + "' target='_blank'>" + link.state + "</a></td></tr>";
            });
        }
        else if (values.clusterLinkData && values.clusterLinkData.length) {
            var links = values.clusterLinkData;
            links.forEach(link => {
                var url = "isl/switch/isl/" + link.source_switch + "/" + link.src_port + "/" + link.target_switch + "/" + link.dst_port;
                html += "<tr class='cursor-pointer islLink'><td><a href='" + url + "' target='_blank'>" + link.source_switch_name + "</a></td><td><a href='" + url + "' target='_blank'>" + link.src_port + "</a></td><td><a href='" + url + "' target='_blank'>" + link.target_switch_name + "</a></td><td><a href='" + url + "' target='_blank'>" + link.dst_port + "</a></td><td><a href='" + url + "'  target='_blank'>" + link.state + "</a></td></tr>";
            });
        }
        html += "</tbody></table></div>";
        return html;
    }
    getPopupHtml(switches, links) {
        this.graphdata = { nodes: switches, links: links };
        var margin = { top: 10, right: 30, bottom: 60, left: 40 }, width = this.content.offsetWidth || 400 - margin.left - margin.right, height = this.content.offsetHeight || 400 - margin.top - margin.bottom;
        this.topologyGraphService.loadworldMapGraph(this.graphdata, 'popup-content', width, height, this.graph_loader);
    }
    enableLinks() {
        if (this.clusterSource && this.clusterSource.features && this.clusterSource.features.length) {
            var LinkArr = [];
            this.clusterSource.features.forEach((f) => {
                if (f.values_.features.length == 1) {
                    var featureValues = f.values_.features[0].values_;
                    LinkArr.push(featureValues.id);
                }
            });
            if (this.linkSource) {
                Object.keys(this.linkSource.uidIndex_).forEach((l) => {
                    var src = this.linkSource.uidIndex_[l].values_.source;
                    var dst = this.linkSource.uidIndex_[l].values_.target;
                    if (LinkArr.indexOf(src) >= 0 && LinkArr.indexOf(dst) >= 0) {
                        this.linkSource.uidIndex_[l].values_.finished = true;
                    }
                    else {
                        this.linkSource.uidIndex_[l].values_.finished = false;
                    }
                });
                setTimeout(() => {
                    this.linkLayer.getSource().changed();
                }, 500);
            }
        }
    }
    loadCLusterLinks() {
        if (this.clusterSource && this.clusterSource.features && this.clusterSource.features.length) {
            var clusterFeatures = this.clusterSource.features;
            this.ClusterLinks = [];
            if (this.linkSource) {
                for (var i = 0; i < clusterFeatures.length; i++) {
                    var source = clusterFeatures[i];
                    var linkArr = [];
                    if (source.values_.features.length > 0) {
                        var sourceFeatures = source.values_.features;
                        sourceFeatures.forEach((sf) => {
                            linkArr.push(sf.values_.id);
                        });
                    }
                    for (var j = 0; j < clusterFeatures.length; j++) {
                        if (i != j) {
                            var target = clusterFeatures[j];
                            var linkTargetArr = [];
                            if (target.values_.features.length > 1) {
                                var targeteFeatures = target.values_.features;
                                targeteFeatures.forEach((sf) => {
                                    linkTargetArr.push(sf.values_.id);
                                });
                            }
                            var hasLink = false;
                            var no_of_links = 0;
                            var link_status_failed = false;
                            var linksData = [];
                            this.popLinks.forEach((link) => {
                                var src = link.src;
                                var dst = link.trgt;
                                var linkStatus = link.status;
                                if (linkArr.indexOf(src) > -1 && linkTargetArr.indexOf(dst) > -1) {
                                    hasLink = true;
                                    var links = link.links;
                                    if (links.length) {
                                        links.forEach((l) => {
                                            linksData.push(l);
                                        });
                                    }
                                    if (linkStatus == 'FAILED') {
                                        link_status_failed = true;
                                    }
                                }
                                else if (linkTargetArr.indexOf(src) > -1 && linkArr.indexOf(dst) > -1) {
                                    hasLink = true;
                                    var links = link.links;
                                    if (links.length) {
                                        links.forEach((l) => {
                                            linksData.push(l);
                                        });
                                    }
                                    if (linkStatus == 'FAILED') {
                                        link_status_failed = true;
                                    }
                                }
                            });
                            no_of_links = linksData.length;
                            if (hasLink) {
                                var start_point = source.getGeometry().getCoordinates();
                                var end_point = target.getGeometry().getCoordinates();
                                var line = new ol_geom__WEBPACK_IMPORTED_MODULE_9__["LineString"]([start_point, end_point]);
                                var color = "#00aeff";
                                if (link_status_failed) {
                                    color = "#d93923";
                                }
                                var feature = new ol_Feature__WEBPACK_IMPORTED_MODULE_8__["default"]({
                                    geometry: line,
                                    finished: true,
                                    type: 'cluster_line',
                                    clusterLinkData: linksData,
                                    color: color,
                                    no_links: no_of_links.toString()
                                });
                                this.ClusterLinks.push(feature);
                            }
                        }
                    }
                    setTimeout(() => {
                        if (typeof this.clusterLinkLayer != 'undefined' && typeof this.clusterLinkLayer.getSource() != 'undefined') {
                            this.clusterLinkLayer.getSource().clear();
                        }
                        this.clusterLinkSource = new ol_source__WEBPACK_IMPORTED_MODULE_7__["Vector"]({
                            features: this.ClusterLinks
                        });
                        this.clusterLinkLayer = new ol_layer__WEBPACK_IMPORTED_MODULE_5__["Vector"]({
                            source: this.clusterLinkSource,
                            style: function (feature) {
                                var no_links = feature.get('no_links');
                                var color = feature.get('color');
                                return new ol_style__WEBPACK_IMPORTED_MODULE_12__["Style"]({
                                    stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Stroke"]({
                                        color: color,
                                        width: 2
                                    }),
                                    text: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Text"]({
                                        text: no_links,
                                        font: '10px Arial, sans-serif',
                                        fill: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Fill"]({ color: 'black' }),
                                        stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Stroke"]({ color: 'black', width: 0.5 })
                                    }),
                                });
                            }
                        });
                        this.map.addLayer(this.clusterLinkLayer);
                        this.clusterLinkLayer.setZIndex(2, 10);
                    }, 100);
                }
            }
        }
    }
    getLinkObjInPops(srcPop, targetPop) {
        var hasLink = false;
        var no_of_links = 0;
        var status = "DISCOVERED";
        var links = [];
        this.links.forEach(l => {
            if (srcPop.switchIds.indexOf(l.source_switch) > -1 && targetPop.switchIds.indexOf(l.target_switch) > -1) {
                hasLink = true;
                no_of_links = no_of_links + 1;
                links.push(l);
                if (l.state == 'FAILED') {
                    status = "FAILED";
                }
            }
            else if (targetPop.switchIds.indexOf(l.source_switch) > -1 && srcPop.switchIds.indexOf(l.target_switch) > -1) {
                hasLink = true;
                no_of_links = no_of_links + 1;
                links.push(l);
                if (l.state == 'FAILED') {
                    status = "FAILED";
                }
            }
        });
        if (hasLink) {
            return {
                "source": srcPop.location,
                "target": targetPop.location,
                "no_of_links": no_of_links.toString(),
                "status": status,
                "src": srcPop.id,
                "trgt": targetPop.id,
                "links": links
            };
        }
        return {};
    }
    loadLinks(links) {
        var self = this;
        if (links && links.length) {
            links.forEach((link, i) => {
                var start_point = ol_proj__WEBPACK_IMPORTED_MODULE_6__["transform"]([link.source.longitude, link.source.latitude], 'EPSG:4326', 'EPSG:3857');
                var end_point = ol_proj__WEBPACK_IMPORTED_MODULE_6__["transform"]([link.target.longitude, link.target.latitude], 'EPSG:4326', 'EPSG:3857');
                var line = new ol_geom__WEBPACK_IMPORTED_MODULE_9__["LineString"]([start_point, end_point]);
                var linksVal = link.no_of_links;
                var color = "#00aeff";
                var status = link.status;
                if (status == "FAILED") {
                    color = "#d93923";
                }
                var feature = new ol_Feature__WEBPACK_IMPORTED_MODULE_8__["default"]({
                    geometry: line,
                    finished: false,
                    type: 'line',
                    status: status,
                    links: linksVal,
                    color: color,
                    source: link.src,
                    target: link.trgt,
                    linksData: link.links
                });
                this.linkFeatures.push(feature);
            });
            this.addlinks();
        }
    }
    addlinks() {
        setTimeout(() => {
            this.linkSource = new ol_source__WEBPACK_IMPORTED_MODULE_7__["Vector"]({
                features: this.linkFeatures
            });
            this.linkLayer = new ol_layer__WEBPACK_IMPORTED_MODULE_5__["Vector"]({
                source: this.linkSource,
                style: function (feature) {
                    var color = feature.get('color');
                    var links = feature.get('links');
                    if (feature.get('finished')) {
                        return new ol_style__WEBPACK_IMPORTED_MODULE_12__["Style"]({
                            stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Stroke"]({
                                color: color,
                                width: 2
                            }),
                            text: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Text"]({
                                text: links,
                                font: '10px "Arial, sans-serif',
                                fill: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Fill"]({ color: 'black' }),
                                stroke: new ol_style__WEBPACK_IMPORTED_MODULE_12__["Stroke"]({ color: 'black', width: 0.5 })
                            })
                        });
                    }
                    else {
                        return null;
                    }
                }
            });
            this.map.addLayer(this.linkLayer);
            this.linkLayer.setZIndex(2, 10);
        }, 100);
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], WorldMapViewComponent.prototype, "data", void 0);
WorldMapViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-world-map-view',
        template: __webpack_require__(/*! ./world-map-view.component.html */ "./src/app/modules/topology/world-map-view/world-map-view.component.html"),
        styles: [__webpack_require__(/*! ./world-map-view.component.css */ "./src/app/modules/topology/world-map-view/world-map-view.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"], src_app_common_services_topology_graph_service__WEBPACK_IMPORTED_MODULE_15__["TopologyGraphService"]])
], WorldMapViewComponent);



/***/ }),

/***/ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.css":
/*!****************************************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity-list/useractivity-list.component.css ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcmFjdGl2aXR5L3VzZXJhY3Rpdml0eS1saXN0L3VzZXJhY3Rpdml0eS1saXN0LmNvbXBvbmVudC5jc3MifQ== */"

/***/ }),

/***/ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.html":
/*!*****************************************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity-list/useractivity-list.component.html ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"flow-table-wrapper\" [hidden]=\"wrapperHide\"></div>\r\n<table id=\"useractivityTable\" datatable [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover dataTable no-footer\">\r\n  <thead>\r\n    <tr class=\"tableHeading\">\r\n      <th><span title=\"ActivityTime\">Date Time</span></th>\r\n      <th><span title=\"clientIpAddress\">Ip Address</span></th>\r\n      <th><span title=\"userId\">Username</span></th>\r\n      <th><span title=\"activityType\">Type</span></th>\r\n      <th><span title=\"objectId\">Object</span></th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr class=\"flowDataRow \"  *ngFor=\"let row of data; let i = index\">\r\n      <td class=\"divTableCell\" title=\"{{row.activityTime | date:'long' }}\">{{row.activityTime | date:'long' }}</td>\r\n      <td class=\"divTableCell\" title=\"{{row.clientIpAddress}}\">{{row.clientIpAddress}}</td>\r\n      <td class=\"divTableCell\" title=\"{{row.username}}\">{{row.username}}</td>\r\n      <td class=\"divTableCell\" title=\"{{row.activityType}}\">{{row.activityType}}</td>\r\n      <td class=\"divTableCell\" title=\"{{row.objectId}}\">{{row.objectId}}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>"

/***/ }),

/***/ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.ts":
/*!***************************************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity-list/useractivity-list.component.ts ***!
  \***************************************************************************************/
/*! exports provided: UseractivityListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UseractivityListComponent", function() { return UseractivityListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! src/app/common/services/loader.service */ "./src/app/common/services/loader.service.ts");





let UseractivityListComponent = class UseractivityListComponent {
    constructor(loaderService, renderer) {
        this.loaderService = loaderService;
        this.renderer = renderer;
        this.data = [];
        this.dtOptions = {};
        this.wrapperHide = true;
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.wrapperHide = false;
    }
    ngOnInit() {
        var ref = this;
        this.dtOptions = {
            pageLength: 10,
            deferRender: true,
            info: true,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            retrieve: true,
            autoWidth: false,
            colResize: false,
            stateSave: false,
            "order": [],
            language: {
                searchPlaceholder: "Search"
            },
            drawCallback: function () {
                if (jQuery('#flowDataTable tbody tr').length < 10) {
                    jQuery('#flowDataTable_next').addClass('disabled');
                }
                else {
                    jQuery('#flowDataTable_next').removeClass('disabled');
                }
            },
            "aoColumns": [
                { sWidth: '15%', "sType": "name", "bSortable": true },
                { sWidth: '15%' },
                { sWidth: '15%' },
                { sWidth: '15%' },
                { sWidth: '20%', "bSortable": false },
            ],
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.wrapperHide = true;
                }, ref.data.length / 2);
            }
        };
    }
    ngOnChanges(change) {
        var ref = this;
        if (typeof (change.data) != 'undefined' && change.data) {
            if (typeof (change.data) !== 'undefined' && change.data.currentValue) {
                this.data = change.data.currentValue;
                this.dtTrigger.next();
            }
        }
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_2__["DataTableDirective"])
], UseractivityListComponent.prototype, "datatableElement", void 0);
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"])(),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", Object)
], UseractivityListComponent.prototype, "data", void 0);
UseractivityListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-useractivity-list',
        template: __webpack_require__(/*! ./useractivity-list.component.html */ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.html"),
        styles: [__webpack_require__(/*! ./useractivity-list.component.css */ "./src/app/modules/useractivity/useractivity-list/useractivity-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [src_app_common_services_loader_service__WEBPACK_IMPORTED_MODULE_4__["LoaderService"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]])
], UseractivityListComponent);



/***/ }),

/***/ "./src/app/modules/useractivity/useractivity.component.css":
/*!*****************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity.component.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "table.dataTable tr td {\r\n    border-right: 1px solid #ccc;\r\n    text-overflow: ellipsis;\r\n    position: relative;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    background-position: right 10px;\r\n    padding: 10px 20px 10px 18px;\r\n    overflow: hidden;\r\n    vertical-align: middle;\r\n}\r\n\r\n.labelFilter {\r\n    margin: -3px 30px;\r\n    float: left;\r\n}\r\n\r\nlabel {\r\n    font-weight: 400;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n    float: left;\r\n}\r\n\r\nul.selected-filter li {\r\n    float: left;\r\n    width: auto;\r\n}\r\n\r\n.selectedFilter span.badge.badge-secondary {\r\n    margin: 2px;\r\n    line-height: 1.5;\r\n    font-size: 15px;\r\n    font-weight: 100;\r\n}\r\n\r\nspan.closeBadge {\r\n    background: #fff;\r\n    color: #333;\r\n    width: 12px;\r\n    height: 12px;\r\n    display: -webkit-inline-box;\r\n    display: inline-flex;\r\n    font-size: 9px;\r\n    vertical-align: middle;\r\n    -webkit-box-pack: center;\r\n            justify-content: center;\r\n    -webkit-box-align: center;\r\n            align-items: center;\r\n    border-radius: 100%;\r\n    margin-left: 7px;\r\n    margin-right: -3px;\r\n    cursor: pointer;\r\n    margin-top: -3px;\r\n}\r\n\r\n.form-group input, .form-group select, .form-group textarea{\r\n    width:  100%;\r\n}\r\n\r\ntbody tr:nth-child(odd){\r\n   background:#f1f1f1 !important;\r\n}\r\n\r\ntbody tr:nth-child(even){\r\n        background:#ffffff !important;\r\n}\r\n\r\nspan.badge-heading {\r\n    font-weight: 700;\r\n}\r\n\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VyYWN0aXZpdHkvdXNlcmFjdGl2aXR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw0QkFBNEI7SUFDNUIsdUJBQXVCO0lBQ3ZCLGtCQUFrQjtJQUNsQix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLCtCQUErQjtJQUMvQiw0QkFBNEI7SUFDNUIsZ0JBQWdCO0lBQ2hCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztBQUNmOztBQUVBO0lBQ0ksV0FBVztJQUNYLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFdBQVc7SUFDWCxnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixXQUFXO0lBQ1gsV0FBVztJQUNYLFlBQVk7SUFDWiwyQkFBb0I7SUFBcEIsb0JBQW9CO0lBQ3BCLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0lBQ25CLG1CQUFtQjtJQUNuQixnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0dBQ0csNkJBQTZCO0FBQ2hDOztBQUVBO1FBQ1EsNkJBQTZCO0FBQ3JDOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VyYWN0aXZpdHkvdXNlcmFjdGl2aXR5LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZS5kYXRhVGFibGUgdHIgdGQge1xyXG4gICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2NjYztcclxuICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgYmFja2dyb3VuZC1wb3NpdGlvbjogcmlnaHQgMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHggMjBweCAxMHB4IDE4cHg7XHJcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxufVxyXG5cclxuLmxhYmVsRmlsdGVyIHtcclxuICAgIG1hcmdpbjogLTNweCAzMHB4O1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbn1cclxuXHJcbnVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG59XHJcblxyXG51bC5zZWxlY3RlZC1maWx0ZXIgbGkge1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICB3aWR0aDogYXV0bztcclxufVxyXG5cclxuLnNlbGVjdGVkRmlsdGVyIHNwYW4uYmFkZ2UuYmFkZ2Utc2Vjb25kYXJ5IHtcclxuICAgIG1hcmdpbjogMnB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XHJcbn1cclxuXHJcbnNwYW4uY2xvc2VCYWRnZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xyXG4gICAgY29sb3I6ICMzMzM7XHJcbiAgICB3aWR0aDogMTJweDtcclxuICAgIGhlaWdodDogMTJweDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gICAgZm9udC1zaXplOiA5cHg7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiA3cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC0zcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiAtM3B4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCBpbnB1dCwgLmZvcm0tZ3JvdXAgc2VsZWN0LCAuZm9ybS1ncm91cCB0ZXh0YXJlYXtcclxuICAgIHdpZHRoOiAgMTAwJTtcclxufVxyXG5cclxudGJvZHkgdHI6bnRoLWNoaWxkKG9kZCl7XHJcbiAgIGJhY2tncm91bmQ6I2YxZjFmMSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50Ym9keSB0cjpudGgtY2hpbGQoZXZlbil7XHJcbiAgICAgICAgYmFja2dyb3VuZDojZmZmZmZmICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnNwYW4uYmFkZ2UtaGVhZGluZyB7XHJcbiAgICBmb250LXdlaWdodDogNzAwO1xyXG59XHJcblxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/modules/useractivity/useractivity.component.html":
/*!******************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"switchdetails_div\">\r\n  <form [formGroup]=\"userActivityForm\" id=\"userActivityForm\" #roleform=\"ngForm\">\r\n  <div class=\"row form-group clearfix\">\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"row\">\r\n        <label class='col-sm-3 col-form-label'>Start Date:</label>\r\n        <div class='col-sm-6'>\r\n          <input datetime-picker placeholder=\"Date Time\"  [maxDate] = \"currentDate\"  (change)=\"onStartDateChange($event)\" formControlName=\"fromDateControl\" style=\"height: 35px !important; font-size: 12px !important;\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"row\">\r\n        <label class='col-sm-3 col-form-label'>End Date:</label>\r\n        <div class='col-sm-6'>\r\n          <input datetime-picker placeholder=\"Date Time\" (change)=\"onEndDateChange($event)\" formControlName=\"toDateControl\" style=\"height: 35px !important; font-size: 12px !important;\">\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n          <a href=\"javascript:void(0)\" (click)=\"setToCurrentDate()\" style=\"font-size: 14px; margin: 0px -13px;\">Set to now</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row form-group clearfix\">\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"row\">\r\n        <label class='col-sm-3 col-form-label'>Type:</label>\r\n        <div class='col-sm-6'>\r\n          <ng-select\r\n          formControlName=\"typeControl\"\r\n           [items]=\"typeDropdownList\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Type\"\r\n           clearAllText=\"Clear\"\r\n           (change)=\"onTypeInputChange($event)\">\r\n             \r\n           </ng-select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-sm-6\">\r\n      <div class=\"row\">\r\n        <label class='col-sm-3 col-form-label'>Username:</label>\r\n        <div class='col-sm-6'>\r\n          <ng-select\r\n          formControlName=\"usernameControl\"\r\n           [items]=\"userDrowdonList\"\r\n           bindLabel=\"user_name\"\r\n           bindValue=\"user_id\"\r\n           labelForId=\"user_id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Username\"\r\n           clearAllText=\"Clear\"\r\n           (change)=\"onUsernameInputChange($event)\">\r\n             \r\n           </ng-select>\r\n\r\n        </div>\r\n        <div class=\"col-sm-3\">\r\n          <span class=\"btn kilda_btn\" (click)=\"getFilteredDetails()\" style=\"margin-right:65px;\">Go</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n<div  class=\"col-sm-11 filter\" [hidden]=\"!showFilterBlock\"> \r\n\r\n        <div  id=\"selectedFilter\" class=\"selectedFilter form-group\">\r\n          <label class=\"labelFilter text-label\" style=\"margin-left: -13px; margin-bottom: 5px; margin-top: 10px; margin-right: 0px; font-size:13px;\">Selected Filters</label>\r\n           <ul class=\"selected-filter\" style=\"float: none; margin-left: 97px;\">\r\n            <li id=\"typeFilterSelected\" [hidden]= \"!showTypeFilter\">\r\n              <span class=\"badge badge-secondary\">\r\n                <span class=\"badge-heading\">Type : </span>\r\n                <span class=\"selectedValues\">{{typeValue}}</span>\r\n                <span (click)=\"removeTypeFilter()\" class=\"closeBadge\">X</span>\r\n              </span>\r\n            </li>\r\n            <li id=\"usernameFilterSelected\" [hidden]= \"!showUsernameFilter\">\r\n              <span class=\"badge badge-secondary\">\r\n                <span class=\"badge-heading\">Username : </span>\r\n                <span class=\"selectedValues\">{{usernameValue}}</span>\r\n                <span (click)=\"removeUsernameFilter()\" class=\"closeBadge\" >X</span>\r\n              </span>\r\n            </li>\r\n            <li id=\"fromFilterSelected\" [hidden]=\"!showStartDateFilter\">\r\n              <span class=\"badge badge-secondary\" >\r\n                <span class=\"badge-heading\">From : </span>\r\n                <span class=\"selectedValues\">{{startDate}}</span>\r\n                <span (click)=\"removeStartDateFilter()\" class=\"closeBadge\" >X</span>\r\n              </span>\r\n            </li>\r\n            <li id=\"toFilterSelected\" [hidden]=\"!showEndDateFilter\">\r\n              <span class=\"badge badge-secondary\">\r\n                <span class=\"badge-heading\">To : </span>\r\n                <span class=\"selectedValues\">{{endDate}}</span>\r\n                <span (click)=\"removeEndDateFilter()\" class=\"closeBadge\" >X</span>\r\n              </span>\r\n            </li>\r\n           </ul>\r\n        </div>\r\n      \r\n      </div>\r\n  \r\n\r\n <app-useractivity-list [data]=\"userActivityData\" *ngIf=\"!loadActivityData\"></app-useractivity-list>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/useractivity/useractivity.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/modules/useractivity/useractivity.component.ts ***!
  \****************************************************************/
/*! exports provided: UseractivityComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UseractivityComponent", function() { return UseractivityComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_user_activity_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/services/user-activity.service */ "./src/app/common/services/user-activity.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! moment */ "./node_modules/moment/moment.js");
/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(moment__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");











let UseractivityComponent = class UseractivityComponent {
    constructor(userActivityService, toastr, formBuilder, loaderService, titleService, commonService, router, toaster) {
        this.userActivityService = userActivityService;
        this.toastr = toastr;
        this.formBuilder = formBuilder;
        this.loaderService = loaderService;
        this.titleService = titleService;
        this.commonService = commonService;
        this.router = router;
        this.toaster = toaster;
        this.moment = moment__WEBPACK_IMPORTED_MODULE_5___default.a ? moment__WEBPACK_IMPORTED_MODULE_5___default.a : moment__WEBPACK_IMPORTED_MODULE_5__;
        this.userActivityData = [];
        this.currentDate = this.moment().format('YYYY/MM/DD HH:mm');
        this.type = [];
        this.username = [];
        this.showFilterBlock = false;
        this.showStartDateFilter = false;
        this.showEndDateFilter = false;
        this.showTypeFilter = false;
        this.showUsernameFilter = false;
        this.userDrowdonList = [];
        this.typeDropdownList = [];
        this.userId = [];
        this.loadActivityData = false;
        if (!this.commonService.hasPermission('menu_user_activity')) {
            this.toaster.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - User Activity');
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].loading_user_activity);
        this.startDate = this.moment().subtract(15, 'days').format('YYYY/MM/DD HH:mm');
        this.endDate = this.moment().format('YYYY/MM/DD HH:mm');
        this.callDropdownService();
        this.userActivityForm = this.formBuilder.group({
            typeControl: [''],
            usernameControl: [''],
            toDateControl: [''],
            fromDateControl: ['']
        });
        this.userActivityForm.controls["fromDateControl"].setValue(this.startDate);
        this.userActivityForm.controls["toDateControl"].setValue(this.endDate);
        this.showStartDateFilter = true;
        this.showEndDateFilter = true;
        this.getFilteredDetails();
    }
    callDropdownService() {
        this.userActivityService.getDropdownList().subscribe((data) => {
            this.typeDropdownList = data.activity_types;
            this.userDrowdonList = data.activity_users;
        }, error => {
            this.toastr.error("No type dropdown data", 'Error');
        });
    }
    onStartDateChange(event) {
        this.startDate = event.target.value;
        if (this.moment(new Date(this.startDate)).isAfter(this.moment(new Date(this.endDate)))) {
            this.toastr.error('Start Date must me less than End Date', "Error");
            this.startDate = null;
            event.target.value = '';
            return;
        }
        else if (this.moment(new Date(this.startDate)).isAfter(this.moment(new Date()))) {
            this.toastr.error('Start Date must me less than current Date and Time', "Error");
            this.startDate = null;
            event.target.value = '';
            return;
        }
        if (this.startDate !== '') {
            this.showStartDateFilter = true;
        }
        else {
            this.showStartDateFilter = false;
        }
        this.checkAllFilters();
    }
    onEndDateChange(event) {
        this.endDate = event.target.value;
        if (this.moment(new Date(this.startDate)).isAfter(this.moment(new Date(this.endDate)))) {
            this.toastr.error('End Date must me greater than Start Date', "Error");
            this.endDate = null;
            event.target.value = '';
            return;
        }
        if (this.endDate !== '') {
            this.showEndDateFilter = true;
        }
        else {
            this.showEndDateFilter = false;
        }
        this.checkAllFilters();
    }
    onTypeInputChange(event) {
        this.type = [];
        if (event.length > 0) {
            for (let i = 0; i < event.length; i++) {
                this.type.push(event[i].name);
            }
        }
        this.typeValue = this.type.toString();
        if (this.type.toString() !== '') {
            this.showTypeFilter = true;
        }
        else {
            this.showTypeFilter = false;
        }
        this.checkAllFilters();
    }
    onUsernameInputChange(event) {
        this.userId = [];
        this.username = [];
        if (event.length > 0) {
            for (let i = 0; i < event.length; i++) {
                this.userId.push(event[i].user_id);
                this.username.push(event[i].user_name);
            }
        }
        this.usernameValue = this.username.toString();
        if (this.username.toString() !== '') {
            this.showUsernameFilter = true;
        }
        else {
            this.showUsernameFilter = false;
        }
        this.checkAllFilters();
    }
    checkAllFilters() {
        if (this.showUsernameFilter === false && this.showTypeFilter === false &&
            this.showEndDateFilter === false && this.showStartDateFilter === false) {
            this.showFilterBlock = false;
        }
        else {
            this.showFilterBlock = true;
        }
    }
    getFilteredDetails() {
        this.loadActivityData = true;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].loading_user_activity);
        this.userActivityService.getFilteredUserActivityList(this.userId, this.type, this.startDate, this.endDate).subscribe((data) => {
            data = data.sort(function (a, b) {
                return b.activityTime - a.activityTime;
            });
            this.loaderService.hide();
            this.userActivityData = data;
            this.loadActivityData = false;
        }, error => {
            this.loaderService.hide();
            this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_10__["MessageObj"].no_user_activity, 'Error');
            this.userActivityData = [];
            this.loadActivityData = false;
        });
    }
    removeStartDateFilter() {
        this.startDate = '';
        this.userActivityForm.controls["fromDateControl"].setValue("");
        this.showStartDateFilter = false;
        this.checkAllFilters();
    }
    removeEndDateFilter() {
        this.endDate = '';
        this.showEndDateFilter = false;
        this.userActivityForm.controls["toDateControl"].setValue("");
        this.checkAllFilters();
    }
    removeUsernameFilter() {
        this.userId = [];
        this.userActivityForm.controls["usernameControl"].setValue([]);
        this.showUsernameFilter = false;
        this.checkAllFilters();
    }
    removeTypeFilter() {
        this.type = [];
        this.userActivityForm.controls["typeControl"].setValue([]);
        this.showTypeFilter = false;
        this.checkAllFilters();
    }
    setToCurrentDate() {
        this.endDate = this.moment().format('YYYY/MM/DD HH:mm');
        this.userActivityForm.controls["toDateControl"].setValue(this.endDate);
        let event = { "target": { 'value': this.endDate } };
        this.onEndDateChange(event);
    }
};
UseractivityComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-useractivity',
        template: __webpack_require__(/*! ./useractivity.component.html */ "./src/app/modules/useractivity/useractivity.component.html"),
        styles: [__webpack_require__(/*! ./useractivity.component.css */ "./src/app/modules/useractivity/useractivity.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_user_activity_service__WEBPACK_IMPORTED_MODULE_3__["UserActivityService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        src_app_common_services_common_service__WEBPACK_IMPORTED_MODULE_8__["CommonService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_9__["Router"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"]])
], UseractivityComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.css":
/*!************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.css ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "label {\r\n    font-weight: 400;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9wZXJtaXNzaW9ucy9wZXJtaXNzaW9uLWFkZC9wZXJtaXNzaW9uLWFkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9wZXJtaXNzaW9ucy9wZXJtaXNzaW9uLWFkZC9wZXJtaXNzaW9uLWFkZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n    <form [formGroup]=\"permissionAddForm\" id=\"addpermissionform\" (ngSubmit)=\"addPermission()\" novalidate #permissionform=\"ngForm\">\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': permissionAddForm.controls['name'].errors && permissionform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Name:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n          <div *ngIf=\"permissionAddForm.controls['name'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n            <span >Name is required.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n        <label class=\"col-sm-2\">Description:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n          <div class=\"col-sm-8 text-right\">\r\n            <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Close</button>\r\n            <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Add Permission</button>\r\n          </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  "

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: PermissionAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionAddComponent", function() { return PermissionAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let PermissionAddComponent = class PermissionAddComponent {
    constructor(formBuilder, tabService, permissionService, toastr, titleService, loaderService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.submitted = false;
    }
    /* Create User add form */
    createForm() {
        this.permissionAddForm = this.formBuilder.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: []
        });
    }
    /*
      Method: addPermission
      Description: Add new permission
    */
    addPermission() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].adding_permission);
        this.submitted = true;
        if (this.permissionAddForm.invalid) {
            return;
        }
        this.permissionData = {
            'name': this.permissionAddForm.value.name,
            'description': this.permissionAddForm.value.description,
        };
        this.permissionService.addPermission(this.permissionData).subscribe(permission => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].permission_added, 'Success! ');
            this.tabService.setSelectedTab('permissions');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    close() {
        // send text to subscribers via observable subject
        this.tabService.setSelectedTab('Add Permission');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Permissions');
        this.createForm();
    }
};
PermissionAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-permission-add',
        template: __webpack_require__(/*! ./permission-add.component.html */ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.html"),
        styles: [__webpack_require__(/*! ./permission-add.component.css */ "./src/app/modules/usermanagement/permissions/permission-add/permission-add.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"]])
], PermissionAddComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.css":
/*!******************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.css ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcGVybWlzc2lvbnMvcGVybWlzc2lvbi1hc3NpZ24vcGVybWlzc2lvbi1hc3NpZ24uY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.html":
/*!*******************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"permissionAssignForm\" id=\"addpermissionform\" (ngSubmit)=\"submitform()\" novalidate #permissionform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': permissionAssignForm.controls['name'].errors && permissionform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n        <div *ngIf=\"permissionAssignForm.controls['name'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': permissionAssignForm.controls['name'].errors && permissionform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Description:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n        <div *ngIf=\"permissionAssignForm.controls['description'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Description is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-sm-2 control-label required\">Roles:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"role\"\r\n          [items]=\"roleData\"\r\n          bindLabel=\"name\"\r\n          bindValue=\"id\"\r\n          labelForId=\"id\"\r\n          [multiple]=\"true\"\r\n          placeholder=\"Select Role\"\r\n          clearAllText=\"Clear\"\r\n      > </ng-select>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Close</button>\r\n          <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Assign Roles</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: PermissionAssignComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionAssignComponent", function() { return PermissionAssignComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let PermissionAssignComponent = class PermissionAssignComponent {
    constructor(formBuilder, tabService, permissionService, roleService, toastr, titleService, loaderService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.roleService = roleService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.roles = [];
        this.roleData = [];
        this.selectedPermissionRoles = [];
        this.roleService.getRoles().subscribe((role) => {
            role.map((role) => {
                this.roles.push({ id: role.role_id, name: role.name });
            });
            this.roleData = this.roles;
            this.permissionService.currentPermission.subscribe(permissionId => {
                if (permissionId) {
                    this.selectedPermission = permissionId;
                    this.permissionService.getPermissionById(permissionId).subscribe(permission => {
                        role.map((role) => {
                            if ((role.permissions.filter(rp => rp.name == permission.name)).length > 0) {
                                this.selectedPermissionRoles.push(role.role_id);
                            }
                        });
                        this.permissionAssignForm.patchValue({
                            name: permission.name,
                            description: permission.description,
                            role: this.selectedPermissionRoles
                        });
                    });
                }
            });
        }, error => {
            console.log("error", error);
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createAssignForm() {
        this.permissionAssignForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            role: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]()
        });
    }
    /*
      Method: submitform
      Description: Trigger when click on "Assign Role" Button
    */
    submitform() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].assigning_roles);
        this.submitted = true;
        if (this.permissionAssignForm.invalid) {
            return;
        }
        let assignedRoles = this.permissionAssignForm.value.role;
        let roles = [];
        assignedRoles.map(role => {
            roles.push({ "role_id": role });
        });
        this.roleAssignData = { "roles": roles };
        this.permissionService.assignPermission(this.selectedPermission, this.roleAssignData).subscribe(role => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].role_assigned, 'Success! ');
            this.tabService.setSelectedTab('permissions');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-auxiliary-message'], 'Error! ');
        });
    }
    close() {
        this.tabService.setSelectedTab('permissions');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Assign Roles');
        this.createAssignForm();
    }
};
PermissionAssignComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-permission-assign',
        template: __webpack_require__(/*! ./permission-assign.component.html */ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.html"),
        styles: [__webpack_require__(/*! ./permission-assign.component.css */ "./src/app/modules/usermanagement/permissions/permission-assign/permission-assign.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_6__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], PermissionAssignComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.css":
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.css ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcGVybWlzc2lvbnMvcGVybWlzc2lvbi1lZGl0L3Blcm1pc3Npb24tZWRpdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.html":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"permissionEditForm\" id=\"addpermissionform\" (ngSubmit)=\"updatePermission()\" novalidate #permissionform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': permissionEditForm.controls['name'].errors && permissionform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n        <div *ngIf=\"permissionEditForm.controls['name'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-sm-2\">Description:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" (click)=\"close()\" class=\"btn kilda_btn\">Close</button>\r\n          <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Update Permission</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PermissionEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionEditComponent", function() { return PermissionEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");









let PermissionEditComponent = class PermissionEditComponent {
    constructor(tabService, permissionService, toastr, titleService, loaderService) {
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
    }
    getPermissionById() {
        this.permissionService.currentPermission.subscribe(permissionId => {
            if (permissionId) {
                this.selectedPermission = permissionId;
                this.permissionService.getPermissionById(permissionId).subscribe(permission => {
                    this.permissionEditForm.patchValue({
                        name: permission.name,
                        description: permission.description
                    });
                });
            }
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createAssignForm() {
        this.permissionEditForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '' }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '' })
        });
    }
    /*
      Method: updatePermission
      Description: updated permission data
    */
    updatePermission() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].updating_permission);
        this.submitted = true;
        if (this.permissionEditForm.invalid) {
            return;
        }
        this.permissionData = {
            'name': this.permissionEditForm.value.name,
            'description': this.permissionEditForm.value.description,
        };
        this.permissionService.editPermission(this.selectedPermission, this.permissionData).subscribe(permission => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_8__["MessageObj"].permission_updated, 'Success! ');
            this.tabService.setSelectedTab('permissions');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    close() {
        this.tabService.setSelectedTab('permissions');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Edit Permission');
        this.getPermissionById();
        this.createAssignForm();
    }
};
PermissionEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-permission-edit',
        template: __webpack_require__(/*! ./permission-edit.component.html */ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.html"),
        styles: [__webpack_require__(/*! ./permission-edit.component.css */ "./src/app/modules/usermanagement/permissions/permission-edit/permission-edit.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"]])
], PermissionEditComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.css":
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.css ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTables_wrapper .dataTables_filter {\r\n    display: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9wZXJtaXNzaW9ucy9wZXJtaXNzaW9uLWxpc3QvcGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9wZXJtaXNzaW9ucy9wZXJtaXNzaW9uLWxpc3QvcGVybWlzc2lvbi1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YVRhYmxlc193cmFwcGVyIC5kYXRhVGFibGVzX2ZpbHRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.html":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"usermanagement-table-wrapper\" [hidden]=\"hide\"></div>\r\n<table datatable id=\"permission_table\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n  <thead>\r\n    <tr class=\"tableHeading\" role=\"row\">\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Name\">Name</span> \r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedName')\"></i>\r\n        <input type=\"search\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" id=\"expandedName\" placeholder=\"Search\" [hidden]=\"!expandedName\"/>\r\n      </th>\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Roles\">Description</span> \r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedDescription')\"></i>\r\n        <input type=\"search\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" id=\"expandedDescription\" placeholder=\"Search\" [hidden]=\"!expandedDescription\"/>\r\n      </th>\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Options\">Options</span>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody id=\"user-details\">\r\n    <tr *ngFor=\"let permission of allPermissions\">\r\n      <td>{{permission.name}}</td>\r\n      <td>{{permission.description}}</td>\r\n      <td style=\"font-size: 0.5rem;\">\r\n        <!-- <i title=\"Edit\" (click)=\"OpenTab('permission-edit' ,permission.permission_id)\" class=\"fa fa-pencil-square-o fa-2x cursor-pointer\" *ngIf=\"commonService.hasPermission('um_user_edit')\"></i> -->\r\n        <i title=\"Assign Roles\" (click)=\"OpenTab('permission-assign' ,permission.permission_id)\" class=\"fa fa-users fa-2x\" *ngIf=\"commonService.hasPermission('um_assign_permission_to_roles')\"></i>\r\n        <i title=\"View Roles\" (click)=\"OpenTab('permission-view' ,permission.permission_id)\" class=\"fa fa-user fa-2x\" *ngIf=\"commonService.hasPermission('um_permission_view_roles')\"></i>\r\n        <i title=\"Active/Inactive\" (click)=\"activeInactivePermission(permission.permission_id, permission.status)\" [ngClass]=\"{'fa-toggle-on': permission.status== 'Active', 'fa-toggle-off': permission.status== 'Inactive'}\" class=\"fa cursor-pointer fa-2x\" *ngIf=\"commonService.hasPermission('um_permission_activate')\"></i>\r\n        <!-- <i title=\"Delete\" (click)=\"deletePemission(permission.permission_id)\" class=\"fa fa-trash-o fa-2x cursor-pointer\" *ngIf=\"commonService.hasPermission('um_user_delete')\"></i> -->\r\n        </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PermissionListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionListComponent", function() { return PermissionListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var _node_modules_ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../node_modules/ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");













let PermissionListComponent = class PermissionListComponent {
    constructor(permissionService, toastr, loaderService, tabService, titleService, modalService, renderer, commonService) {
        this.permissionService = permissionService;
        this.toastr = toastr;
        this.loaderService = loaderService;
        this.tabService = tabService;
        this.titleService = titleService;
        this.modalService = modalService;
        this.renderer = renderer;
        this.commonService = commonService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.hide = false;
        this.loadCount = 0;
        this.expandedName = false;
        this.expandedDescription = false;
    }
    getPermissions() {
        this.loadCount++;
        this.hide = false;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].loading_permission);
        this.permissionService.getPermissions().subscribe((permission) => {
            this.allPermissions = permission;
            this.rerender();
            this.ngAfterViewInit();
        }, error => {
            if (error) {
                if (error.status == 0) {
                    this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].connection_refused, 'Warning');
                }
                else if (error.error['error-message']) {
                    this.toastr.error(error.error['error-message'], 'Error');
                }
                else {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].something_wrong, 'Error');
                }
            }
            else {
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].something_wrong, 'Error');
            }
            this.rerender();
        });
    }
    /*
     Method: activeInactiveUser
     Description: Active / InActive user status
   */
    activeInactivePermission(id, status) {
        let statusText;
        if (status == 'Inactive') {
            this.changeStatus = { "status": "active" };
            statusText = 'active';
        }
        else if (status == 'Active') {
            this.changeStatus = { "status": "inactive" };
            statusText = 'Inactive';
        }
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_10__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to ' + statusText + ' this Permission ?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.permissionService.editPermission(id, this.changeStatus).subscribe(permission => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].permission_status_changed, 'Success');
                    this.getPermissions();
                }, error => {
                    this.toastr.error(error.error['error-message']);
                });
            }
        });
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    ngOnInit() {
        let ref = this;
        this.titleService.setTitle('OPEN KILDA - Permissions');
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].loading_permission);
        this.dtOptions = {
            pageLength: 10,
            retrieve: true,
            autoWidth: true,
            colResize: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            drawCallback: function () {
                if (jQuery('#permission_table tbody tr').length < 10) {
                    jQuery('#permission_table_next').addClass('disabled');
                }
                else {
                    jQuery('#permission_table_next').removeClass('disabled');
                }
            },
            "aoColumns": [{
                    sWidth: '20%',
                }, {
                    sWidth: '50%',
                }, {
                    sWidth: '30%', "bSortable": false
                }
            ],
            language: {
                searchPlaceholder: "Search"
            },
            initComplete: function (settings, json) {
                let timerOut = ref.loadCount > 1 ? ref.allPermissions.length * 2.7 : 1500;
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.hide = true;
                }, 1500);
            }
        };
        this.getPermissions();
    }
    /*
      Method: toggleSearch
      Description: Enable / disable of search text
    */
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    /*
      Method: deletePemission
      Description: Delete particular permission with selected permission id
    */
    deletePemission(id) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_10__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to delete permission?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.permissionService.deletePermission(id).subscribe(() => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].permission_removed, 'Success');
                    this.getPermissions();
                }, error => {
                    this.toastr.error(error.error['error-auxiliary-message']);
                });
            }
        });
    }
    /*
      Method: OpenTab
      Description: Used to open tabs with component selector
    */
    OpenTab(tab, id) {
        if (id) {
            this.permissionService.selectedPermission(id);
        }
        this.tabService.setSelectedTab(tab);
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"])
], PermissionListComponent.prototype, "datatableElement", void 0);
PermissionListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-permission-list',
        template: __webpack_require__(/*! ./permission-list.component.html */ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.html"),
        styles: [__webpack_require__(/*! ./permission-list.component.css */ "./src/app/modules/usermanagement/permissions/permission-list/permission-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_permission_service__WEBPACK_IMPORTED_MODULE_2__["PermissionService"],
        _node_modules_ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_7__["TabService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__["Title"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__["NgbModal"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__["CommonService"]])
], PermissionListComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.css":
/*!**************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.css ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".viewRole.permissionCol {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #eee;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    overflow: hidden;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9wZXJtaXNzaW9ucy9wZXJtaXNzaW9uLXZpZXcvcGVybWlzc2lvbi12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsNENBQTRDO0lBQzVDLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcGVybWlzc2lvbnMvcGVybWlzc2lvbi12aWV3L3Blcm1pc3Npb24tdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZpZXdSb2xlLnBlcm1pc3Npb25Db2wge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDZweCAxMnB4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDM7XHJcbiAgICBjb2xvcjogIzU1NTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsMCwwLC4wNzUpO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.html":
/*!***************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"permissionViewForm\" id=\"addpermissionform\" novalidate #permissionform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': permissionViewForm.controls['name'].errors && permissionform.submitted}\">\r\n      <label class=\"col-sm-2 control-label\">Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Name\" required/>\r\n        <div *ngIf=\"permissionViewForm.controls['name'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': permissionViewForm.controls['name'].errors && permissionform.submitted}\">\r\n      <label class=\"col-sm-2 control-label\">Description:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n        <div *ngIf=\"permissionViewForm.controls['description'].errors && permissionform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Description is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-sm-2 control-label\">Roles:</label>\r\n      <div class=\"col-sm-6\">\r\n          <div class=\"viewRole permissionCol\">\r\n            <span class=\"badge badge-pill badge-secondary\" *ngFor=\"let role of roles\">{{role.name}}</span>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"submitBtn\" (click)=\"close()\" class=\"btn kilda_btn\">Back</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: PermissionViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PermissionViewComponent", function() { return PermissionViewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");






let PermissionViewComponent = class PermissionViewComponent {
    constructor(tabService, permissionService, titleService) {
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.titleService = titleService;
    }
    /*
      Method: getPermissionById
      Description: Get Particular permission by permission id
    */
    getPermissionById() {
        this.permissionService.currentPermission.subscribe(permissionId => {
            if (permissionId) {
                this.permissionService.getPermissionById(permissionId).subscribe(permission => {
                    this.roles = permission.roles;
                    this.permissionViewForm.patchValue({
                        name: permission.name,
                        description: permission.description
                    });
                });
            }
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createAssignForm() {
        this.permissionViewForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required)
        });
    }
    close() {
        this.tabService.setSelectedTab('permissions');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - View Roles');
        this.getPermissionById();
        this.createAssignForm();
    }
};
PermissionViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-permission-view',
        template: __webpack_require__(/*! ./permission-view.component.html */ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.html"),
        styles: [__webpack_require__(/*! ./permission-view.component.css */ "./src/app/modules/usermanagement/permissions/permission-view/permission-view.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["Title"]])
], PermissionViewComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-add/role-add.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-add/role-add.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "label {\r\n    font-weight: 400;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9yb2xlcy9yb2xlLWFkZC9yb2xlLWFkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9yb2xlcy9yb2xlLWFkZC9yb2xlLWFkZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-add/role-add.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-add/role-add.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"roleAddForm\" id=\"addroleform\" (ngSubmit)=\"addRole()\" novalidate #roleform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': roleAddForm.controls['name'].errors && roleform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Role Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"name\" placeholder=\"Role Name\" required/>\r\n        <div *ngIf=\"roleAddForm.controls['name'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Role Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': roleAddForm.controls['description'].errors && roleform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Description:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n        <div *ngIf=\"roleAddForm.controls['description'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Description is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': roleAddForm.controls['permission'].errors && roleform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Permissions:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"permission\"\r\n           [items]=\"PermissionData\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Permission\"\r\n           clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"roleAddForm.controls['permission'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n          <span>Permission is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n          <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Add Role</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n  "

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-add/role-add.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-add/role-add.component.ts ***!
  \*****************************************************************************/
/*! exports provided: RoleAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleAddComponent", function() { return RoleAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let RoleAddComponent = class RoleAddComponent {
    constructor(formBuilder, tabService, permissionService, roleService, toastr, titleService, loaderService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.roleService = roleService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.submitted = false;
        /* Get all permissions for Permission select field */
        this.PermissionData = [];
        this.permissions = [];
        this.permissionService.getPermissions().subscribe((permissions) => {
            permissions.map((permission) => this.permissions.push({ id: permission.permission_id, name: permission.name }));
            this.PermissionData = this.permissions;
        }, error => {
            console.log("error", error);
        });
    }
    /* Create User add form */
    createForm() {
        this.roleAddForm = this.formBuilder.group({
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            description: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            permission: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required]
        });
    }
    /* Add role form  */
    addRole() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].adding_role);
        this.submitted = true;
        if (this.roleAddForm.invalid) {
            this.loaderService.hide();
            return;
        }
        this.roleData = {
            'name': this.roleAddForm.value.name,
            'description': this.roleAddForm.value.description,
            'permission_id': this.roleAddForm.value.permission
        };
        this.roleService.addRole(this.roleData).subscribe(role => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].role_added, 'Success! ');
            this.tabService.setSelectedTab('roles');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    close() {
        // send text to subscribers via observable subject
        this.tabService.setSelectedTab('roles');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Add Role');
        this.createForm();
    }
    ngAfterViewInit() {
    }
};
RoleAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-role-add',
        template: __webpack_require__(/*! ./role-add.component.html */ "./src/app/modules/usermanagement/roles/role-add/role-add.component.html"),
        styles: [__webpack_require__(/*! ./role-add.component.css */ "./src/app/modules/usermanagement/roles/role-add/role-add.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], RoleAddComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.css":
/*!************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-assign/role-assign.component.css ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcm9sZXMvcm9sZS1hc3NpZ24vcm9sZS1hc3NpZ24uY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.html":
/*!*************************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-assign/role-assign.component.html ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n    <form [formGroup]=\"roleAssignForm\" id=\"addUserForm\" (ngSubmit)=\"submitform()\" novalidate #roleform=\"ngForm\">\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleAssignForm.controls['name'].errors && roleform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Role Name:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Name\">\r\n          <div *ngIf=\"roleAssignForm.controls['name'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n              <span>Name is required.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleAssignForm.controls['description'].errors && roleform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Description:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n          <div *ngIf=\"roleAssignForm.controls['description'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n              <span>Description is required.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleAssignForm.controls['user'].errors && roleform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Users:</label>\r\n        <div class=\"col-sm-6\">\r\n          <ng-select\r\n            formControlName=\"user\"\r\n            [items]=\"UserData\"\r\n            bindLabel=\"name\"\r\n            bindValue=\"id\"\r\n            labelForId=\"id\"\r\n            [multiple]=\"true\"\r\n            placeholder=\"Select User\"\r\n            clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"roleAssignForm.controls['user'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n          <span>User is required.</span>\r\n      </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n          <div class=\"col-sm-8 text-right\">\r\n            <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Close</button>\r\n            <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Assign User</button>\r\n          </div>\r\n      </div>\r\n    </form>\r\n  \r\n    <!-- <pre>{{roleform.value|json}}</pre> -->\r\n  </div>\r\n  "

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-assign/role-assign.component.ts ***!
  \***********************************************************************************/
/*! exports provided: RoleAssignComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleAssignComponent", function() { return RoleAssignComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let RoleAssignComponent = class RoleAssignComponent {
    constructor(tabService, userService, roleService, toastr, titleService, loaderService) {
        this.tabService = tabService;
        this.userService = userService;
        this.roleService = roleService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        /* Get all permissions for Permission select field */
        this.UserData = [];
        this.users = [];
        this.selectedRoleUsers = [];
        this.loggedInUserId = localStorage.getItem('user_id');
        this.userService.getUsers().subscribe((users) => {
            users.map((user) => {
                if (user.user_id != this.loggedInUserId) {
                    this.users.push({ id: user.user_id, name: user.name });
                }
            });
            this.UserData = this.users;
            this.roleService.currentRole.subscribe(roleId => {
                if (roleId) {
                    this.selectedRole = roleId;
                    this.roleService.getRoleById(roleId).subscribe(role => {
                        users.map((user) => {
                            if ((user.roles.filter(r => r == role.name)).length > 0) {
                                let userExist = this.UserData.find(usr => usr.id == user.user_id);
                                if (userExist) {
                                    this.selectedRoleUsers.push(user.user_id);
                                }
                            }
                        });
                        this.roleAssignForm.patchValue({
                            name: role.name,
                            description: role.description,
                            user: this.selectedRoleUsers
                        });
                    });
                }
            });
        }, error => {
            console.log("error", error);
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createAssignForm() {
        this.roleAssignForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            user: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({}, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required)
        });
    }
    /*
      Method: submitform
      Description: Trigger when click on "Assign Role" Button
    */
    submitform() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].assigning_user);
        this.submitted = true;
        if (this.roleAssignForm.invalid) {
            this.loaderService.hide();
            return;
        }
        let Assignedusers = this.roleAssignForm.value.user;
        let users = [];
        Assignedusers.map(user => {
            users.push({ "user_id": user });
        });
        this.roleAssignData = { "users": users };
        this.roleService.assignRole(this.selectedRole, this.roleAssignData).subscribe(role => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].role_updated, 'Success! ');
            this.tabService.setSelectedTab('roles');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    close() {
        this.tabService.setSelectedTab('roles');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Assign Users');
        this.submitted = false;
        this.createAssignForm();
    }
    ngAfterViewInit() {
    }
};
RoleAssignComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-role-assign',
        template: __webpack_require__(/*! ./role-assign.component.html */ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.html"),
        styles: [__webpack_require__(/*! ./role-assign.component.css */ "./src/app/modules/usermanagement/roles/role-assign/role-assign.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_user_service__WEBPACK_IMPORTED_MODULE_4__["UserService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], RoleAssignComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-edit/role-edit.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcm9sZXMvcm9sZS1lZGl0L3JvbGUtZWRpdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-edit/role-edit.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n    <form [formGroup]=\"roleEditForm\" id=\"addUserForm\" (ngSubmit)=\"submitform()\" novalidate #roleform=\"ngForm\">\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleEditForm.controls['name'].errors && roleform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Name:</label>\r\n        <div class=\"col-sm-6\">\r\n          <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Name\">\r\n          <div *ngIf=\"roleEditForm.controls['name'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n              <span>Name is required.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleEditForm.controls['description'].errors && roleform.submitted}\">\r\n          <label class=\"col-sm-2 control-label required\">Description:</label>\r\n          <div class=\"col-sm-6\">\r\n            <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n            <div *ngIf=\"roleEditForm.controls['description'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n                <span>Description is required.</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      <div class=\"form-group row\" [ngClass]=\"{'error': roleEditForm.controls['permission'].errors && roleform.submitted}\">\r\n        <label class=\"col-sm-2 control-label required\">Permissions:</label>\r\n        <div class=\"col-sm-6\">\r\n          <ng-select\r\n            formControlName=\"permission\"\r\n            [items]=\"PermissionData\"\r\n            bindLabel=\"name\"\r\n            bindValue=\"id\"\r\n            labelForId=\"id\"\r\n            [multiple]=\"true\"\r\n            placeholder=\"Select Permission\"\r\n            clearAllText=\"Clear\"\r\n        > </ng-select>\r\n          <div *ngIf=\"roleEditForm.controls['permission'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Permission is required.</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-group row\">\r\n          <div class=\"col-sm-8 text-right\">\r\n            <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n            <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Update Role</button>\r\n          </div>\r\n      </div>\r\n    </form>\r\n  \r\n    <!-- <pre>{{roleform.value|json}}</pre> -->\r\n  </div>\r\n  "

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-edit/role-edit.component.ts ***!
  \*******************************************************************************/
/*! exports provided: RoleEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleEditComponent", function() { return RoleEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/permission.service */ "./src/app/common/services/permission.service.ts");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let RoleEditComponent = class RoleEditComponent {
    constructor(formBuilder, tabService, permissionService, roleService, loaderService, toastr, titleService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.permissionService = permissionService;
        this.roleService = roleService;
        this.loaderService = loaderService;
        this.toastr = toastr;
        this.titleService = titleService;
    }
    getRoleData() {
        /* Get all permissions for Permission select field */
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].getting_role);
        this.PermissionData = [];
        this.permissions = [];
        this.selectedRolePermissions = [];
        this.permissionService.getPermissions().subscribe((permissions) => {
            this.PermissionData.push(permissions.map((permission) => this.permissions.push({ id: permission.permission_id, name: permission.name })));
            this.PermissionData = this.permissions;
            this.roleService.currentRole.subscribe(roleId => {
                if (roleId) {
                    this.selectedRole = roleId;
                    this.roleService.getRoleById(roleId).subscribe(role => {
                        this.rolePermissions = role.permissions;
                        this.rolePermissions.map((rp) => {
                            let permisionExist = this.PermissionData.find(per => per.id == rp.permission_id);
                            if (permisionExist) {
                                this.selectedRolePermissions.push(rp.permission_id);
                            }
                        });
                        this.roleEditForm.patchValue({
                            name: role.name,
                            description: role.description,
                            permission: this.selectedRolePermissions
                        });
                    });
                }
                setTimeout(() => {
                    this.loaderService.hide();
                }, 2000);
            });
        }, error => {
            this.loaderService.hide();
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createEditForm() {
        this.roleEditForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '' }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '' }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            permission: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '' }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required)
        });
    }
    /**
     * Method: submitform
     * Description: Update user information
     */
    submitform() {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].updating_role);
        if (this.roleEditForm.invalid) {
            this.loaderService.hide();
            return;
        }
        this.roleUpdatedData = {
            name: this.roleEditForm.value.name,
            description: this.roleEditForm.value.description,
            permission_id: this.roleEditForm.value.permission
        };
        this.roleService.editRole(this.selectedRole, this.roleUpdatedData).subscribe(role => {
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].role_updated, 'Success! ');
            this.loaderService.hide();
            this.tabService.setSelectedTab('roles');
        }, error => {
            this.toastr.error(error.error['error-message'], 'Error! ');
            this.loaderService.hide();
        });
    }
    close() {
        this.tabService.setSelectedTab('roles');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Edit Role');
        this.createEditForm();
        this.getRoleData();
    }
    ngAfterViewInit() {
    }
};
RoleEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-role-edit',
        template: __webpack_require__(/*! ./role-edit.component.html */ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.html"),
        styles: [__webpack_require__(/*! ./role-edit.component.css */ "./src/app/modules/usermanagement/roles/role-edit/role-edit.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_permission_service__WEBPACK_IMPORTED_MODULE_4__["PermissionService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__["RoleService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"]])
], RoleEditComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-list/role-list.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-list/role-list.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".roleDataTable{\r\n    width: 20%;\r\n}\r\n\r\n.dataTables_wrapper.no-footer .dataTables_filter label {\r\n    display: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9yb2xlcy9yb2xlLWxpc3Qvcm9sZS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9yb2xlcy9yb2xlLWxpc3Qvcm9sZS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm9sZURhdGFUYWJsZXtcclxuICAgIHdpZHRoOiAyMCU7XHJcbn1cclxuXHJcbi5kYXRhVGFibGVzX3dyYXBwZXIubm8tZm9vdGVyIC5kYXRhVGFibGVzX2ZpbHRlciBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-list/role-list.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-list/role-list.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"usermanagement-table-wrapper\" [hidden]=\"hide\"></div>\r\n<table datatable id=\"roles_table\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n  <thead>\r\n    <tr class=\"tableHeading\" role=\"row\">\r\n      <th class=\"roleDataTable tableColumn\">\r\n        <span class=\"title\" title=\"Name\">Name</span> \r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedName')\"></i>\r\n        <input type=\"search\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" class=\"heading_search_box\" placeholder=\"Search\" id=\"expandedName\" [hidden]=\"!expandedName\"/> \r\n      </th>\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Roles\">Permissions</span> \r\n         </th>\r\n      <th>\r\n        <span class=\"title\" title=\"Options\">Options</span>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody id=\"user-details\">\r\n    <tr *ngFor=\"let role of roleData\">\r\n      <td>{{role.name}}</td>\r\n      <td>\r\n         <span *ngFor=\"let permission of role.permissions\" class=\"badge badge-pill badge-secondary\"> {{permission.name}}</span> \r\n      </td>\r\n      <td style=\"font-size: 0.5rem;\">\r\n          <i title=\"Edit\" (click)=\"OpenTab('role-edit' ,role.role_id)\" class=\"fa fa-pencil-square-o fa-2x cursor-pointer\" *ngIf=\"commonService.hasPermission('um_role_edit')\"></i>\r\n          <i title=\"Assign Users\" (click)=\"OpenTab('role-assign' ,role.role_id)\" class=\"fa fa-users fa-2x\" *ngIf=\"commonService.hasPermission('um_assign_role_to_users')\"></i>\r\n          <i title=\"View Users\" (click)=\"OpenTab('role-view' ,role.role_id)\" class=\"fa fa-user fa-2x\" *ngIf=\"commonService.hasPermission('um_role_view_users')\"></i>\r\n          <i *ngIf=\"role.name != 'kilda_admin' && commonService.hasPermission('um_role_delete')\" title=\"Delete\" (click)=\"deleteRole(role.role_id)\" class=\"fa fa-trash-o fa-2x cursor-pointer\"></i>\r\n        </td>\r\n    </tr>\r\n  </tbody>\r\n</table>"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-list/role-list.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-list/role-list.component.ts ***!
  \*******************************************************************************/
/*! exports provided: RoleListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleListComponent", function() { return RoleListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");













let RoleListComponent = class RoleListComponent {
    constructor(roleService, toastr, tabService, loaderService, titleService, modalService, renderer, commonService) {
        this.roleService = roleService;
        this.toastr = toastr;
        this.tabService = tabService;
        this.loaderService = loaderService;
        this.titleService = titleService;
        this.modalService = modalService;
        this.renderer = renderer;
        this.commonService = commonService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_3__["Subject"]();
        this.hide = false;
        this.loadCount = 0;
        this.expandedName = false;
        this.expandedPermission = false;
    }
    /* Start: Datatable settings */
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that
                            .search(this['value'])
                            .draw();
                    }
                });
            });
        });
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    /* End: Datatable settings */
    /*
     Method: getRoles
     Description: Fetch all the roles records
   */
    getRoles() {
        this.loadCount++;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].loading_roles);
        this.roleService.getRoles().subscribe((role) => {
            this.roleData = role;
            this.rerender();
            this.ngAfterViewInit();
        }, error => {
            this.loaderService.hide();
            if (error) {
                if (error.status == 0) {
                    this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].connection_refused, 'Warning');
                }
                else if (error.error['error-message']) {
                    this.toastr.error(error.error['error-message'], 'Error');
                }
                else {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].something_wrong, 'Error');
                }
            }
            else {
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].something_wrong, 'Error');
            }
        });
    }
    /*
      Method: editUser
      Description: Edit a particular user by user id
    */
    editRole(id) {
        this.roleService.selectedRole(id);
        this.tabService.setSelectedTab('role-edit');
    }
    /*
      Method: deleteRole
      Description: Delete a particular role by role id
    */
    deleteRole(id) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_10__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to delete role?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.roleService.deleteRole(id).subscribe(() => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_12__["MessageObj"].role_removed, 'Success');
                    this.getRoles();
                }, error => {
                    this.toastr.error(error.error['error-auxiliary-message']);
                });
            }
        });
    }
    ngOnInit() {
        let ref = this;
        this.titleService.setTitle('OPEN KILDA - Roles');
        this.loaderService.show();
        this.getRoles();
        this.dtOptions = {
            pageLength: 10,
            retrieve: true,
            autoWidth: true,
            colResize: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            drawCallback: function () {
                if (jQuery('#roles_table tbody tr').length < 10) {
                    jQuery('#roles_table_next').addClass('disabled');
                }
                else {
                    jQuery('#roles_table_next').removeClass('disabled');
                }
            },
            "aoColumns": [{
                    sWidth: '20%',
                }, {
                    sWidth: '50%', "bSortable": false,
                }, {
                    sWidth: '30%', "bSortable": false
                }
            ],
            language: {
                searchPlaceholder: "Search"
            },
            initComplete: function (settings, json) {
                let timerOut = ref.loadCount > 1 ? ref.roleData.length * 2.7 : 1500;
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.hide = true;
                }, timerOut);
            }
        };
    }
    /*
      Method: toggleSearch
      Description: Enable / disable of search text
    */
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    /*
      Method: OpenTab
      Description: Used to open tabs with component selector
    */
    OpenTab(tab, id) {
        this.tabService.clearSelectedTab();
        if (id) {
            this.roleService.selectedRole(id); //role
        }
        this.tabService.setSelectedTab(tab);
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_4__["DataTableDirective"])
], RoleListComponent.prototype, "datatableElement", void 0);
RoleListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-role-list',
        template: __webpack_require__(/*! ./role-list.component.html */ "./src/app/modules/usermanagement/roles/role-list/role-list.component.html"),
        styles: [__webpack_require__(/*! ./role-list.component.css */ "./src/app/modules/usermanagement/roles/role-list/role-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_role_service__WEBPACK_IMPORTED_MODULE_2__["RoleService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_5__["ToastrService"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_7__["TabService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_6__["LoaderService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_8__["Title"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_9__["NgbModal"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__["CommonService"]])
], RoleListComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-view/role-view.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-view/role-view.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".viewRole.permissionCol {\r\n    display: block;\r\n    width: 100%;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #eee;\r\n    background-image: none;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-shadow: inset 0 1px 1px rgba(0,0,0,.075);\r\n    overflow: hidden;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC9yb2xlcy9yb2xlLXZpZXcvcm9sZS12aWV3LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsV0FBVztJQUNYLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YsdUJBQXVCO0lBQ3ZCLFdBQVc7SUFDWCxzQkFBc0I7SUFDdEIsc0JBQXNCO0lBQ3RCLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsNENBQTRDO0lBQzVDLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvcm9sZXMvcm9sZS12aWV3L3JvbGUtdmlldy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnZpZXdSb2xlLnBlcm1pc3Npb25Db2wge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDZweCAxMnB4O1xyXG4gICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNDI4NTcxNDM7XHJcbiAgICBjb2xvcjogIzU1NTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZWU7XHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsMCwwLC4wNzUpO1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-view/role-view.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-view/role-view.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"roleViewForm\" id=\"addUserForm\" novalidate #roleform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': roleViewForm.controls['name'].errors && roleform.submitted}\">\r\n      <label class=\"col-sm-2 control-label\">Role Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Name\">\r\n        <div *ngIf=\"roleViewForm.controls['name'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': roleViewForm.controls['description'].errors && roleform.submitted}\">\r\n      <label class=\"col-sm-2 control-label\">Description:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"description\" placeholder=\"Description\">\r\n        <div *ngIf=\"roleViewForm.controls['description'].errors && roleform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Description is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label class=\"col-sm-2 control-label\">Users:</label>\r\n      <div class=\"col-sm-6\">\r\n          <div class=\"viewRole permissionCol\">\r\n            <span class=\"badge badge-pill badge-secondary\" *ngFor=\"let user of users\">{{user.name}}</span>\r\n          </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Back</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n  "

/***/ }),

/***/ "./src/app/modules/usermanagement/roles/role-view/role-view.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/roles/role-view/role-view.component.ts ***!
  \*******************************************************************************/
/*! exports provided: RoleViewComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RoleViewComponent", function() { return RoleViewComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var ngx_spinner__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ngx-spinner */ "./node_modules/ngx-spinner/fesm2015/ngx-spinner.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");







let RoleViewComponent = class RoleViewComponent {
    constructor(tabService, roleService, loaderService, titleService) {
        this.tabService = tabService;
        this.roleService = roleService;
        this.loaderService = loaderService;
        this.titleService = titleService;
        /* Get all roles for Role select field */
        this.roleService.currentRole.subscribe(roleId => {
            if (roleId) {
                this.roleService.getUserRoleById(roleId).subscribe(role => {
                    this.users = role.users;
                    this.roleViewForm.patchValue({
                        name: role.name,
                        description: role.description
                    });
                });
            }
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createEditForm() {
        this.roleViewForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({
            name: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required),
            description: new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormControl"]({ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required)
        });
    }
    close() {
        this.tabService.setSelectedTab('roles');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - View User');
        this.createEditForm();
    }
};
RoleViewComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-role-view',
        template: __webpack_require__(/*! ./role-view.component.html */ "./src/app/modules/usermanagement/roles/role-view/role-view.component.html"),
        styles: [__webpack_require__(/*! ./role-view.component.css */ "./src/app/modules/usermanagement/roles/role-view/role-view.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_4__["RoleService"],
        ngx_spinner__WEBPACK_IMPORTED_MODULE_5__["NgxSpinnerService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__["Title"]])
], RoleViewComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/usermanagement.component.css":
/*!*********************************************************************!*\
  !*** ./src/app/modules/usermanagement/usermanagement.component.css ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "#usermanagement_div ul li a:hover {\r\n    text-decoration: none;\r\n}\r\n\r\ntable.dataTable .fa {\r\n    font-size: 20px;\r\n    color: #262d37;\r\n    vertical-align: middle;\r\n    margin: 0 5px;\r\n    float: left;\r\n    cursor: pointer;\r\n}\r\n\r\n.user-management-tabs form label {\r\n    margin: 10px 0 0;\r\n}\r\n\r\n.dataTables_wrapper .dataTables_filter {\r\n    display: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC91c2VybWFuYWdlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGNBQWM7SUFDZCxzQkFBc0I7SUFDdEIsYUFBYTtJQUNiLFdBQVc7SUFDWCxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvdXNlcm1hbmFnZW1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiN1c2VybWFuYWdlbWVudF9kaXYgdWwgbGkgYTpob3ZlciB7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbnRhYmxlLmRhdGFUYWJsZSAuZmEge1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgY29sb3I6ICMyNjJkMzc7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgbWFyZ2luOiAwIDVweDtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4udXNlci1tYW5hZ2VtZW50LXRhYnMgZm9ybSBsYWJlbCB7XHJcbiAgICBtYXJnaW46IDEwcHggMCAwO1xyXG59XHJcblxyXG4uZGF0YVRhYmxlc193cmFwcGVyIC5kYXRhVGFibGVzX2ZpbHRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/usermanagement.component.html":
/*!**********************************************************************!*\
  !*** ./src/app/modules/usermanagement/usermanagement.component.html ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div id=\"usermanagement_div\">\r\n  <div class=\"row\">\r\n    <div id=\"exTab1\" class=\"col-lg-12 tab-wrapper\">\r\n      <ul class=\"nav nav-pills\">\r\n          <li [ngClass]=\"{'active': openedTab == 'users' || openedTab == 'user-add' || openedTab == 'user-edit'}\"><a href=\"javascript:void(0);\" (click)=\"openTab('users');\">Users</a></li>\r\n          <li *ngIf=\"commonService.hasPermission('um_role')\" [ngClass]=\"{'active': openedTab == 'roles' || openedTab == 'role-add' || openedTab == 'role-edit' || openedTab == 'role-assign' || openedTab == 'role-view' }\"><a href=\"javascript:void(0);\" (click)=\"openTab('roles');\">Roles</a></li>\r\n          <li *ngIf=\"commonService.hasPermission('um_permission')\" [ngClass]=\"{'active': openedTab == 'permissions' || openedTab == 'permission-add' || openedTab == 'permission-edit' || openedTab == 'permission-assign' || openedTab == 'permission-view'}\"><a href=\"javascript:void(0);\" (click)=\"openTab('permissions');\">Permissions</a></li>\r\n        </ul>\r\n        <div class=\"tab-content clearfix\">\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'users' || openedTab == 'user-add' || openedTab == 'user-edit'}\">\r\n            <div id=\"userTabData\">\r\n              <div *ngIf=\"openedTab == 'users'\" class=\"text-right\" style=\"padding-bottom: 10px; margin-bottom: 10px;\">\r\n                  <span class=\"btn kilda_btn pull-right\" (click)=\"openTab('user-add')\" id=\"addUserBtn\" *ngIf=\"commonService.hasPermission('um_user_add')\">Add User</span>\r\n              </div>\r\n              <div id=\"userTable_wrapper\">\r\n                <app-user-list *ngIf=\"openedTab == 'users'\"></app-user-list>\r\n                <app-user-add *ngIf=\"openedTab == 'user-add'\"></app-user-add>\r\n                <app-user-edit *ngIf=\"openedTab == 'user-edit'\"></app-user-edit>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'roles' || openedTab == 'role-add' || openedTab == 'role-edit' || openedTab == 'role-assign' || openedTab == 'role-view'}\">\r\n            <div id=\"userTabData\">\r\n              <div *ngIf=\"openedTab == 'roles'\" class=\"text-right\" style=\"padding-bottom: 10px; margin-bottom: 10px;\">\r\n                  <span class=\"btn kilda_btn pull-right\" (click)=\"openTab('role-add')\" id=\"addUserBtn\" *ngIf=\"commonService.hasPermission('um_role_add')\">Add Role</span>\r\n              </div>\r\n              <div id=\"userTable_wrapper\">\r\n                <app-role-list *ngIf=\"openedTab == 'roles'\"></app-role-list>\r\n                <app-role-add *ngIf=\"openedTab == 'role-add'\"></app-role-add>\r\n                <app-role-edit *ngIf=\"openedTab == 'role-edit'\"></app-role-edit>\r\n                <app-role-assign *ngIf=\"openedTab == 'role-assign'\"></app-role-assign>\r\n                <app-role-view *ngIf=\"openedTab == 'role-view'\"></app-role-view>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"tab-pane\" [ngClass]=\"{'active': openedTab == 'permissions' || openedTab == 'permission-add' || openedTab == 'permission-edit' || openedTab == 'permission-assign' || openedTab == 'permission-view'}\">\r\n            <div id=\"userTabData\">\r\n                <div *ngIf=\"openedTab == 'permissions'\" class=\"text-right\" style=\"padding-bottom: 10px; margin-bottom: 10px;\">\r\n                    <!-- <span class=\"btn kilda_btn pull-right\" (click)=\"openTab('permission-add')\" id=\"addUserBtn\" *ngIf=\"commonService.hasPermission('um_permission_add')\">Add Permission</span> -->\r\n                </div>\r\n                <div id=\"userTable_wrapper\">\r\n                  <app-permission-list *ngIf=\"openedTab == 'permissions'\"></app-permission-list>\r\n                  <app-permission-add *ngIf=\"openedTab == 'permission-add'\"></app-permission-add>\r\n                  <app-permission-edit *ngIf=\"openedTab == 'permission-edit'\"></app-permission-edit>  \r\n                  <app-permission-assign *ngIf=\"openedTab == 'permission-assign'\"></app-permission-assign>\r\n                  <app-permission-view *ngIf=\"openedTab == 'permission-view'\"></app-permission-view>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</div>"

/***/ }),

/***/ "./src/app/modules/usermanagement/usermanagement.component.ts":
/*!********************************************************************!*\
  !*** ./src/app/modules/usermanagement/usermanagement.component.ts ***!
  \********************************************************************/
/*! exports provided: UsermanagementComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UsermanagementComponent", function() { return UsermanagementComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm2015/router.js");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");







let UsermanagementComponent = class UsermanagementComponent {
    constructor(tabService, commonService, toaster, router) {
        this.tabService = tabService;
        this.commonService = commonService;
        this.toaster = toaster;
        this.router = router;
        this.openedTab = 'users';
        if (!this.commonService.hasPermission('menu_user_management')) {
            this.toaster.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_6__["MessageObj"].unauthorised);
            this.router.navigate(["/home"]);
        }
        this.subscription = this.tabService.getSelectedTab().subscribe(tab => {
            if (tab) {
                this.openedTab = tab.text;
            }
        });
    }
    ngOnInit() {
    }
    openTab(tab) {
        this.openedTab = tab;
    }
};
UsermanagementComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-usermanagement',
        template: __webpack_require__(/*! ./usermanagement.component.html */ "./src/app/modules/usermanagement/usermanagement.component.html"),
        styles: [__webpack_require__(/*! ./usermanagement.component.css */ "./src/app/modules/usermanagement/usermanagement.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_tab_service__WEBPACK_IMPORTED_MODULE_2__["TabService"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_3__["CommonService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
], UsermanagementComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-add/user-add.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-add/user-add.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "label {\r\n    font-weight: 400;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC91c2Vycy91c2VyLWFkZC91c2VyLWFkZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC91c2Vycy91c2VyLWFkZC91c2VyLWFkZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-add/user-add.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-add/user-add.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"userAddForm\" id=\"addUserForm\" (ngSubmit)=\"addUser()\" novalidate #userform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userAddForm.controls['email'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Email/User Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" mdInput  type=\"text\" formControlName=\"email\" placeholder=\"Email\" required/>\r\n        <div *ngIf=\"userAddForm.controls['email'].errors && userAddForm.controls['email'].errors.required && userform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Email is required.</span>\r\n        </div>\r\n        <div *ngIf=\"userAddForm.controls['email'].errors && userAddForm.controls['email'].errors.email && userform.submitted\" class=\"invalid-feedback\" >\r\n          <span>Please enter valid Email.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userAddForm.controls['name'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Name\">\r\n        <div *ngIf=\"userAddForm.controls['name'].errors && userform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userAddForm.controls['roles'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Role:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"roles\"\r\n           [items]=\"roleData\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Role\"\r\n           clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"userAddForm.controls['roles'].errors && userform.submitted\" class=\"invalid-feedback\" >\r\n          <span>Role is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label for=\"role\" class=\"col-sm-2\"></label> \r\n       <div class=\"col-sm-6\">\r\n         <input  type=\"checkbox\" formControlName=\"is2FaEnabled\" name=\"is2FaEnabled\" id=\"is2FaEnabled\" value=\"true\">\r\n         <span class=\"Enabled2FAText\">Enable 2FA</span> \r\n       </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n          <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Add User</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-add/user-add.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-add/user-add.component.ts ***!
  \*****************************************************************************/
/*! exports provided: UserAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserAddComponent", function() { return UserAddComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let UserAddComponent = class UserAddComponent {
    constructor(formBuilder, tabService, roleService, userService, toastr, titleService, loaderService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.roleService = roleService;
        this.userService = userService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.submitted = false;
        /* Get all roles for Select2 */
        this.roles = [];
        this.roleData = [];
        this.roleService.getRoles().subscribe((role) => {
            role.map((role) => this.roles.push({ id: role.role_id, name: role.name }));
            this.roleData = this.roles;
        }, error => {
            console.log("error", error);
        });
    }
    /* Create User add form */
    createForm() {
        this.userAddForm = this.formBuilder.group({
            email: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].email]],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            roles: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            is2FaEnabled: [true]
        });
    }
    /* Add user form submit function */
    addUser() {
        this.submitted = true;
        if (this.userAddForm.invalid) {
            return;
        }
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].adding_user);
        this.userData = {
            'name': this.userAddForm.value.name,
            'user_name': this.userAddForm.value.email,
            'email': this.userAddForm.value.email,
            'role_id': this.userAddForm.value.roles,
            'is2FaEnabled': this.userAddForm.value.is2FaEnabled
        };
        this.userService.addUser(this.userData).subscribe(user => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].user_added, 'Success! ');
            this.tabService.setSelectedTab('users');
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message'], 'Error! ');
        });
    }
    close() {
        // send text to subscribers via observable subject
        this.tabService.setSelectedTab('users');
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Add User');
        this.createForm();
    }
};
UserAddComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-user-add',
        template: __webpack_require__(/*! ./user-add.component.html */ "./src/app/modules/usermanagement/users/user-add/user-add.component.html"),
        styles: [__webpack_require__(/*! ./user-add.component.css */ "./src/app/modules/usermanagement/users/user-add/user-add.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_4__["RoleService"],
        _common_services_user_service__WEBPACK_IMPORTED_MODULE_5__["UserService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_6__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], UserAddComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-edit/user-edit.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlcm1hbmFnZW1lbnQvdXNlcnMvdXNlci1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQuY3NzIn0= */"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-edit/user-edit.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\" user-management-tabs\">\r\n  <form [formGroup]=\"userEditForm\" id=\"addUserForm\" (ngSubmit)=\"submitform()\" novalidate #userform=\"ngForm\">\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userEditForm.controls['email'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Email/User Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"email\" placeholder=\"Email\" required/>\r\n        <div *ngIf=\"userEditForm.controls['email'].errors && userform.submitted\" class=\"invalid-feedback\" >\r\n          <span >Email is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userEditForm.controls['name'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Name:</label>\r\n      <div class=\"col-sm-6\">\r\n        <input class=\"form-control\" type=\"text\" formControlName=\"name\" placeholder=\"Name\">\r\n        <div *ngIf=\"userEditForm.controls['name'].errors && userform.submitted\" class=\"invalid-feedback\" >\r\n            <span>Name is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\" [ngClass]=\"{'error': userEditForm.controls['roles'].errors && userform.submitted}\">\r\n      <label class=\"col-sm-2 control-label required\">Role:</label>\r\n      <div class=\"col-sm-6\">\r\n        <ng-select\r\n          formControlName=\"roles\"\r\n           [items]=\"roleData\"\r\n           bindLabel=\"name\"\r\n           bindValue=\"id\"\r\n           labelForId=\"id\"\r\n           [multiple]=\"true\"\r\n           placeholder=\"Select Role\"\r\n           clearAllText=\"Clear\"\r\n        > </ng-select>\r\n        <div *ngIf=\"userEditForm.controls['roles'].errors && userform.submitted\" class=\"invalid-feedback\" >\r\n          <span>Role is required.</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label for=\"role\" class=\"col-sm-2\"></label> \r\n       <div class=\"col-sm-6\">\r\n         <input  type=\"checkbox\" formControlName=\"is2FaEnabled\" name=\"is2FaEnabled\" id=\"is2FaEnabled\" value=\"true\">\r\n         <span class=\"Enabled2FAText\">Enable 2FA</span> \r\n       </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n        <div class=\"col-sm-8 text-right\">\r\n          <button id=\"closeUserForm\" type=\"button\" class=\"btn kilda_btn\" (click)=\"close()\">Cancel</button>\r\n          <button type=\"submit\" id=\"submitBtn\" class=\"btn kilda_btn\">Update User</button>\r\n        </div>\r\n    </div>\r\n  </form>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-edit/user-edit.component.ts ***!
  \*******************************************************************************/
/*! exports provided: UserEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserEditComponent", function() { return UserEditComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm2015/forms.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../common/services/role.service */ "./src/app/common/services/role.service.ts");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");










let UserEditComponent = class UserEditComponent {
    constructor(formBuilder, tabService, roleService, userService, toastr, titleService, loaderService) {
        this.formBuilder = formBuilder;
        this.tabService = tabService;
        this.roleService = roleService;
        this.userService = userService;
        this.toastr = toastr;
        this.titleService = titleService;
        this.loaderService = loaderService;
        this.roles = [];
        this.selectedRoles = [];
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].loading_details);
        this.roleService.getRoles().subscribe((role) => {
            role.map((role) => {
                this.roles.push({ id: role.role_id, name: role.name });
            });
            this.roleData = this.roles;
            this.userService.currentUser.subscribe(userId => {
                if (userId) {
                    this.selectedUser = userId;
                    this.userService.getUserById(userId).subscribe(user => {
                        this.r = user.roles;
                        this.r.map((u) => {
                            role.map((role) => {
                                if (role.name == u) {
                                    this.selectedRoles.push(role.role_id);
                                }
                            });
                        });
                        this.userEditForm.patchValue({
                            email: user.email,
                            name: user.name,
                            roles: this.selectedRoles,
                            is2FaEnabled: user.is2FaEnabled
                        }, { emitEvent: false });
                        setTimeout(() => {
                            this.loaderService.hide();
                        }, 2000);
                    });
                }
            });
        }, error => {
        });
    }
    /*
      Method: createEditForm
      Description: Create User edit form
    */
    createEditForm() {
        this.userEditForm = this.formBuilder.group({
            email: [{ value: '', disabled: true }, _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            name: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            roles: ['', _angular_forms__WEBPACK_IMPORTED_MODULE_2__["Validators"].required],
            is2FaEnabled: []
        });
    }
    /**
     * Method: submitform
     * Description: Update user information
     */
    submitform() {
        this.submitted = true;
        if (this.userEditForm.invalid) {
            return;
        }
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].updating_user);
        this.userUpdatedData = {
            name: this.userEditForm.value.name,
            role_id: this.userEditForm.value.roles,
            is2FaEnabled: this.userEditForm.value.is2FaEnabled
        };
        this.userService.editUser(this.selectedUser, this.userUpdatedData).subscribe(user => {
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_9__["MessageObj"].user_updated, 'Success! ');
            this.tabService.setSelectedTab('users');
            this.loaderService.hide();
        }, error => {
            this.toastr.error(error.error['error-message'], 'Error! ');
            this.loaderService.hide();
        });
    }
    close() {
        this.tabService.clearSelectedTab();
        // send text to subscribers via observable subject
        this.tabService.setSelectedTab('users');
        this.userService.clearSelectedUser();
    }
    ngOnInit() {
        this.titleService.setTitle('OPEN KILDA - Edit User');
        this.createEditForm();
    }
};
UserEditComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-user-edit',
        template: __webpack_require__(/*! ./user-edit.component.html */ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.html"),
        styles: [__webpack_require__(/*! ./user-edit.component.css */ "./src/app/modules/usermanagement/users/user-edit/user-edit.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_3__["TabService"],
        _common_services_role_service__WEBPACK_IMPORTED_MODULE_5__["RoleService"],
        _common_services_user_service__WEBPACK_IMPORTED_MODULE_6__["UserService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_4__["ToastrService"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_7__["Title"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_8__["LoaderService"]])
], UserEditComponent);



/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-list/user-list.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-list/user-list.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".dataTables_wrapper .dataTables_filter {\r\n    display: none;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC91c2Vycy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kdWxlcy91c2VybWFuYWdlbWVudC91c2Vycy91c2VyLWxpc3QvdXNlci1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGF0YVRhYmxlc193cmFwcGVyIC5kYXRhVGFibGVzX2ZpbHRlciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-list/user-list.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-list/user-list.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"usermanagement-table-wrapper\" [hidden]=\"hide\"></div>\r\n<table datatable id=\"users_table\" [dtOptions]=\"dtOptions\" [dtTrigger]=\"dtTrigger\" class=\"row-border hover\">\r\n  <thead>\r\n    <tr class=\"tableHeading\" role=\"row\">\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Email\">Email</span>\r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedEmail')\"></i>\r\n        <input class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" placeholder=\"Search\" id=\"expandedEmail\" [hidden]=\"!expandedEmail\"/>\r\n      </th>\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Name\">Name</span> \r\n        <i class=\"fa fa-search\" (click)=\"toggleSearch($event,'expandedName')\"></i>\r\n        <input id=\"source-switch\" class=\"heading_search_box\" (click)=\"stopPropagationmethod($event)\" (keydown.enter)=\"stopPropagationmethod($event)\" type=\"search\" id=\"expandedName\" placeholder=\"Search\" [hidden]=\"!expandedName\"/>\r\n      </th>\r\n      <th class=\"tableColumn\">\r\n        <span class=\"title\" title=\"Roles\">Roles</span> \r\n        </th>\r\n      <th>\r\n        <span title=\"Options\">Options</span>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody id=\"user-details\">\r\n    <tr *ngFor=\"let user of users\">\r\n      <td>\r\n        <span>{{user.email}}</span>\r\n      </td>\r\n      <td>\r\n        <span>{{user.name}}</span>\r\n      </td>\r\n      <td>\r\n        <span>{{user.roles.join(',')}}</span>\r\n      </td>\r\n      <td style=\"font-size: 0.5rem;\">\r\n        <i *ngIf=\"user.user_id != loggedInUserId && commonService.hasPermission('um_user_edit')\" title=\"Edit\" (click)=\"editUser(user.user_id)\" class=\"fa fa-pencil-square-o fa-2x cursor-pointer\"></i>\r\n        <i *ngIf=\"user.user_id != loggedInUserId && commonService.hasPermission('um_user_delete')\" title=\"Delete\" (click)=\"deleteUser(user.user_id)\" class=\"fa fa-trash-o fa-2x cursor-pointer\"></i>\r\n        <i *ngIf=\"user.user_id != loggedInUserId && commonService.hasPermission('um_user_activate')\" title=\"Active/Inactive\" (click)=\"activeInactiveUser(user.user_id, user.status)\" [ngClass]=\"{'fa-toggle-on': user.status== 'Active', 'fa-toggle-off': user.status== 'Inactive'}\" class=\"fa cursor-pointer fa-2x\"></i>\r\n        <span title=\"Reset Password\" (click)=\"resetpassword(user.user_id)\" class=\"fa-passwd-reset fa-stack cursor-pointer\" *ngIf=\"commonService.hasPermission('um_user_reset')\">\r\n          <i title=\"Reset Password\" class=\"fa fa-undo fa-stack-2x\"></i>\r\n          <i class=\"fa fa-lock fa-stack-1x\"></i>\r\n        </span>\r\n        <span *ngIf=\"user.user_id != loggedInUserId && commonService.hasPermission('um_user_reset_admin')\" title=\"Reset Password By Admin\" (click)=\"resetpasswordByAdmin(user.user_id)\" class=\"fa-passwd-reset fa-stack cursor-pointer\">\r\n          <i title=\"Reset Password By Admin\" class=\"fa fa-key fa-key-2x\"></i>\r\n        </span>\r\n        <span title=\"Reset 2FA\" *ngIf=\"user.is2FaEnabled && commonService.hasPermission('um_user_reset2fa')\" (click)=\"reset2fa(user.user_id)\" class=\"fa-passwd-reset fa-stack cursor-pointer\">\r\n          <i title=\"Reset 2FA\" class=\"fa fa-undo fa-stack-2x\"></i>\r\n        </span>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>"

/***/ }),

/***/ "./src/app/modules/usermanagement/users/user-list/user-list.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/modules/usermanagement/users/user-list/user-list.component.ts ***!
  \*******************************************************************************/
/*! exports provided: UserListComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserListComponent", function() { return UserListComponent; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var ngx_toastr__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-toastr */ "./node_modules/ngx-toastr/fesm2015/ngx-toastr.js");
/* harmony import */ var _common_services_user_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../common/services/user.service */ "./src/app/common/services/user.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm2015/index.js");
/* harmony import */ var angular_datatables__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! angular-datatables */ "./node_modules/angular-datatables/index.js");
/* harmony import */ var _common_services_tab_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../common/services/tab.service */ "./src/app/common/services/tab.service.ts");
/* harmony import */ var _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../common/services/loader.service */ "./src/app/common/services/loader.service.ts");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "./node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js");
/* harmony import */ var _common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../common/components/modalconfirmation/modalconfirmation.component */ "./src/app/common/components/modalconfirmation/modalconfirmation.component.ts");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm2015/platform-browser.js");
/* harmony import */ var _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../common/services/common.service */ "./src/app/common/services/common.service.ts");
/* harmony import */ var src_app_common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! src/app/common/components/reset-password/reset-password.component */ "./src/app/common/components/reset-password/reset-password.component.ts");
/* harmony import */ var src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! src/app/common/constants/constants */ "./src/app/common/constants/constants.ts");














let UserListComponent = class UserListComponent {
    constructor(userService, toastr, tabService, loaderService, modalService, titleService, renderer, commonService) {
        this.userService = userService;
        this.toastr = toastr;
        this.tabService = tabService;
        this.loaderService = loaderService;
        this.modalService = modalService;
        this.titleService = titleService;
        this.renderer = renderer;
        this.commonService = commonService;
        this.dtOptions = {};
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.hide = false;
        this.loadCount = 0;
        this.expandedEmail = false;
        this.expandedName = false;
        this.expandedRole = false;
    }
    /*
      Method: ngOnInit
      Description: Execute On load
    */
    ngOnInit() {
        let ref = this;
        this.titleService.setTitle('OPEN KILDA - Users');
        this.users = [];
        this.dtOptions = {
            pageLength: 10,
            retrieve: true,
            autoWidth: true,
            colResize: false,
            dom: 'tpli',
            "aLengthMenu": [[10, 20, 35, 50, -1], [10, 20, 35, 50, "All"]],
            drawCallback: function () {
                if (jQuery('#users_table tbody tr').length < 10) {
                    jQuery('#users_table_next').addClass('disabled');
                }
                else {
                    jQuery('#users_table_next').removeClass('disabled');
                }
            },
            "aoColumns": [{
                    sWidth: '30%',
                }, {
                    sWidth: '20%',
                }, {
                    sWidth: '20%', "bSortable": false
                }, {
                    sWidth: '30%', "bSortable": false
                }
            ],
            language: {
                searchPlaceholder: "Search"
            },
            initComplete: function (settings, json) {
                setTimeout(function () {
                    ref.loaderService.hide();
                    ref.hide = true;
                }, 500);
            }
        };
        this.loggedInUserId = localStorage.getItem('user_id');
        this.getUsers();
    }
    ngAfterViewInit() {
        this.dtTrigger.next();
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.columns().every(function () {
                const that = this;
                $('input', this.header()).on('keyup change', function () {
                    if (that.search() !== this['value']) {
                        that.search(this['value']).draw();
                    }
                });
            });
        });
    }
    rerender() {
        this.datatableElement.dtInstance.then((dtInstance) => {
            dtInstance.destroy();
            this.dtTrigger.next();
        });
    }
    ngOnDestroy() {
        this.dtTrigger.unsubscribe();
    }
    /*
      Method: getUsers
      Description: Provide the list of users
    */
    getUsers() {
        this.loadCount++;
        this.hide = false;
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].loading_users);
        this.userService.getUsers().subscribe((data) => {
            this.users = data;
            this.rerender();
            this.ngAfterViewInit();
        }, error => {
            if (error) {
                if (error.status == 0) {
                    this.toastr.info(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].connection_refused, 'Warning');
                }
                else if (error.error['error-message']) {
                    this.toastr.error(error.error['error-message'], 'Error');
                }
                else {
                    this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].something_wrong, 'Error');
                }
            }
            else {
                this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].something_wrong, 'Error');
            }
            this.rerender();
            this.ngAfterViewInit();
        });
    }
    /*
      Method: editUser
      Description: Edit a particular user by user id
    */
    editUser(id) {
        this.tabService.setSelectedTab('user-edit');
        this.userService.selectedUser(id);
    }
    /*
      Method: deleteUser
      Description: Delete a particular user by user id
    */
    deleteUser(id) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_9__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to delete user?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].deleting_user);
                this.userService.deleteUser(id).subscribe(() => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].user_deleted, 'Success');
                    this.getUsers();
                });
            }
        });
    }
    /*
      Method: activeInactiveUser
      Description: Active / InActive user status
    */
    activeInactiveUser(id, status) {
        let statusText;
        if (status == 'Inactive') {
            this.changeStatus = { "status": "active" };
            statusText = 'active';
        }
        else if (status == 'Active') {
            this.changeStatus = { "status": "inactive" };
            statusText = 'Inactive';
        }
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_9__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to ' + statusText + ' this user ?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].updating_user_status);
                this.userService.editUser(id, this.changeStatus).subscribe(user => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].user_status_updated, 'Success');
                    this.getUsers();
                });
            }
        });
    }
    /*
      Method: resetpassword
      Description: Reset the user password and send an email with updated imformation.
    */
    resetpassword(id) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_9__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to reset password?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].resetting_password);
                this.userService.resetpasswordByUser(id).subscribe(user => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].reset_pwd_mail_sent, 'Success');
                    this.loaderService.hide();
                }, error => {
                    this.toastr.error(error.error['error-message']);
                    this.loaderService.hide();
                });
            }
        });
    }
    /*
      Method: resetpasswordByAdmin
      Description: Reset the user password by admin.
    */
    resetpasswordByAdmin(id) {
        this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].resetting_pwd_by_admin);
        this.userService.resetpasswordByAdmin(id).subscribe(u => {
            this.loaderService.hide();
            this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].pwd_reset, 'Success');
            const modalRef = this.modalService.open(src_app_common_components_reset_password_reset_password_component__WEBPACK_IMPORTED_MODULE_12__["ResetPasswordComponent"]);
            modalRef.componentInstance.title = "User New Password";
            modalRef.componentInstance.content = u['password'];
        }, error => {
            this.loaderService.hide();
            this.toastr.error(error.error['error-message']);
        });
    }
    /*
      Method: reset2fa
      Description: Reset the user 2FA authentication.
    */
    reset2fa(id) {
        const modalRef = this.modalService.open(_common_components_modalconfirmation_modalconfirmation_component__WEBPACK_IMPORTED_MODULE_9__["ModalconfirmationComponent"]);
        modalRef.componentInstance.title = "Confirmation";
        modalRef.componentInstance.content = 'Are you sure you want to reset 2FA?';
        modalRef.result.then((response) => {
            if (response && response == true) {
                this.loaderService.show(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].resetting_twofa);
                this.userService.reset2fa(id).subscribe(user => {
                    this.toastr.success(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].twofa_reset, 'Success');
                    this.loaderService.hide();
                }, error => {
                    if (error.status == '500') {
                        this.toastr.error(error.error['error-message']);
                    }
                    else {
                        this.toastr.error(src_app_common_constants_constants__WEBPACK_IMPORTED_MODULE_13__["MessageObj"].something_wrong);
                    }
                    this.loaderService.hide();
                });
            }
        });
    }
    /*
      Method: toggleSearch
      Description: Enable / disable of search text
    */
    toggleSearch(e, inputContainer) {
        event.stopPropagation();
        this[inputContainer] = this[inputContainer] ? false : true;
        if (this[inputContainer]) {
            setTimeout(() => {
                this.renderer.selectRootElement("#" + inputContainer).focus();
            });
        }
        else {
            setTimeout(() => {
                this.renderer.selectRootElement('#' + inputContainer).value = "";
                jQuery('#' + inputContainer).trigger('change');
            });
        }
    }
    stopPropagationmethod(e) {
        event.stopPropagation();
        if (e.key === "Enter") {
            return false;
        }
    }
};
tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"])(angular_datatables__WEBPACK_IMPORTED_MODULE_5__["DataTableDirective"]),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:type", angular_datatables__WEBPACK_IMPORTED_MODULE_5__["DataTableDirective"])
], UserListComponent.prototype, "datatableElement", void 0);
UserListComponent = tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
        selector: 'app-user-list',
        template: __webpack_require__(/*! ./user-list.component.html */ "./src/app/modules/usermanagement/users/user-list/user-list.component.html"),
        styles: [__webpack_require__(/*! ./user-list.component.css */ "./src/app/modules/usermanagement/users/user-list/user-list.component.css")]
    }),
    tslib__WEBPACK_IMPORTED_MODULE_0__["__metadata"]("design:paramtypes", [_common_services_user_service__WEBPACK_IMPORTED_MODULE_3__["UserService"],
        ngx_toastr__WEBPACK_IMPORTED_MODULE_2__["ToastrService"],
        _common_services_tab_service__WEBPACK_IMPORTED_MODULE_6__["TabService"],
        _common_services_loader_service__WEBPACK_IMPORTED_MODULE_7__["LoaderService"],
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_8__["NgbModal"],
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__["Title"],
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"],
        _common_services_common_service__WEBPACK_IMPORTED_MODULE_11__["CommonService"]])
], UserListComponent);



/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false,
    apiEndPoint: location.protocol + "//" + location.host + "/openkilda/api",
    appEndPoint: location.protocol + "//" + location.host + "/openkilda",
    assetsPath: "ui/assets",
    debug: true
};
/*
 * In development mode, for easier debugging, you can ignore zone related error
 * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the
 * below file. Don't forget to comment it out in production mode
 * because it will have a performance impact when errors are thrown
 */
// import 'zone.js/dist/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm2015/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm2015/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"])
    .catch(err => console.log(err));


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! D:\Repo\Open_kildagui\ui\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map