From 7d50dd435dd6935decef054897f22a3cebd0dc98 Mon Sep 17 00:00:00 2001
From: Nikita Marchenko <nikita.marchenko@gmail.com>
Date: Sun, 20 Dec 2020 22:52:14 +0200
Subject: [PATCH] [Server42] script for generate protobuf java files

---
 src-cpp/server42/Dockerfile.protobuf          | 14 ++++++++
 .../server42/Dockerfile.protobuf.dockerignore |  1 +
 src-cpp/server42/generate_java_protobuf.sh    | 33 +++++++++++++++++++
 .../stats/messaging/flowrtt/Statistics.java   | 18 +++++-----
 4 files changed, 57 insertions(+), 9 deletions(-)
 create mode 100644 src-cpp/server42/Dockerfile.protobuf
 create mode 100644 src-cpp/server42/Dockerfile.protobuf.dockerignore
 create mode 100755 src-cpp/server42/generate_java_protobuf.sh

diff --git a/src-cpp/server42/Dockerfile.protobuf b/src-cpp/server42/Dockerfile.protobuf
new file mode 100644
index 000000000..5fe076402
--- /dev/null
+++ b/src-cpp/server42/Dockerfile.protobuf
@@ -0,0 +1,14 @@
+FROM ubuntu:18.04
+
+WORKDIR /root
+
+RUN echo 'deb http://archive.ubuntu.com/ubuntu/ bionic-proposed main' > /etc/apt/sources.list.d/bionic-proposed.list \
+  && apt-get update -y && apt-get install -y curl unzip
+
+RUN curl -L https://github.com/protocolbuffers/protobuf/releases/download/v3.8.0/protoc-3.8.0-linux-x86_64.zip --output protobuf.zip
+
+RUN unzip protobuf.zip -d protobuf && cp -r protobuf/include/* /usr/local/include/ && cp protobuf/bin/protoc /usr/local/bin/
+
+WORKDIR /
+
+CMD ["bash"]
diff --git a/src-cpp/server42/Dockerfile.protobuf.dockerignore b/src-cpp/server42/Dockerfile.protobuf.dockerignore
new file mode 100644
index 000000000..35ec3b9d7
--- /dev/null
+++ b/src-cpp/server42/Dockerfile.protobuf.dockerignore
@@ -0,0 +1 @@
+/
\ No newline at end of file
diff --git a/src-cpp/server42/generate_java_protobuf.sh b/src-cpp/server42/generate_java_protobuf.sh
new file mode 100755
index 000000000..c63bbc639
--- /dev/null
+++ b/src-cpp/server42/generate_java_protobuf.sh
@@ -0,0 +1,33 @@
+#!/usr/bin/env bash
+
+if [ ! -f "src-java" ]; then
+  echo "ERROR: The script must be run from the project directory"
+  exit 1
+fi
+
+if [ -z $(docker images -q kilda/server42dpdk-protobuf:latest) ]; then
+  cd src-cpp/server42/
+  docker build -t kilda/server42dpdk-protobuf:latest . -f Dockerfile.protobuf
+  cd -
+fi
+
+if [ ! -f "src-java/server42/server42-control-messaging/src/main/java/org/openkilda/server42/control/messaging/flowrtt/Control.java" ]; then
+  docker run -it --rm \
+  --user $(id -u):$(id -g) \
+  -v $(pwd)/src-java/server42/server42-control-messaging/src/main/java:/src-java/server42/server42-control-messaging/src/main/java \
+  -v $(pwd)/src-cpp/server42/src:/src-cpp/server42/src \
+  kilda/server42dpdk-protobuf:latest \
+  protoc --java_out src-java/server42/server42-control-messaging/src/main/java --proto_path src-cpp/server42/src \
+  src-cpp/server42/src/control.proto
+fi
+
+
+if [ ! -f "src-java/server42/server42-stats-messaging/src/main/java/org/openkilda/server42/stats/messaging/flowrtt/Statistics.java" ]; then
+  docker run -it --rm \
+  --user $(id -u):$(id -g) \
+  -v $(pwd)/src-java/server42/server42-stats-messaging/src/main/java:/src-java/server42/server42-stats-messaging/src/main/java \
+  -v $(pwd)/src-cpp/server42/src:/src-cpp/server42/src \
+  kilda/server42dpdk-protobuf:latest \
+  protoc --java_out src-java/server42/server42-stats-messaging/src/main/java --proto_path src-cpp/server42/src \
+  src-cpp/server42/src/statistics.proto
+fi
diff --git a/src-java/server42/server42-stats-messaging/src/main/java/org/openkilda/server42/stats/messaging/flowrtt/Statistics.java b/src-java/server42/server42-stats-messaging/src/main/java/org/openkilda/server42/stats/messaging/flowrtt/Statistics.java
index 5cf2b4ae9..dfec5b4e3 100644
--- a/src-java/server42/server42-stats-messaging/src/main/java/org/openkilda/server42/stats/messaging/flowrtt/Statistics.java
+++ b/src-java/server42/server42-stats-messaging/src/main/java/org/openkilda/server42/stats/messaging/flowrtt/Statistics.java
@@ -1,5 +1,5 @@
 // Generated by the protocol buffer compiler.  DO NOT EDIT!
-// source: server42/statistics.proto
+// source: statistics.proto
 
 package org.openkilda.server42.stats.messaging.flowrtt;
 
@@ -1628,14 +1628,14 @@ public final class Statistics {
       descriptor;
   static {
     java.lang.String[] descriptorData = {
-      "\n\031server42/statistics.proto\022.org.openkil" +
-      "da.server42.stats.messaging.flowrtt\"b\n\021F" +
-      "lowLatencyPacket\022\017\n\007flow_id\030\001 \001(\t\022\021\n\tdir" +
-      "ection\030\002 \001(\010\022\n\n\002t0\030\003 \001(\003\022\n\n\002t1\030\004 \001(\003\022\021\n\t" +
-      "packet_id\030\005 \001(\004\"l\n\027FlowLatencyPacketBuck" +
-      "et\022Q\n\006packet\030\001 \003(\0132A.org.openkilda.serve" +
-      "r42.stats.messaging.flowrtt.FlowLatencyP" +
-      "acketb\006proto3"
+      "\n\020statistics.proto\022.org.openkilda.server" +
+      "42.stats.messaging.flowrtt\"b\n\021FlowLatenc" +
+      "yPacket\022\017\n\007flow_id\030\001 \001(\t\022\021\n\tdirection\030\002 " +
+      "\001(\010\022\n\n\002t0\030\003 \001(\003\022\n\n\002t1\030\004 \001(\003\022\021\n\tpacket_id" +
+      "\030\005 \001(\004\"l\n\027FlowLatencyPacketBucket\022Q\n\006pac" +
+      "ket\030\001 \003(\0132A.org.openkilda.server42.stats" +
+      ".messaging.flowrtt.FlowLatencyPacketb\006pr" +
+      "oto3"
     };
     descriptor = com.google.protobuf.Descriptors.FileDescriptor
       .internalBuildGeneratedFileFrom(descriptorData,
-- 
2.17.1

