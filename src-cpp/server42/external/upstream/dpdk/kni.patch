unchanged:
--- kernel/linux/kni/kni_net.c	2019-11-29 00:13:49.000000000 +0200
+++ kernel/linux/kni/kni_net_new.c	2021-07-06 18:07:17.457994637 +0300
@@ -623,8 +623,13 @@
 /*
  * Deal with a transmit timeout.
  */
+#ifdef HAVE_TX_TIMEOUT_TXQUEUE
+static void
+kni_net_tx_timeout(struct net_device *dev, unsigned int txqueue)
+#else
 static void
 kni_net_tx_timeout(struct net_device *dev)
+#endif
 {
 	pr_debug("Transmit timeout at %ld, latency %ld\n", jiffies,
 			jiffies - dev_trans_start(dev));
unchanged:
--- kernel/linux/kni/compat.h	2019-11-29 00:13:49.000000000 +0200
+++ kernel/linux/kni/compat_new.h	2021-07-06 18:04:44.252843148 +0300
@@ -130,3 +130,7 @@
 #if KERNEL_VERSION(4, 10, 0) <= LINUX_VERSION_CODE
 #define HAVE_IOVA_TO_KVA_MAPPING_SUPPORT
 #endif
+
+#if KERNEL_VERSION(5, 6, 0) <= LINUX_VERSION_CODE
+#define HAVE_TX_TIMEOUT_TXQUEUE
+#endif
only in patch2:
unchanged:
--- kernel/linux/kni/kni_dev.h	2021-10-20 12:05:49.408190522 +0300
+++ kernel/linux/kni/kni_dev_new.h	2021-10-20 12:02:36.025000000 +0300
@@ -101,7 +101,7 @@
 	offset = iova & (PAGE_SIZE - 1);
 
 	/* Read one page struct info */
-	ret = get_user_pages_remote(tsk, tsk->mm, iova, 1,
+	ret = get_user_pages_remote(tsk->mm, iova, 1,
 				    FOLL_TOUCH, &page, NULL, NULL);
 	if (ret < 0)
 		return 0;
