@startuml
title Persistence Context handling

box "Transport Layer" #Orange
	participant Storm
	participant xyzBolt
end box

box "Service Layer" #LightYellow
	participant xyzService
end box

box "Domain Model" #LightBlue
	participant Switch
end box

box "Persistence Layer" #LightGreen
	participant PersistenceContextInitializer
	participant PersistenceContextManager
	participant PersistenceContext
	participant PersistenceImplementation
	participant SwitchRepository
	participant "DB connection /\nsession" as DB
end box

== Persistence Context for the tuple processing ==

Storm -> xyzBolt : A tuple
activate xyzBolt

xyzBolt -> PersistenceContextInitializer : Intercept the annotated method
activate PersistenceContextInitializer
PersistenceContextInitializer -> PersistenceContextManager : Init a context
activate PersistenceContextManager
PersistenceContextManager -> PersistenceContext : Produce new context instance
deactivate PersistenceContextManager
activate PersistenceContext
PersistenceContext -> PersistenceContextInitializer : New instance
deactivate PersistenceContext
deactivate PersistenceContextInitializer

xyzBolt -> xyzService
activate xyzService
xyzService -> SwitchRepository : Get Switch entity
activate SwitchRepository

SwitchRepository -> PersistenceContextManager : Query current context
activate PersistenceContextManager
PersistenceContextManager -> PersistenceContext : Query current context
deactivate PersistenceContextManager

activate PersistenceContext
PersistenceContext -> SwitchRepository : Current context
deactivate PersistenceContext

SwitchRepository -> PersistenceImplementation : query DB connection
activate PersistenceImplementation
create DB
PersistenceImplementation -> DB : Open a new\nDB connection\nfor the context\nif not open yet
DB -> PersistenceImplementation : DB connection instance
PersistenceImplementation -> PersistenceContext : DB connection instance
activate PersistenceContext
PersistenceContext -> PersistenceContext : Bound the connection\nto the current context
deactivate PersistenceContext
PersistenceImplementation -> SwitchRepository : DB connection
deactivate PersistenceImplementation

SwitchRepository -> DB : Read an entity
activate DB
DB -> DB : Get an entity\nfrom the context cache
DB -> DB : Read an entity from DB\nif it's not in the cache
SwitchRepository <- DB
deactivate DB
create Switch
Switch <- SwitchRepository : Create Switch object with persistable data
xyzService <- SwitchRepository : Return Switch object
deactivate SwitchRepository
xyzService -> Switch : Update Switch state
xyzBolt <- xyzService
deactivate xyzService

xyzBolt -> PersistenceContextInitializer : After the annotated method is executed
activate PersistenceContextInitializer
PersistenceContextInitializer -> PersistenceContextManager : Close the context
activate PersistenceContextManager
PersistenceContextManager -> PersistenceContext : Context close request
activate PersistenceContext

loop for all activate persistence implementations
PersistenceContext -> PersistenceImplementation : Context close notification
activate PersistenceImplementation
PersistenceImplementation -> DB : Close DB connection
activate DB
DB -> DB : Propagate the changes
PersistenceImplementation <- DB
destroy DB
PersistenceImplementation -> PersistenceContext : done
deactivate PersistenceImplementation
end loop

PersistenceContext -> PersistenceContextManager
deactivate PersistenceContext
PersistenceContextInitializer <- PersistenceContextManager
deactivate PersistenceContextManager
xyzBolt <- PersistenceContextInitializer
deactivate PersistenceContextInitializer

deactivate xyzBolt
@enduml
